{"version":3,"sources":["images/pokemon-destek.png","images sync /^/.//.*$","images/eg.png","images/ro.png","images/sa.png","images/tr.png","images/uk.png","images/us.png","api/db-actions.js","components/container/withMessage.tsx","components/container/statistics.tsx","components/hooks/loginReducer.tsx","store/ContextApi/UserContext.tsx","store/actionTypes.ts","components/container/withModal.tsx","components/display/Login.tsx","components/display/ConfirmEmail.tsx","components/container/withClipboard.tsx","components/container/withCard.tsx","components/display/SavedUsers.tsx","store/selectors.js","components/cards/customUser.tsx","assets/selectableOptions.ts","store/actions.ts","components/container/withSelect.tsx","components/container/withButtonGroup.tsx","components/forms/userForm.tsx","components/display/Header.tsx","components/cards/defaultUser.tsx","store/reducers/user.ts","store/reducers/card.ts","store/reducers/index.js","store/index.ts","components/hooks/createDefaultUser.tsx","components/hooks/createCustomUser.tsx","components/display/Submit.tsx","components/display/Landing.tsx","App.tsx","serviceWorker.ts","index.tsx"],"names":["module","exports","map","webpackContext","req","id","webpackContextResolve","__webpack_require__","o","e","Error","code","keys","Object","resolve","client","Stitch","initializeDefaultAppClient","db","getServiceClient","RemoteMongoClient","factory","collection","fetchUsers","a","find","asArray","then","users","deleteOne","res","console","log","logDB","email","password","credential","UserPasswordCredential","auth","loginWithCredential","authedUser","success","error","undefined","SignUp","emailPasswordClient","defaultAppClient","getProviderClient","UserPasswordAuthProviderClient","registerWithEmail","url","window","location","search","params","URLSearchParams","token","get","tokenId","emailPassClient","confirmUser","WithMessage","message","header","Message","floating","icon","Icon","name","Content","Header","items","key","label","value","getStats","fetch","method","json","stats","forEach","el","index","values","Statistics","props","state","setState","style","position","bottom","Statistic","Group","React","Component","reducer","action","type","payload","active","modal","USER","UserContext","createContext","WithModal","open","content","Modal","status","closeIcon","closeOnEscape","closeOnDimmerClick","onClose","setStatus","Login","useReducer","dispatch","history","useHistory","setLogged","useContext","handleLogin","push","handleSignup","Fragment","className","alt","title","src","top","Dimmer","Loader","Segment","placeholder","margin","Grid","columns","relaxed","stackable","Column","Form","Input","iconPosition","onChange","data","autoComplete","Button","primary","marginTop","onClick","verticalAlign","color","Divider","vertical","Confirmation","useState","setError","mail","setMail","resendMail","resendConfirmationEmail","catch","useEffect","display","ClipBoardButton","copy","text","basic","width","animated","size","visible","hidden","marginLeft","WithCard","card","onDelete","Card","Label","attached","Meta","Description","accessToken","extra","Saved","loading","this","handleDelete","user_id","deleteUser","filter","user","environment","env","length","Row","centered","getUserElements","store","getCardElements","images","require","CustomUser","useSelector","userId","Image","circular","country","wrapped","ui","as","ribbon","Flag","textAlign","countryOptions","jobOptionsBM1","jobOptionsBM2","businessModelOptions","environmentOptions","userTypeOptions","dispatchDefaultUser","connect","dispatchSelectable","selectType","replace","toUpperCase","Dropdown","selection","clearable","defaultValue","options","dispatchDeal","DEAL","deal","setDeal","handleClick","click","job","positive","left","Or","right","UserForm","date","setDate","focused","setFocused","useDispatch","jobDate","format","DATE","divided","bm","noBorder","numberOfMonths","onDateChange","onFocusChange","isOutsideRange","compact","DefaultUser","pokemon","initialState","service","combineReducers","TYPE","ENVIRONMENT","COUNTRY","BUSINESSMODEL","JOB","createStore","rootReducer","operation","commands","commandContext","jobTestContext","Submit","process","isLoading","body","JSON","stringify","responseContext","model","first_name","insertOne","finally","CreateDefaultUser","isLoadingDefault","loadDefault","serviceId","parseInt","proTestContext","proBalance","result","insertedId","err","CreateCustomUser","isLoadingCustom","loadCustom","loadUser","labelPosition","Container","createBrowserHistory","App","setVisibility","isLoggedIn","logged","addAuthListener","onUserLoggedIn","onUserLoggedOut","Sidebar","Pushable","onMouseLeave","Menu","animation","inverted","onHide","to","Item","logout","Pusher","dimmed","Provider","path","height","onMouseEnter","Boolean","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.be3d655f.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/pokemon-destek.eb7bf3da.png\";","var map = {\n\t\"./eg.png\": 537,\n\t\"./pokemon-destek.png\": 207,\n\t\"./ro.png\": 538,\n\t\"./sa.png\": 539,\n\t\"./tr.png\": 540,\n\t\"./uk.png\": 541,\n\t\"./us.png\": 542\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn map[req];\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = 536;","module.exports = __webpack_public_path__ + \"static/media/eg.ee87944d.png\";","module.exports = __webpack_public_path__ + \"static/media/ro.7c6628a2.png\";","module.exports = __webpack_public_path__ + \"static/media/sa.bb924894.png\";","module.exports = __webpack_public_path__ + \"static/media/tr.046e91f7.png\";","module.exports = __webpack_public_path__ + \"static/media/uk.b702632c.png\";","module.exports = __webpack_public_path__ + \"static/media/us.2918610d.png\";","import {\n  Stitch,\n  RemoteMongoClient,\n  //AnonymousCredential,\n  UserPasswordCredential,\n  UserPasswordAuthProviderClient,\n} from \"mongodb-stitch-browser-sdk\";\n\nexport const client = Stitch.initializeDefaultAppClient(\"ttk-ui-cvkwt\");\n\nexport const db = client\n  .getServiceClient(RemoteMongoClient.factory, \"mongodb-atlas\")\n  .db(\"ttk-ui-db\");\n\nexport const collection = db.collection(\"test\");\n\nexport async function fetchUsers() {\n  return await collection\n    .find()\n    .asArray()\n    .then((users) => users);\n}\n\nexport async function deleteUser(id) {\n  return await collection\n    .deleteOne({ id })\n    .then((res) => console.log(\"deleted\"));\n}\n\nexport async function logDB(email, password) {\n  const credential = new UserPasswordCredential(email, password);\n  try {\n    const authedUser = await client.auth.loginWithCredential(credential);\n    console.log(`successfully logged in with id: ${authedUser.id}`);\n    return { success: true, id: authedUser.id, error: undefined };\n  } catch (err) {\n    console.error(`login failed with error: ${err}`);\n    return { success: false, error: err };\n  }\n}\n\nexport async function SignUp(email, password) {\n  const emailPasswordClient = Stitch.defaultAppClient.auth.getProviderClient(\n    UserPasswordAuthProviderClient.factory\n  );\n\n  try {\n    await emailPasswordClient.registerWithEmail(email, password);\n    return { success: true, error: undefined };\n  } catch (err) {\n    console.log(err);\n    return { success: false, error: err };\n  }\n}\n\nexport async function confirmUser() {\n  const url = window.location.search;\n  const params = new URLSearchParams(url);\n  const token = params.get(\"token\");\n  const tokenId = params.get(\"tokenId\");\n\n  // Confirm the user's email/password account\n  const emailPassClient = Stitch.defaultAppClient.auth.getProviderClient(\n    UserPasswordAuthProviderClient.factory\n  );\n  return emailPassClient.confirmUser(token, tokenId);\n}\n\nexport function resendConfirmation(email) {\n  const emailPassClient = Stitch.defaultAppClient.auth.getProviderClient(\n    UserPasswordAuthProviderClient.factory\n  );\n\n  emailPassClient\n    .sendResetPasswordEmail(email)\n    .then(() => {\n      console.log(\"Successfully sent password reset email!\");\n    })\n    .catch((err) => {\n      console.log(\"Error sending password reset email:\", err);\n    });\n}\n","import React from \"react\";\nimport { Message, Icon } from \"semantic-ui-react\";\n\nconst WithMessage: React.FC<{\n  message: string;\n  header?: string;\n  error?: boolean;\n}> = ({ message, header, error = false }) => (\n  <div>\n    <Message floating icon>\n      {error ? <Icon name=\"warning circle\" /> : null}\n      <Message.Content>\n        <Message.Header>{header}</Message.Header>\n        <p>{message} </p>\n      </Message.Content>\n    </Message>\n  </div>\n);\n\nexport default WithMessage;\n","import React from \"react\";\nimport { Statistic } from \"semantic-ui-react\";\nimport fetch from \"node-fetch\";\n\nconst items = [\n  { key: \"1\", label: \"Visits\", value: \"\" },\n  { key: \"2\", label: \"Test Users\", value: \"\" },\n  { key: \"3\", label: \"Stage Users\", value: \"\" },\n  { key: \"4\", label: \"Active Members\", value: \"\" },\n];\n\nasync function getStats() {\n  const url =\n    \"https://webhooks.mongodb-stitch.com/api/client/v2.0/app/ttk-ui-cvkwt/service/userCount/incoming_webhook/statsWebHook\";\n  const stats = await fetch(url, {\n    method: \"GET\",\n  }).then((res) => res.json());\n\n  items.forEach((el, index) => {\n    el.value = Object.values<string>(stats[index])[0];\n  });\n  return items;\n}\n\nclass Statistics extends React.Component {\n  constructor(props: any) {\n    super(props);\n\n    this.state = {\n      items: {},\n    };\n  }\n  async componentDidMount() {\n    getStats().then((items) => this.setState({ items }));\n  }\n  render() {\n    return items[0].value ? (\n      <div style={{ position: \"absolute\", bottom: \"15%\" }}>\n        <Statistic.Group items={items} />\n      </div>\n    ) : null;\n  }\n}\n\nexport default Statistics;\n","type AppState = {\n  email: string;\n  password: string;\n  error: string;\n  active: boolean;\n  modal: boolean;\n};\ntype Action =\n  | { type: \"email\"; payload: string }\n  | { type: \"password\"; payload: string }\n  | { type: \"error\"; payload: string }\n  | { type: \"active\"; payload: boolean }\n  | { type: \"modal\"; payload: boolean };\n\nexport function reducer(state: AppState, action: Action): AppState {\n  switch (action.type) {\n    case \"email\":\n      return { ...state, email: action.payload };\n    case \"password\":\n      return { ...state, password: action.payload };\n    case \"error\":\n      return { ...state, error: action.payload, active: false };\n    case \"active\":\n      return { ...state, active: true };\n    case \"modal\":\n      return { ...state, modal: action.payload, active: false };\n    default:\n      return state;\n  }\n}\n","import React from \"react\";\n\nexport const UserContext = React.createContext<any>(null);\n","export enum USER {\n    TYPE = \"TYPE\",\n    ENVIRONMENT = \"ENVIRONMENT\",\n    COUNTRY = \"COUNTRY\",\n    JOB = \"JOB\",\n    DEAL = \"DEAL\",\n    PASSWORD = \"PASSWORD\",\n    BUSINESSMODEL = \"BUSINESSMODEL\",\n    DATE = \"DATE\"\n}\n\nexport const DEFAULT_USER = \"DEFAULT\";\n","import React from \"react\";\nimport { Header, Modal } from \"semantic-ui-react\";\nimport { SemanticICONS } from \"semantic-ui-react/dist/commonjs/generic\";\n\nconst WithModal: React.FC<{\n  open: any;\n  header: string;\n  content: string;\n  icon?: SemanticICONS;\n}> = ({ open, header, content, icon }) => {\n  return (\n    <Modal\n      open={open.status}\n      closeIcon\n      closeOnEscape\n      closeOnDimmerClick\n      onClose={() => open.setStatus({ type: \"modal\", payload: false })}\n    >\n      <Header icon={icon} content={header} />\n      <Modal.Content>\n        <p>{content}</p>\n      </Modal.Content>\n    </Modal>\n  );\n};\n\nexport default WithModal;\n","import React, { useReducer, useContext } from \"react\";\nimport {\n  Segment,\n  Grid,\n  Form,\n  Button,\n  Divider,\n  Dimmer,\n  Loader,\n} from \"semantic-ui-react\";\nimport { logDB, SignUp } from \"api/db-actions\";\nimport WithMessage from \"../container/withMessage\";\nimport Statistics from \"components/container/statistics\";\nimport { useHistory } from \"react-router\";\nimport { reducer } from \"components/hooks/loginReducer\";\nimport { UserContext } from \"store/ContextApi/UserContext\";\nimport WithModal from \"components/container/withModal\";\n\nexport const Login: React.FC = () => {\n  const initialState = {\n    email: \"\",\n    password: \"\",\n    active: false,\n    error: \"\",\n    modal: false,\n  };\n  const [state, dispatch] = useReducer(reducer, initialState);\n  const history = useHistory();\n  const { setLogged } = useContext(UserContext);\n\n  const handleLogin = async () => {\n    dispatch({ type: \"active\", payload: true });\n    await logDB(state.email, state.password).then((res) => {\n      if (res.success) {\n        setLogged(true);\n        history.push(\"/\");\n      } else {\n        dispatch({ type: \"error\", payload: res.error.message });\n      }\n    });\n  };\n\n  const handleSignup = async () => {\n    dispatch({ type: \"active\", payload: true });\n    await SignUp(state.email, state.password).then((res) =>\n      res.success\n        ? dispatch({ type: \"modal\", payload: true })\n        : dispatch({ type: \"error\", payload: res.error.message })\n    );\n  };\n  return (\n    <React.Fragment>\n      <WithModal\n        open={{ status: state.modal, setStatus: dispatch }}\n        header=\"Email Confirmation\"\n        content=\" Please Confirm Your Email and Come Back\"\n        icon=\"mail\"\n      />\n      <div className=\"logo\">\n        <img\n          alt=\"armut-logo\"\n          title=\"armut-logo\"\n          src=\"https://cdn.armut.com/images/tr:h-70/armut-header-logo-colour@2x.png\"\n        />\n      </div>\n      <div style={{ position: \"absolute\", top: \"20%\" }}>\n        <WithMessage\n          message={\n            !state.error\n              ? \"Log in or Sign up so that we can save your precious users\"\n              : state.error\n          }\n          header={\n            !state.error ? \"Welcome to Armut Test Tool Kit\" : \"Upps! Error...\"\n          }\n          error={state.error ? true : false}\n        />\n      </div>\n\n      <Dimmer active={state.active}>\n        <Loader />\n      </Dimmer>\n      <Segment placeholder style={{ margin: \"0\" }}>\n        <Grid columns={2} relaxed=\"very\" stackable>\n          <Grid.Column>\n            <Form>\n              <Form.Input\n                icon=\"user\"\n                iconPosition=\"left\"\n                type=\"email\"\n                label=\"Email\"\n                placeholder=\"Email\"\n                onChange={(e, data) =>\n                  dispatch({ type: \"email\", payload: data.value })\n                }\n              />\n              <Form.Input\n                icon=\"lock\"\n                iconPosition=\"left\"\n                label=\"Password\"\n                type=\"password\"\n                placeholder=\"Password\"\n                autoComplete=\"on\"\n                onChange={(e, data) =>\n                  dispatch({ type: \"password\", payload: data.value })\n                }\n              />\n            </Form>\n            <Button\n              content=\"Login\"\n              icon=\"sign in\"\n              primary\n              style={{ marginTop: \"10px\" }}\n              onClick={handleLogin}\n            />\n          </Grid.Column>\n\n          <Grid.Column verticalAlign=\"middle\">\n            <Form>\n              <Form.Input\n                icon=\"user\"\n                type=\"email\"\n                iconPosition=\"left\"\n                label=\"Email\"\n                placeholder=\"Email\"\n                onChange={(e, data) =>\n                  dispatch({ type: \"email\", payload: data.value })\n                }\n              />\n              <Form.Input\n                icon=\"lock\"\n                iconPosition=\"left\"\n                label=\"Password\"\n                type=\"password\"\n                placeholder=\"Password\"\n                autoComplete=\"on\"\n                onChange={(e, data) =>\n                  dispatch({ type: \"password\", payload: data.value })\n                }\n              />\n            </Form>\n\n            <Button\n              content=\"Sign up\"\n              icon=\"signup\"\n              type=\"submit\"\n              color=\"vk\"\n              style={{ marginTop: \"10px\" }}\n              onClick={handleSignup}\n            />\n          </Grid.Column>\n        </Grid>\n\n        <Divider vertical>Or</Divider>\n      </Segment>\n\n      <Statistics />\n    </React.Fragment>\n  );\n};\n\nexport default Login;\n","import React, { useState, useEffect } from \"react\";\nimport { confirmUser } from \"api/db-actions\";\nimport { Button, Form } from \"semantic-ui-react\";\nimport { useHistory } from \"react-router\";\nimport WithMessage from \"components/container/withMessage\";\nimport {\n  Stitch,\n  UserPasswordAuthProviderClient,\n} from \"mongodb-stitch-browser-sdk\";\n\nexport const Confirmation: React.FC = () => {\n  const [error, setError] = useState(false);\n  const [mail, setMail] = useState(\"\");\n  const history = useHistory();\n  const resendMail = async () => {\n    console.log(mail);\n    Stitch.defaultAppClient.auth\n      .getProviderClient(UserPasswordAuthProviderClient.factory)\n      .resendConfirmationEmail(mail)\n      .catch(() => console.log(\"error\"));\n  };\n  useEffect(() => {\n    try {\n      confirmUser()\n        .then((res) => history.push(\"/login\"))\n        .catch(() => setError(true));\n    } catch (error) {\n      setError(true);\n    }\n  }, [history]);\n  return (\n    <React.Fragment>\n      {error ? (\n        <div style={{ display: \"block\" }}>\n          <WithMessage\n            header=\"Please try to login with your email and password\"\n            message=\"If you cant login it means you had a trouble with confirmation of your email.\"\n          />\n          <Form.Input\n            icon=\"user\"\n            iconPosition=\"left\"\n            type=\"email\"\n            placeholder=\"Email\"\n            onChange={(e, data) => setMail(data.value)}\n            style={{ marginTop: \"25px\" }}\n          />\n          <Button style={{ marginTop: \"10px\" }} primary onClick={resendMail}>\n            Resend Confirmation Mail\n          </Button>\n        </div>\n      ) : null}\n    </React.Fragment>\n  );\n};\n","import React from \"react\";\nimport { Button, Icon } from \"semantic-ui-react\";\nimport CopyToClipboard from \"react-copy-to-clipboard\";\n\nconst ClipBoardButton: React.FC<{ name: string; copy: string }> = ({\n  name,\n  copy,\n}) => {\n  return (\n    <div style={{ margin: \"5px\" }}>\n      <CopyToClipboard text={copy}>\n        <Button\n          basic\n          type=\"button\"\n          style={{ width: \"125px\" }}\n          animated=\"fade\"\n          size=\"medium\"\n        >\n          <Button.Content visible>{name}</Button.Content>\n          <Button.Content hidden>\n            Copy <Icon style={{ marginLeft: \"4px\" }} name=\"clipboard\" />\n          </Button.Content>\n        </Button>\n      </CopyToClipboard>\n    </div>\n  );\n};\n\nexport default ClipBoardButton;\n","import React from \"react\";\nimport { Button, Card, Label } from \"semantic-ui-react\";\nimport { CardElement } from \"assets/propTypes\";\nimport ClipBoardButton from \"./withClipboard\";\n\nconst WithCard: React.FC<{ card: CardElement; onDelete: any }> = ({\n  card,\n  onDelete,\n}) => {\n  return (\n    <React.Fragment>\n      <Card color=\"red\">\n        <Label attached=\"top\">{card.id}</Label>\n        <Card.Content>\n          <Card.Header>{card.name}</Card.Header>\n          <Card.Meta>\n            <ClipBoardButton name=\"Email\" copy={card.email} />\n          </Card.Meta>\n          <Card.Meta>\n            <ClipBoardButton name=\"Password\" copy={card.password} />\n          </Card.Meta>\n          <Card.Description>\n            <ClipBoardButton name=\"Token\" copy={card.accessToken} />\n          </Card.Description>\n        </Card.Content>\n        <Card.Content extra>\n          <Button basic color=\"red\" onClick={() => onDelete(card.id)}>\n            Delete User\n          </Button>\n        </Card.Content>\n      </Card>\n    </React.Fragment>\n  );\n};\n\nexport default WithCard;\n","import React from \"react\";\nimport WithCard from \"components/container/withCard\";\nimport { fetchUsers, deleteUser } from \"api/db-actions\";\nimport { Button, Dimmer, Loader, Grid } from \"semantic-ui-react\";\nimport { history } from \"App\";\nimport { CardElement } from \"assets/propTypes\";\n\ntype Props = {\n  env: string;\n};\n\nexport default class Saved extends React.Component<Props> {\n  state: { users: CardElement[]; loading: boolean } = {\n    users: [],\n    loading: true,\n  };\n  async componentDidMount() {\n    const users = await fetchUsers();\n    this.setState({ users, loading: false });\n  }\n  render() {\n    const handleDelete = (user_id: string) => {\n      this.setState({ ...this.state, loading: true });\n      deleteUser(user_id)\n        .then(() =>\n          this.setState({\n            users: this.state.users.filter((user) => user.id !== user_id),\n            loading: false,\n          })\n        )\n        .catch(() => console.log(\"cant deleted...\"));\n    };\n    return (\n      <div>\n        {this.state.loading ? (\n          <Dimmer active={this.state.loading}>\n            <Loader />\n          </Dimmer>\n        ) : this.state.users.filter(\n            (user) => user.environment === this.props.env\n          ).length ? (\n          <Grid columns=\"equal\" style={{ margin: \"0 15%\" }}>\n            <Grid.Row centered verticalAlign=\"middle\">\n              <h1>{this.props.env}</h1>\n            </Grid.Row>\n            {this.state.users\n              .filter((user) => user.environment === this.props.env)\n              .map((user, id) => (\n                <Grid.Column key={id}>\n                  <WithCard\n                    card={user}\n                    key={id}\n                    onDelete={(user_id: string) => handleDelete(user_id)}\n                  />\n                </Grid.Column>\n              ))}\n          </Grid>\n        ) : (\n          <React.Fragment>\n            <h1>There is no saved user</h1>\n            <Button color=\"green\" onClick={() => history.push(\"/\")}>\n              Go to Create One\n            </Button>\n          </React.Fragment>\n        )}\n      </div>\n    );\n  }\n}\n","export const getUserElements = (store) => store.user;\n\nexport const getCardElements = (store) => store.card;\n","import React from \"react\";\nimport { Card, Image, Flag } from \"semantic-ui-react\";\nimport ClipBoardButton from \"components/container/withClipboard\";\nimport { useSelector } from \"react-redux\";\nimport { getUserElements, getCardElements } from \"store/selectors\";\n\nconst images = require.context(\"images\", true);\n\nconst CustomUser = () => {\n  const user = useSelector(getUserElements);\n  const { userId, email, password, accessToken } = useSelector(getCardElements);\n  return (\n    <Card centered>\n      <Image\n        circular\n        src={images(\"./\" + (user.country ? user.country : \"tr\") + \".png\")}\n        wrapped\n        ui={false}\n        label={\n          user.environment !== \"\"\n            ? {\n                as: \"a\",\n                color: user.environment === \"Test\" ? \"red\" : \"blue\",\n                content: user.environment === \"Test\" ? \"TEST\" : \"STAGE\",\n                ribbon: true,\n              }\n            : null\n        }\n      ></Image>\n      <Card.Content>\n        <Card.Header>\n          <span>Serbest Meslek Erbabı</span>\n        </Card.Header>\n        <Card.Meta>\n          ShapeShifter\n          <span>\n            <Flag\n              style={{ marginLeft: \"4px\" }}\n              name={user.country}\n              size=\"huge\"\n            />\n          </span>\n        </Card.Meta>\n        <Card.Description>\n          <div> Valar Morghulis</div>\n        </Card.Description>\n      </Card.Content>\n      <Card.Content extra textAlign=\"center\">\n        {userId ? <ClipBoardButton name=\"Id\" copy={userId} /> : null}\n        {email ? <ClipBoardButton name=\"Email\" copy={email} /> : null}\n        {password ? <ClipBoardButton name=\"Password\" copy={password} /> : null}\n        {accessToken ? (\n          <ClipBoardButton name=\"Token\" copy={accessToken} />\n        ) : null}\n      </Card.Content>\n    </Card>\n  );\n};\n\nexport default CustomUser;\n","export const countryOptions = [\n    { key: '1', value: 'tr', text: 'Turkish' },\n    { key: '2', value: 'ro', text: 'Romanian' },\n    { key: '3', value: 'sa', text: 'Arabic' },\n    { key: '4', value: 'eg', text: 'Egyptian' },\n    { key: '5', value: 'us', text: 'American' },\n    { key: '6', value: 'uk', text: 'British' },\n]\n\nexport const jobOptionsBM1 = [\n    { key: '1', value: '1', text: 'Pokemon' },\n    { key: '2', value: '142', text: 'Nakliye' },\n    { key: '3', value: '32', text: 'Badana' },\n    { key: '4', value: '31', text: 'İlaçlama' },\n    { key: '5', value: '156', text: 'Psikolog' },\n    { key: '6', value: '64', text: 'Özel Ders' },\n]\n\nexport const jobOptionsBM2 = [\n    { key: '1', value: '13', text: 'Ev Temizliği' },\n    { key: '2', value: '12', text: 'Masaj' },\n]\n\nexport const businessModelOptions = [\n    { key: '1', value: '1', text: 'BM1' },\n    { key: '2', value: '2', text: 'BM2' }\n]\nexport const environmentOptions = [\n    { key: '1', value: 'Test', text: 'Test' },\n    { key: '2', value: 'Stage', text: 'Stage' }\n]\n\n\nexport const userTypeOptions = [\n    { key: '1', value: 'Default', text: 'Default' },\n    { key: '2', value: 'Custom', text: 'Customize' }\n]","import { USER, DEFAULT_USER } from \"./actionTypes\";\n\nexport const dispatchDeal = (payload: number) => ({\n    type: USER.DEAL,\n    payload\n});\n\nexport const dispatchDate = (payload: number) => ({\n    type: USER.DATE,\n    payload\n});\n\nexport const dispatchSelectable = (type: string, payload: any) => ({\n    type,\n    payload\n})\n\nexport const dispatchDefaultUser = (payload: { user_id: string, email: string, password: string, accessToken: string, name: string }) => (\n    {\n        type: DEFAULT_USER,\n        payload\n    }\n)\n\n","import React from \"react\";\nimport { Grid, Dropdown, DropdownItemProps } from \"semantic-ui-react\";\nimport { dispatchSelectable } from \"store/actions\";\nimport { connect } from \"react-redux\";\n\ntype PropTypes = {\n  name: string;\n  options: Array<DropdownItemProps>;\n  dispatchSelectable: any;\n  defaultValue?: any;\n};\n\nconst WithSelect = (props: PropTypes) => {\n  const selectType = props.name.replace(/\\s/g, \"\").toUpperCase();\n  return (\n    <React.Fragment>\n      <Grid.Column textAlign=\"center\" className=\"selectable\">\n        <Dropdown\n          selection\n          clearable\n          placeholder={`${props.name}`}\n          defaultValue={props.defaultValue ? props.defaultValue : null}\n          options={props.options}\n          onChange={(e, data) =>\n            props.dispatchSelectable(selectType, data.value)\n          }\n        />\n      </Grid.Column>\n    </React.Fragment>\n  );\n};\n\nexport default connect(null, { dispatchSelectable })(WithSelect);\n","import React, { useState } from \"react\";\nimport { Grid, Button } from \"semantic-ui-react\";\nimport { connect, useSelector } from \"react-redux\";\nimport { dispatchDeal } from \"store/actions\";\nimport { getUserElements } from \"store/selectors\";\n\ntype PropTypes = { left: string; right: string; dispatchDeal: any };\n\nconst WithButtonGroup: React.FC<PropTypes> = (props) => {\n  let [deal, setDeal] = useState<number | undefined>(undefined);\n\n  const handleClick = (click: number): void => {\n    if (deal !== click) setDeal(click);\n    props.dispatchDeal(click);\n  };\n\n  const user = useSelector(getUserElements);\n\n  return user.job ? (\n    <React.Fragment>\n      <Grid.Column textAlign=\"center\" className=\"selectable\">\n        <Button.Group size=\"medium\" style={{ marginTop: \"30px\" }}>\n          with\n          <Button\n            type=\"button\"\n            positive={deal === 0}\n            onClick={() => handleClick(0)}\n          >\n            {props.left}\n          </Button>\n          <Button.Or />\n          <Button\n            type=\"button\"\n            positive={deal === 1}\n            onClick={() => handleClick(1)}\n          >\n            {props.right}\n          </Button>\n        </Button.Group>\n      </Grid.Column>\n    </React.Fragment>\n  ) : null;\n};\n\nexport default connect(null, { dispatchDeal })(WithButtonGroup);\n","import React, { useState, useEffect } from \"react\";\nimport { Grid, Form } from \"semantic-ui-react\";\nimport {\n  countryOptions,\n  businessModelOptions,\n  jobOptionsBM2,\n  jobOptionsBM1,\n} from \"assets/selectableOptions\";\nimport \"react-dates/initialize\";\nimport { SingleDatePicker } from \"react-dates\";\nimport \"react-dates/lib/css/_datepicker.css\";\nimport WithSelect from \"components/container/withSelect\";\nimport WithButtonGroup from \"components/container/withButtonGroup\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { getUserElements } from \"store/selectors\";\nimport moment from \"moment\";\nimport { USER } from \"store/actionTypes\";\n\nconst UserForm: React.FC = () => {\n  const user = useSelector(getUserElements);\n  const [date, setDate] = useState<moment.Moment | null>(null);\n  const [focused, setFocused] = useState<boolean | null>(false);\n  const dispatch = useDispatch();\n  useEffect(() => {\n    let jobDate = date?.format(\"YYYY-MM-DD HH:MM\");\n    dispatch({ type: USER.DATE, payload: jobDate });\n  }, [date, dispatch]);\n  return (\n    <React.Fragment>\n      <Form>\n        <Grid columns=\"equal\" divided=\"vertically\">\n          <Grid.Row centered>\n            <WithSelect name=\"Country\" options={countryOptions} />\n          </Grid.Row>\n          <Grid.Row centered>\n            <WithSelect name=\"Business Model\" options={businessModelOptions} />\n\n            <WithSelect\n              name=\"Job\"\n              options={user.bm === \"1\" ? jobOptionsBM1 : jobOptionsBM2}\n            />\n          </Grid.Row>\n          {user.job ? (\n            <Grid.Row centered>\n              <Grid.Column textAlign=\"center\">\n                <SingleDatePicker\n                  noBorder\n                  numberOfMonths={1}\n                  date={date}\n                  onDateChange={(date) => setDate(date)}\n                  focused={focused}\n                  onFocusChange={({ focused }) => setFocused(focused)}\n                  id=\"jobDate\"\n                  isOutsideRange={() => false}\n                />\n                <WithButtonGroup left=\"Quote\" right=\"Deal\" />\n              </Grid.Column>\n            </Grid.Row>\n          ) : null}\n        </Grid>\n      </Form>\n    </React.Fragment>\n  );\n};\n\nexport default UserForm;\n","import React, { Fragment } from \"react\";\nimport WithSelect from \"components/container/withSelect\";\nimport { environmentOptions, userTypeOptions } from \"assets/selectableOptions\";\nimport { Message } from \"semantic-ui-react\";\nimport { useSelector } from \"react-redux\";\nimport { getUserElements } from \"store/selectors\";\n\nconst Header: React.FC = () => {\n  const user = useSelector(getUserElements);\n  return (\n    <Fragment>\n      {user.type === \"Default\" ? (\n        <div style={{ margin: \"0 25%\" }}>\n          <Message\n            icon=\"info\"\n            header=\"Use sidebar hiding at the most left side of the page \"\n            content=\"All users created are saved, don't worry\"\n            size=\"small\"\n            compact\n          />\n        </div>\n      ) : null}\n      <WithSelect\n        name=\"Type\"\n        options={userTypeOptions}\n        defaultValue=\"Default\"\n      />\n      <WithSelect\n        name=\"Environment\"\n        options={environmentOptions}\n        defaultValue=\"Test\"\n      />\n    </Fragment>\n  );\n};\n\nexport default Header;\n","import React from \"react\";\nimport { Card, Image } from \"semantic-ui-react\";\nimport pokemon from \"images/pokemon-destek.png\";\nimport { useSelector } from \"react-redux\";\nimport { getUserElements, getCardElements } from \"store/selectors\";\nimport ClipBoardButton from \"components/container/withClipboard\";\n\nconst DefaultUser: React.FC = () => {\n  const user = useSelector(getUserElements);\n  const { userId, email, password, accessToken } = useSelector(getCardElements);\n  return (\n    <React.Fragment>\n      <Card centered>\n        <Image\n          src={pokemon}\n          wrapped\n          ui={false}\n          label={\n            user.environment !== \"\"\n              ? {\n                  as: \"a\",\n                  color: user.environment === \"Test\" ? \"red\" : \"blue\",\n                  content: user.environment === \"Test\" ? \"TEST\" : \"STAGE\",\n                  ribbon: true,\n                }\n              : null\n          }\n        />\n        <Card.Content>\n          <Card.Header>Pokemon Destek</Card.Header>\n          <Card.Meta>\n            <span>Ash Ketchum</span>\n          </Card.Meta>\n          <Card.Description>\n            I wanna be the very best like no one ever was\n          </Card.Description>\n        </Card.Content>\n        <Card.Content extra textAlign=\"center\">\n          {userId ? <ClipBoardButton name=\"Id\" copy={userId} /> : null}\n          {email ? <ClipBoardButton name=\"Email\" copy={email} /> : null}\n          {password ? (\n            <ClipBoardButton name=\"Password\" copy={password} />\n          ) : null}\n          {accessToken ? (\n            <ClipBoardButton name=\"Token\" copy={accessToken} />\n          ) : null}\n        </Card.Content>\n      </Card>\n    </React.Fragment>\n  );\n};\n\nexport default DefaultUser;\n","import { UserElement } from \"../../assets/propTypes\";\nimport { USER } from '../actionTypes';\n\nconst initialState: UserElement = {\n  type: \"Default\",\n  environment: \"Test\",\n  job: false,\n  country: 'tr',\n  service: 156,\n  deal: undefined,\n  loading: false,\n  bm: '1',\n};\n\ntype action = {\n  type: string,\n  payload: any\n}\n\n\nexport default function (state = initialState, action: action) {\n  switch (action.type) {\n\n    case USER.TYPE: {\n      return { ...state, type: action.payload }\n    }\n    case USER.ENVIRONMENT: {\n      return { ...state, environment: action.payload }\n    }\n    case USER.COUNTRY: {\n      return { ...state, country: action.payload }\n    }\n    case USER.BUSINESSMODEL: {\n      return { ...state, bm: action.payload }\n    }\n    case USER.JOB: {\n      return { ...state, service: action.payload, job: action.payload !== '' ? true : false }\n    }\n    case USER.DEAL: {\n      return { ...state, deal: action.payload }\n    }\n    case USER.DATE: {\n      return { ...state, date: action.payload }\n    }\n    default:\n      return state\n  }\n}","import { CardElement } from \"../../assets/propTypes\";\nimport { DEFAULT_USER } from \"../actionTypes\";\n\nconst initialState: CardElement = {\n    environment: \"\",\n    email: \"\",\n    password: \"\",\n    id: \"\",\n    accessToken: \"\",\n};\n\ntype action = {\n    type: string;\n    payload: any;\n};\n\nexport default function (state = initialState, action: action) {\n    switch (action.type) {\n        case DEFAULT_USER: {\n            return {\n                ...state,\n                userId: action.payload.user_id,\n                email: action.payload.email,\n                password: action.payload.password,\n                accessToken: action.payload.accessToken,\n            };\n        }\n        default:\n            return state;\n    }\n}\n","import { combineReducers } from \"redux\";\nimport user from \"./user\";\nimport card from \"./card\";\n\nexport default combineReducers({ user, card });\n","import { createStore } from \"redux\";\nimport rootReducer from \"./reducers\";\n\nexport default createStore(rootReducer);","import { useState } from \"react\";\nimport store from \"store/index\";\nimport { dispatchDefaultUser } from \"store/actions\";\nimport { db, client } from \"api/db-actions\";\n\nconst payload = {\n  operation: \"CREATEUSER\",\n  commands: [\"WITHPHONECONFIRMATION\", \"WITHPASSWORD\"],\n};\n\nexport function CreateDefaultUser(environment: string) {\n  process.env[\"NODE_TLS_REJECT_UNAUTHORIZED\"] = \"0\"; // to prevent SSL\n  const url = `https://ttk.armut.${environment}/operate`;\n\n  const [isLoading, setState] = useState(false);\n\n  const loadUser = () => {\n    setState(true);\n    fetch(url, {\n      method: \"POST\",\n      body: JSON.stringify(payload),\n    })\n      .then((res) => res.json())\n      .then((user) => {\n        const { responseContext, error } = user;\n        if (error) return;\n        const { accessToken, password, model } = responseContext[0];\n        const { user_id, email, first_name } = model;\n        if (!error) {\n          store.dispatch(\n            dispatchDefaultUser({\n              user_id,\n              email,\n              password,\n              accessToken,\n              name: first_name,\n            })\n          );\n          db.collection(\"test\").insertOne({\n            user_id: client.auth.user?.id,\n            id: user_id,\n            environment,\n            email,\n            password,\n            accessToken,\n            name: first_name,\n          });\n        }\n      })\n      .catch((error) => {\n        console.log(error);\n      })\n      .finally(() => {\n        setState(false);\n      });\n  };\n  return [isLoading, loadUser] as const; // infers [boolean, typeof load] instead of (boolean | typeof load)[]\n}\n","import { useState } from \"react\";\nimport store from \"store/index\";\nimport { dispatchDefaultUser } from \"store/actions\";\nimport { db, client } from \"api/db-actions\";\nimport { useSelector } from \"react-redux\";\nimport { getUserElements } from \"store/selectors\";\n\ninterface contextType {\n  jobDate?: string; // example \"2020-03-06 14:00\"\n  businessModel?: number;\n  serviceId?: number;\n  proBalance?: number;\n  quoteId?: number;\n  countryId?: number;\n}\n\ninterface jobContextType {\n  operation?: string;\n  commands?: Array<string | undefined>;\n  commandContext?: contextType;\n  proTestContext?: {};\n}\n\nconst payload: {\n  operation: string;\n  commands: Array<string>;\n  commandContext: contextType;\n  jobTestContext: jobContextType;\n} = {\n  operation: \"CREATEUSER\",\n  commands: [\"WITHPHONECONFIRMATION\", \"WITHPASSWORD\"],\n  commandContext: {},\n  jobTestContext: {},\n};\n\nexport function CreateCustomUser(environment: string) {\n  process.env[\"NODE_TLS_REJECT_UNAUTHORIZED\"] = \"0\"; // to prevent SSL\n  const url = `https://ttk.armut.${environment}/operate`;\n\n  const user = useSelector(getUserElements);\n  const [isLoading, setState] = useState(false);\n\n  const loadCustomUser = () => {\n    /* if (user.country) {\n      payload.commands.push(\"WITHCOUNTRYID\");\n      payload.commandContext[\"countryId\"] = user.country;\n    } */\n    if (user.job) {\n      payload.commands.push(\"WITHJOB\");\n      payload.jobTestContext = {\n        operation: \"CREATEJOB\",\n        commands: [\"WITHSERVICEID\"],\n        commandContext: {\n          serviceId: parseInt(user.service),\n        },\n      };\n      if (user.date) {\n        payload.jobTestContext.commands?.push(\"WITHJOBDATE\");\n        payload.jobTestContext.commandContext = {\n          ...payload.jobTestContext.commandContext,\n          jobDate: user.date,\n        };\n      }\n      if (user.deal === 1) {\n        payload.jobTestContext.commands?.push(\"WITHDEAL\");\n        payload.jobTestContext.commandContext = {\n          ...payload.jobTestContext.commandContext,\n          jobDate: user.date,\n        };\n        payload.jobTestContext.proTestContext = {\n          operation: [\"CREATEPRO\"],\n          commands: [\"WITHCREDITCARD\", \"WITHBALANCE\"],\n          commandContext: { proBalance: 10000 },\n        };\n      } else if (user.deal === 0) {\n        payload.jobTestContext.commands?.push(\"WITHQUOTES\");\n      }\n      console.log(payload);\n    }\n\n    setState(true);\n    fetch(url, {\n      method: \"POST\",\n      body: JSON.stringify(payload),\n    })\n      .then((res) => res.json())\n      .then((user) => {\n        const { responseContext, error } = user;\n        const { accessToken, password, model } = responseContext[0];\n        const { user_id, email, first_name } = model;\n        if (!error) {\n          store.dispatch(\n            dispatchDefaultUser({\n              user_id,\n              email,\n              password,\n              accessToken,\n              name: first_name,\n            })\n          );\n          db.collection(\"test\")\n            .insertOne({\n              user_id: client.auth.user?.id,\n              id: user_id,\n              email,\n              password,\n              accessToken,\n              first_name,\n            })\n            .then((result) =>\n              console.log(\n                `Successfully inserted item with _id: ${result.insertedId}`\n              )\n            )\n            .catch((err) => console.error(`Failed to insert item: ${err}`));\n        }\n      })\n      .finally(() => {\n        setState(false);\n      });\n  };\n  return [isLoading, loadCustomUser] as const;\n}\n","import React from \"react\";\nimport { Button, Icon, Dimmer, Loader } from \"semantic-ui-react\";\nimport { CreateDefaultUser } from \"../hooks/createDefaultUser\";\nimport { useSelector } from \"react-redux\";\nimport { getUserElements } from \"store/selectors\";\nimport { CreateCustomUser } from \"components/hooks/createCustomUser\";\n\nconst Submit: React.FC = () => {\n  const user = useSelector(getUserElements);\n\n  const [isLoadingDefault, loadDefault] = CreateDefaultUser(user.environment);\n  const [isLoadingCustom, loadCustom] = CreateCustomUser(user.environment);\n\n  const loadUser = user.type === \"Default\" ? loadDefault : loadCustom;\n  let isLoading = user.type === \"Default\" ? isLoadingDefault : isLoadingCustom;\n  return (\n    <React.Fragment>\n      <Dimmer active={isLoading}>\n        <Loader />\n      </Dimmer>\n      <Button\n        icon\n        labelPosition=\"left\"\n        id=\"saveUser\"\n        size=\"medium\"\n        color=\"instagram\"\n        type=\"button\"\n        style={{\n          display: \"inline-block\",\n          margin: \"10px auto 10px 5px\",\n        }}\n        onClick={() => loadUser()}\n      >\n        <Icon name=\"plus\" />\n        Create User\n      </Button>\n    </React.Fragment>\n  );\n};\n\nexport default Submit;\n","import React, { useEffect } from \"react\";\nimport { Grid, Container } from \"semantic-ui-react\";\nimport CustomUser from \"../cards/customUser\";\nimport UserForm from \"components/forms/userForm\";\nimport { connect, useSelector, useDispatch } from \"react-redux\";\nimport Header from \"./Header\";\nimport { getUserElements } from \"store/selectors\";\nimport DefaultUser from \"../cards/defaultUser\";\nimport Submit from \"components/display/Submit\";\nimport { USER } from \"store/actionTypes\";\n\nconst Landing = () => {\n  const user = useSelector(getUserElements);\n  const dispatch = useDispatch();\n  useEffect(() => {\n    dispatch({ type: USER.TYPE, payload: \"Default\" });\n    dispatch({ type: USER.ENVIRONMENT, payload: \"Test\" });\n  }, [dispatch]);\n  return (\n    <React.Fragment>\n      <div style={{ margin: \"0px 15%\" }}>\n        <Grid columns={user.type === \"Custom\" ? 2 : 1} divided stackable>\n          <Grid.Column>\n            <Header />\n            {user.type === \"Custom\" ? (\n              <CustomUser {...user} />\n            ) : (\n              <DefaultUser />\n            )}\n          </Grid.Column>\n          {user.type === \"Custom\" ? (\n            <React.Fragment>\n              <Grid.Column>\n                <UserForm />\n              </Grid.Column>\n            </React.Fragment>\n          ) : null}\n          <Container style={{ margin: \"15px auto\" }}>\n            <Submit />\n          </Container>\n        </Grid>\n      </div>\n    </React.Fragment>\n  );\n};\n\nexport default connect(null, null)(Landing);\n","import React, { useState } from \"react\";\nimport \"App.scss\";\nimport { Router, Switch, Route, Link, Redirect } from \"react-router-dom\";\nimport { Login } from \"components/display/Login\";\nimport { Confirmation } from \"components/display/ConfirmEmail\";\nimport Saved from \"components/display/SavedUsers\";\nimport { Sidebar, Segment, Menu, Icon } from \"semantic-ui-react\";\nimport Landing from \"components/display/Landing\";\nimport { UserContext } from \"store/ContextApi/UserContext\";\nimport { createBrowserHistory } from \"history\";\nimport { client } from \"api/db-actions\";\n\nexport const history = createBrowserHistory();\n\nfunction App() {\n  const [visible, setVisibility] = useState(false);\n  const [logged, setLogged] = useState(client.auth.isLoggedIn);\n\n  client.auth.addAuthListener({\n    onUserLoggedIn: () => setLogged(true),\n    onUserLoggedOut: () => setLogged(false),\n  });\n\n  return (\n    <Router history={history}>\n      <Sidebar.Pushable as={Segment}>\n        <Sidebar\n          onMouseLeave={() => setVisibility(false)}\n          as={Menu}\n          animation=\"overlay\"\n          icon=\"labeled\"\n          inverted\n          onHide={() => setVisibility(false)}\n          vertical\n          visible={visible}\n          width=\"thin\"\n        >\n          <Link to=\"/\">\n            <Menu.Item as=\"div\">\n              <Icon name=\"home\" />\n              Home\n            </Menu.Item>\n          </Link>\n          <Link to=\"/test-user\">\n            <Menu.Item as=\"div\">\n              <Icon name=\"folder\" />\n              Test - Saved\n            </Menu.Item>\n          </Link>\n          <Link to=\"/stage-user\">\n            <Menu.Item as=\"div\">\n              <Icon name=\"folder outline\" />\n              Stage - Saved\n            </Menu.Item>\n          </Link>\n          <Link to=\"/login\">\n            <Menu.Item as=\"div\" onClick={() => client.auth.logout()}>\n              <Icon name={!logged ? \"sign-in\" : \"sign-out\"} />\n              {!logged ? \"Log In\" : \"Log Out\"}\n            </Menu.Item>\n          </Link>\n        </Sidebar>\n        <Sidebar.Pusher dimmed={visible}>\n          <div className=\"App\">\n            <UserContext.Provider value={{ logged, setLogged }}>\n              <Switch>\n                <Route path=\"/login\">\n                  <Login />\n                </Route>\n                <Route path=\"/confirm\">\n                  <Confirmation />\n                </Route>\n                {!logged && <Redirect push to=\"/login\" />}\n                <Route path=\"/test-user\">\n                  <Saved env=\"Test\" />\n                </Route>\n                <Route path=\"/stage-user\">\n                  <Saved env=\"Stage\" />\n                </Route>\n                <Route path=\"/\">\n                  <Landing />\n                </Route>\n              </Switch>\n            </UserContext.Provider>\n          </div>\n        </Sidebar.Pusher>\n      </Sidebar.Pushable>\n      <div\n        style={{\n          position: \"absolute\",\n          left: \"0\",\n          top: \"0\",\n          width: \"3%\",\n          height: \"100%\",\n        }}\n        onMouseEnter={() => setVisibility(true)}\n      />\n    </Router>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      process.env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\nimport { Provider } from \"react-redux\";\nimport store from \"store/index\";\n\nReactDOM.render(\n  <React.Fragment>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </React.Fragment>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}