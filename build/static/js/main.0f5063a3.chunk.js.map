{"version":3,"sources":["images/pokemon-destek.png","images sync /^/.//.*$","images/eg.png","images/ro.png","images/sa.png","images/tr.png","images/uk.png","images/us.png","core/db/constants.ts","core/store/ContextApi/Context.tsx","assets/constants.ts","core/initApp.js","components/display/Auth/AuthGuard.tsx","components/display/Sidebar/SideMenu.tsx","components/container/statistics.tsx","core/store/actionTypes.ts","components/display/Auth/Login.tsx","components/display/Auth/Redirect.tsx","components/container/withClipboard.tsx","assets/selectableOptions.ts","core/store/actions.ts","components/container/withSelect.tsx","core/store/selectors.js","components/container/withButtonGroup.tsx","components/forms/userForm.tsx","components/display/CreateJob.tsx","components/container/withCard.tsx","core/db/services.tsx","services/models.ts","components/display/SavedUsers.tsx","components/cards/customUser.tsx","components/display/Header.tsx","components/cards/defaultUser.tsx","core/store/reducers/user.ts","core/store/reducers/card.ts","core/store/reducers/index.js","core/store/index.ts","services/createDefaultUser.tsx","services/shared.ts","components/display/Submit.tsx","services/createCustomUser.tsx","components/display/Landing.tsx","components/display/Routes.tsx","components/display/Sidebar/SidePush.tsx","App.tsx","serviceWorker.ts","index.tsx"],"names":["module","exports","map","webpackContext","req","id","webpackContextResolve","__webpack_require__","o","e","Error","code","keys","Object","resolve","mongodb","UserContext","React","createContext","RedirectUri","Application","Realm","collection","services","service","db","database","setAuthState","a","credentials","google","logIn","then","user","isLoggedIn","currentUser","console","log","AuthGuard","props","appRef","useRef","useState","useEffect","current","logOut","Provider","value","actions","children","SideMenu","Consumer","User","Fragment","to","Menu","Item","as","Icon","name","onClick","handleLogout","items","key","label","getStats","fetch","method","res","json","stats","forEach","el","index","values","USER","Statistics","state","setState","style","position","bottom","Statistic","Group","Component","Login","useContext","history","push","Grid","columns","relaxed","stackable","Column","icon","Subheader","Content","Button","marginTop","LoginWithGoogle","Redirection","handleAuthRedirect","Segment","height","width","Dimmer","active","Loader","size","ClipBoardButton","copy","pop","setPop","margin","Popup","on","open","onOpen","setTimeout","content","trigger","basic","type","animated","document","createElement","body","appendChild","select","execCommand","removeChild","copyToClipboard","visible","hidden","marginLeft","countryOptions","text","jobOptionsBM1","jobOptionsBM2","businessModelOptions","environmentOptions","userTypeOptions","dispatchDefaultUser","payload","connect","dispatchSelectable","selectType","replace","toUpperCase","textAlign","className","Dropdown","selection","placeholder","defaultValue","options","onChange","data","getUserElements","store","getCardElements","card","dispatchDeal","DEAL","undefined","deal","setDeal","handleClick","click","useSelector","job","positive","left","Or","right","UserForm","date","setDate","focused","setFocused","dispatch","useDispatch","jobDate","format","DATE","Form","divided","Row","centered","bm","noBorder","numberOfMonths","onDateChange","onFocusChange","isOutsideRange","CreateJob","setOpen","Modal","closeIcon","onClose","Header","image","Actions","color","labelPosition","WithCard","onDelete","Card","Image","src","imageId","wrapped","ui","marginBottom","Meta","email","password","Description","accessToken","extra","deleteOne","getAllUsers","find","users","Create","With","Saved","loading","this","handleDelete","user_id","deleteUser","filter","catch","environment","env","length","container","stretched","verticalAlign","images","require","CustomUser","userId","circular","country","ribbon","Flag","firstName","profile","header","Message","compact","DefaultUser","pokemon","initialState","combineReducers","action","TYPE","ENVIRONMENT","COUNTRY","BUSINESSMODEL","JOB","createStore","rootReducer","operation","commands","DefaultProDetails","PRO","PASSWORD","CREDITCARD","BALANCE","commandContext","proBalance","DefaultJobDetails","SERVICEID","QUOTES","serviceId","proTestContext","DefaultPayload","PHONECONFIRMATION","jobTestContext","Submit","process","url","isLoading","controller","AbortController","signal","abort","JSON","stringify","responseContext","error","model","first_name","Math","floor","random","insertOne","finally","CreateDefaultUser","isLoadingDefault","loadDefault","parse","setLoading","parseInt","JOBDATE","result","insertedId","err","CreateCustomUser","isLoadingCustom","loadCustom","loadUser","display","Container","Routes","path","component","Landing","SideBarMenu","setVisibility","Sidebar","Pushable","onMouseLeave","animation","inverted","onHide","vertical","Pusher","dimmed","top","onMouseEnter","createBrowserHistory","App","Boolean","window","location","hostname","match","ReactDOM","render","getElementById","navigator","serviceWorker","ready","registration","unregister","message"],"mappings":"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","file":"static/js/main.0f5063a3.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/pokemon-destek.eb7bf3da.png\";","var map = {\n\t\"./eg.png\": 668,\n\t\"./pokemon-destek.png\": 218,\n\t\"./ro.png\": 669,\n\t\"./sa.png\": 670,\n\t\"./tr.png\": 671,\n\t\"./uk.png\": 672,\n\t\"./us.png\": 673\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn map[req];\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = 667;","module.exports = __webpack_public_path__ + \"static/media/eg.ee87944d.png\";","module.exports = __webpack_public_path__ + \"static/media/ro.7c6628a2.png\";","module.exports = __webpack_public_path__ + \"static/media/sa.bb924894.png\";","module.exports = __webpack_public_path__ + \"static/media/tr.046e91f7.png\";","module.exports = __webpack_public_path__ + \"static/media/uk.b702632c.png\";","module.exports = __webpack_public_path__ + \"static/media/us.2918610d.png\";","export enum mongodb {\n    service = \"mongodb-atlas\",\n    collection = \"test\",\n    database = \"ttk-ui-db\",\n}","import React from \"react\";\n\nexport const UserContext = React.createContext<any>(null);\n","export const RedirectUri = \"https://ttk-ui-cvkwt.mongodbstitch.com/redirect\";\n\n//export const RedirectUri = \"http://localhost:3000/redirect\";\n\nexport const ClientId = \"291216037477-tlo72q1hnsl5kk6qph3spkc191mhnfn2.apps.googleusercontent.com\";\n\n","import * as Realm from \"realm-web\";\nimport { mongodb } from \"./db/constants\";\nimport { RedirectUri } from \"assets/constants\";\n\nexport const Application = new Realm.App({ id: \"ttk-ui-cvkwt\" });\n\nexport const Mongo = Application.services.mongodb(mongodb.service);\n\nexport const collection = Mongo.db(mongodb.database).collection(\n  mongodb.collection\n);\n\nexport async function LoginWithGoogle(setAuthState) {\n  const credentials = Realm.Credentials.google(RedirectUri);\n  Application.logIn(credentials).then((user) => {\n    setAuthState({ isLoggedIn: true, currentUser: user });\n    console.log(\"signed in successfully with id:\" + user.id);\n  });\n}\n","import React, { useState, useEffect, useRef } from \"react\";\nimport { UserContext } from \"core/store/ContextApi/Context\";\nimport { Application } from \"core/initApp\";\nimport { User } from \"realm-web\";\n\nexport function AuthGuard(props: any) {\n  const appRef = useRef(Application);\n\n  const [user, setAuthState] = useState<User<\n    Realm.DefaultFunctionsFactory,\n    any\n  > | null>(Application.currentUser);\n\n  useEffect(() => {\n    setAuthState(Application.currentUser);\n  }, [appRef.current.currentUser]);\n\n  const logOut = async () => {\n    if (Application.currentUser) {\n      await Application.currentUser?.logOut();\n      setAuthState(Application.currentUser);\n    }\n  };\n\n  return (\n    <UserContext.Provider value={{ user, actions: { logOut, setAuthState } }}>\n      {props.children}\n    </UserContext.Provider>\n  );\n}\n\n/* \nexport function AuthGuard(props: any) {\n   const appRef = useRef(Application);\n  const [authState, setAuthState] = useState({\n    isLoggedIn: Application.currentUser?.state === \"active\",\n    currentUser: Application.currentUser,\n  });\n  // eslint-disable-next-line\n\n  const handleLogout = () => {\n    Application.currentUser?.logOut();\n    setAuthState({ isLoggedIn: false, currentUser: null });\n  };\n\n  const authInfo = React.useMemo(() => {\n    const { isLoggedIn, currentUser } = authState;\n    const value = {\n      isLoggedIn,\n      currentUser,\n      actions: { handleLogout, setAuthState },\n    };\n    return value;\n  }, [authState]);\n\n  return (\n    <UserContext.Provider value={authInfo}>\n      {props.children}\n    </UserContext.Provider>\n  );\n} */\n","import React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { Menu, Icon } from \"semantic-ui-react\";\nimport { UserContext } from \"core/store/ContextApi/Context\";\n\nconst SideMenu: React.FC = () => {\n  return (\n    <UserContext.Consumer>\n      {(User) => (\n        <React.Fragment>\n          <Link to=\"/\">\n            <Menu.Item as=\"div\">\n              <Icon name=\"home\" />\n              Home\n            </Menu.Item>\n          </Link>\n          <Link to=\"/test-user\">\n            <Menu.Item as=\"div\">\n              <Icon name=\"folder\" />\n              Test - Saved\n            </Menu.Item>\n          </Link>\n          <Link to=\"/stage-user\">\n            <Menu.Item as=\"div\">\n              <Icon name=\"folder outline\" />\n              Stage - Saved\n            </Menu.Item>\n          </Link>\n          <Link to=\"/login\">\n            <Menu.Item\n              as=\"div\"\n              onClick={() => {\n                if (User.isLoggedIn) User.actions.handleLogout();\n              }}\n            >\n              <Icon name={!User.isLoggedIn ? \"sign-in\" : \"sign-out\"} />\n              {!User.isLoggedIn ? \"Log In\" : \"Log Out\"}\n            </Menu.Item>\n          </Link>\n        </React.Fragment>\n      )}\n    </UserContext.Consumer>\n  );\n};\n\nexport default SideMenu;\n","import React from \"react\";\nimport { Statistic } from \"semantic-ui-react\";\nimport fetch from \"node-fetch\";\n\nconst items = [\n  { key: \"1\", label: \"Visits\", value: \"\" },\n  { key: \"2\", label: \"Test Users\", value: \"\" },\n  { key: \"3\", label: \"Stage Users\", value: \"\" },\n  { key: \"4\", label: \"Active Members\", value: \"\" },\n];\n\nasync function getStats() {\n  const url =\n    \"https://webhooks.mongodb-stitch.com/api/client/v2.0/app/ttk-ui-cvkwt/service/userCount/incoming_webhook/statsWebHook\";\n  const stats = await fetch(url, {\n    method: \"GET\",\n  }).then((res) => res.json());\n\n  items.forEach((el, index) => {\n    el.value = Object.values<string>(stats[index])[0];\n  });\n  return items;\n}\n\nclass Statistics extends React.Component {\n  constructor(props: any) {\n    super(props);\n\n    this.state = {\n      items: {},\n    };\n  }\n  async componentDidMount() {\n    getStats().then((items) => this.setState({ items }));\n  }\n  render() {\n    return items[0].value ? (\n      <div style={{ position: \"absolute\", bottom: \"15%\" }}>\n        <Statistic.Group items={items} />\n      </div>\n    ) : null;\n  }\n}\n\nexport default Statistics;\n","export enum USER {\n    TYPE = \"TYPE\",\n    ENVIRONMENT = \"ENVIRONMENT\",\n    COUNTRY = \"COUNTRY\",\n    JOB = \"JOB\",\n    DEAL = \"DEAL\",\n    PASSWORD = \"PASSWORD\",\n    BUSINESSMODEL = \"BUSINESSMODEL\",\n    DATE = \"DATE\"\n}\n\nexport const DEFAULT_USER = \"DEFAULT\";\n","import React, { useEffect, useContext } from \"react\";\nimport { Grid, Button, Header, Icon } from \"semantic-ui-react\";\nimport Statistics from \"components/container/statistics\";\nimport { LoginWithGoogle } from \"core/initApp\";\nimport { UserContext } from \"core/store/ContextApi/Context\";\nimport { history } from \"App\";\n\nexport const Login: React.FC<any> = () => {\n  // eslint-disable-next-line\n  let User = useContext(UserContext);\n\n  useEffect(() => {\n    if (User.user) {\n      history.push(\"/\");\n    }\n    // eslint-disable-next-line\n  }, [User.user]);\n\n  return (\n    <React.Fragment>\n      <Grid columns={1} relaxed=\"very\" stackable>\n        <Grid.Column>\n          <Header as=\"h1\" icon>\n            <Icon name=\"briefcase\" />\n            Armut Test Tool Kit\n            <Header.Subheader>Manage your test users</Header.Subheader>\n            <Header.Content>\n              <Button\n                style={{ marginTop: \"20px\" }}\n                onClick={() => LoginWithGoogle(User.actions.setAuthState)}\n              >\n                Login\n              </Button>\n            </Header.Content>\n          </Header>\n        </Grid.Column>\n      </Grid>\n\n      <Statistics />\n    </React.Fragment>\n  );\n};\n\nexport default Login;\n","import React, { useEffect } from \"react\";\nimport { Segment, Dimmer, Loader } from \"semantic-ui-react\";\nimport { handleAuthRedirect } from \"realm-web\";\n\nconst Redirection: React.FC = () => {\n  useEffect(() => {\n    handleAuthRedirect();\n  }, []);\n\n  return (\n    <Segment style={{ height: \"100vh\", width: \"100vw\" }}>\n      <Dimmer active>\n        <Loader size=\"huge\">Please wait...</Loader>\n      </Dimmer>\n    </Segment>\n  );\n};\n\nexport default Redirection;\n","import React, { useState } from \"react\";\nimport { Button, Icon, Popup } from \"semantic-ui-react\";\n\nconst ClipBoardButton: React.FC<{ name: string; copy: string }> = ({\n  name,\n  copy,\n}) => {\n  const [pop, setPop] = useState(false);\n  const handleOpen = () => {\n    setPop(true);\n    setTimeout(() => {\n      setPop(false);\n    }, 3000);\n  };\n  const copyToClipboard = () => {\n    const el = document.createElement(\"textarea\");\n    el.value = copy;\n    document.body.appendChild(el);\n    el.select();\n    document.execCommand(\"copy\");\n    document.body.removeChild(el);\n  };\n\n  return (\n    <div style={{ margin: \"5px\" }}>\n      <Popup\n        on=\"click\"\n        open={pop}\n        onOpen={handleOpen}\n        content=\"Copied To Clipboard\"\n        position=\"top center\"\n        trigger={\n          <Button\n            basic\n            type=\"button\"\n            style={{ width: \"125px\" }}\n            animated=\"fade\"\n            size=\"medium\"\n            onClick={() => copyToClipboard()}\n          >\n            <Button.Content visible>{name}</Button.Content>\n            <Button.Content hidden>\n              Copy\n              <Icon style={{ marginLeft: \"4px\" }} name=\"clipboard\" />\n            </Button.Content>\n          </Button>\n        }\n      />\n    </div>\n  );\n};\n\nexport default ClipBoardButton;\n","export const countryOptions = [\n    { key: '1', value: 'tr', text: 'Turkish' },\n    { key: '2', value: 'ro', text: 'Romanian' },\n    { key: '3', value: 'sa', text: 'Arabic' },\n    { key: '4', value: 'eg', text: 'Egyptian' },\n    { key: '5', value: 'us', text: 'American' },\n    { key: '6', value: 'uk', text: 'British' },\n]\n\nexport const jobOptionsBM1 = [\n    { key: '1', value: '1', text: 'Pokemon' },\n    { key: '2', value: '142', text: 'Nakliye' },\n    { key: '3', value: '32', text: 'Badana' },\n    { key: '4', value: '31', text: 'İlaçlama' },\n    { key: '5', value: '156', text: 'Psikolog' },\n    { key: '6', value: '64', text: 'Özel Ders' },\n]\n\nexport const jobOptionsBM2 = [\n    { key: '1', value: '13', text: 'Ev Temizliği' },\n    { key: '2', value: '12', text: 'Masaj' },\n]\n\nexport const businessModelOptions = [\n    { key: '1', value: '1', text: 'BM1' },\n    { key: '2', value: '2', text: 'BM2' }\n]\nexport const environmentOptions = [\n    { key: '1', value: 'Test', text: 'Test' },\n    { key: '2', value: 'Stage', text: 'Stage' }\n]\n\n\nexport const userTypeOptions = [\n    { key: '1', value: 'Default', text: 'Default' },\n    { key: '2', value: 'Custom', text: 'Customize' }\n]","import { USER, DEFAULT_USER } from \"./actionTypes\";\n\nexport const dispatchDeal = (payload: number) => ({\n    type: USER.DEAL,\n    payload\n});\n\nexport const dispatchDate = (payload: number) => ({\n    type: USER.DATE,\n    payload\n});\n\nexport const dispatchSelectable = (type: string, payload: any) => ({\n    type,\n    payload\n})\n\nexport const dispatchDefaultUser = (payload: { user_id: string, email: string, password: string, accessToken: string, name: string, imageId: number }) => (\n    {\n        type: DEFAULT_USER,\n        payload\n    }\n)\n\n","import React from \"react\";\nimport { Grid, Dropdown, DropdownItemProps } from \"semantic-ui-react\";\nimport { dispatchSelectable } from \"core/store/actions\";\nimport { connect } from \"react-redux\";\n\ntype PropTypes = {\n  name: string;\n  options: Array<DropdownItemProps>;\n  dispatchSelectable: any;\n  defaultValue?: any;\n};\n\nconst WithSelect = (props: PropTypes) => {\n  const selectType = props.name.replace(/\\s/g, \"\").toUpperCase();\n  return (\n    <React.Fragment>\n      <Grid.Column textAlign=\"center\" className=\"selectable\">\n        <Dropdown\n          selection\n          placeholder={`${props.name}`}\n          defaultValue={props.defaultValue ? props.defaultValue : null}\n          options={props.options}\n          onChange={(e, data) =>\n            props.dispatchSelectable(selectType, data.value)\n          }\n        />\n      </Grid.Column>\n    </React.Fragment>\n  );\n};\n\nexport default connect(null, { dispatchSelectable })(WithSelect);\n","export const getUserElements = (store) => store.user;\n\nexport const getCardElements = (store) => store.card;\n","import React, { useState } from \"react\";\nimport { Grid, Button } from \"semantic-ui-react\";\nimport { connect, useSelector } from \"react-redux\";\nimport { dispatchDeal } from \"core/store/actions\";\nimport { getUserElements } from \"core/store/selectors\";\n\ntype PropTypes = { left: string; right: string; dispatchDeal: any };\n\nconst WithButtonGroup: React.FC<PropTypes> = (props) => {\n  let [deal, setDeal] = useState<number | undefined>(undefined);\n\n  const handleClick = (click: number): void => {\n    if (deal !== click) setDeal(click);\n    props.dispatchDeal(click);\n  };\n\n  const user = useSelector(getUserElements);\n\n  return user.job ? (\n    <React.Fragment>\n      <Grid.Column textAlign=\"center\" className=\"selectable\">\n        <Button.Group size=\"medium\" style={{ marginTop: \"30px\" }}>\n          with\n          <Button\n            type=\"button\"\n            positive={deal === 0}\n            onClick={() => handleClick(0)}\n          >\n            {props.left}\n          </Button>\n          <Button.Or />\n          <Button\n            type=\"button\"\n            positive={deal === 1}\n            onClick={() => handleClick(1)}\n          >\n            {props.right}\n          </Button>\n        </Button.Group>\n      </Grid.Column>\n    </React.Fragment>\n  ) : null;\n};\n\nexport default connect(null, { dispatchDeal })(WithButtonGroup);\n","import React, { useState, useEffect } from \"react\";\nimport { Grid, Form } from \"semantic-ui-react\";\nimport {\n  countryOptions,\n  businessModelOptions,\n  jobOptionsBM2,\n  jobOptionsBM1,\n} from \"assets/selectableOptions\";\nimport \"react-dates/initialize\";\nimport { SingleDatePicker } from \"react-dates\";\nimport \"react-dates/lib/css/_datepicker.css\";\nimport WithSelect from \"components/container/withSelect\";\nimport WithButtonGroup from \"components/container/withButtonGroup\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { getUserElements } from \"core/store/selectors\";\nimport moment from \"moment\";\nimport { USER } from \"core/store/actionTypes\";\n\nconst UserForm: React.FC = () => {\n  const user = useSelector(getUserElements);\n  const [date, setDate] = useState<moment.Moment | null>(null);\n  const [focused, setFocused] = useState<boolean | null>(false);\n  const dispatch = useDispatch();\n  useEffect(() => {\n    let jobDate = date?.format(\"YYYY-MM-DD HH:MM\");\n    dispatch({ type: USER.DATE, payload: jobDate });\n  }, [date, dispatch]);\n  return (\n    <React.Fragment>\n      <Form>\n        <Grid columns=\"equal\" divided=\"vertically\">\n          <Grid.Row centered>\n            <WithSelect name=\"Country\" options={countryOptions} />\n          </Grid.Row>\n          <Grid.Row centered>\n            <WithSelect name=\"Business Model\" options={businessModelOptions} />\n\n            <WithSelect\n              name=\"Job\"\n              options={user.bm === \"1\" ? jobOptionsBM1 : jobOptionsBM2}\n            />\n          </Grid.Row>\n          {user.job ? (\n            <Grid.Row centered>\n              <Grid.Column textAlign=\"center\">\n                <SingleDatePicker\n                  noBorder\n                  numberOfMonths={1}\n                  date={date}\n                  onDateChange={(date) => setDate(date)}\n                  focused={focused}\n                  onFocusChange={({ focused }) => setFocused(focused)}\n                  id=\"jobDate\"\n                  isOutsideRange={() => false}\n                />\n                <WithButtonGroup left=\"Quote\" right=\"Deal\" />\n              </Grid.Column>\n            </Grid.Row>\n          ) : null}\n        </Grid>\n      </Form>\n    </React.Fragment>\n  );\n};\n\nexport default UserForm;\n","import React, { useState } from \"react\";\nimport { Modal, Button } from \"semantic-ui-react\";\nimport UserForm from \"components/forms/userForm\";\n\nconst CreateJob = (props: any) => {\n  const [open, setOpen] = useState(false);\n  return (\n    <Modal\n      closeIcon\n      size=\"tiny\"\n      onClose={() => setOpen(false)}\n      onOpen={() => setOpen(true)}\n      open={open}\n      trigger={props.children}\n    >\n      <Modal.Header>Create Job</Modal.Header>\n      <Modal.Content image>\n        <UserForm />\n      </Modal.Content>\n      <Modal.Actions>\n        <Button color=\"black\" onClick={() => setOpen(false)}>\n          Cancel\n        </Button>\n        <Button\n          content=\"Next\"\n          labelPosition=\"right\"\n          icon=\"plus\"\n          onClick={() => {\n            setOpen(false);\n            CreateJob(\"a\");\n          }}\n          positive\n        />\n      </Modal.Actions>\n    </Modal>\n  );\n};\n\nexport default CreateJob;\n","import React from \"react\";\nimport { Button, Card, Image } from \"semantic-ui-react\";\nimport { CardElement } from \"assets/propTypes\";\nimport ClipBoardButton from \"./withClipboard\";\nimport CreateJob from \"components/display/CreateJob\";\n\nconst WithCard: React.FC<{ card: CardElement; onDelete: any; key: number }> = ({\n  card,\n  onDelete,\n}) => {\n  const handleClick = () => console.log(\"X\");\n  return (\n    <React.Fragment>\n      <Card color=\"red\">\n        <Image\n          src={`https://pokeres.bastionbot.org/images/pokemon/${card.imageId}.png`}\n          wrapped\n          ui={false}\n          size=\"small\"\n          style={{ width: \"auto\", height: \"auto\" }}\n        />\n        <Card.Content style={{ textAlign: \"center\" }}>\n          <Card.Header style={{ marginBottom: \"20px\" }}>\n            {card.name}\n          </Card.Header>\n          <Card.Meta>\n            <ClipBoardButton name=\"User Id\" copy={card.id} />\n          </Card.Meta>\n          <Card.Meta>\n            <ClipBoardButton name=\"Email\" copy={card.email} />\n          </Card.Meta>\n          <Card.Meta>\n            <ClipBoardButton name=\"Password\" copy={card.password} />\n          </Card.Meta>\n          <Card.Description>\n            <ClipBoardButton name=\"Token\" copy={card.accessToken} />\n          </Card.Description>\n        </Card.Content>\n        <Card.Content extra>\n          <Button.Group>\n            <CreateJob>\n              <Button basic color=\"green\" onClick={handleClick}>\n                Create Job\n              </Button>\n            </CreateJob>\n            <Button basic color=\"red\" onClick={() => onDelete(card.id)}>\n              Delete User\n            </Button>\n          </Button.Group>\n        </Card.Content>\n      </Card>\n    </React.Fragment>\n  );\n};\n\nexport default WithCard;\n","import { collection } from \"core/initApp\";\n\nexport async function deleteUser(id: string) {\n  return await collection.deleteOne({ id }).then(() => console.log(\"deleted\"));\n}\n\nexport async function getAllUsers() {\n  return await collection.find().then((users) => users);\n}\n","/* export interface ContextType {\n    jobDate?: string; // example \"2020-03-06 14:00\"\n    businessModel?: number;\n    serviceId?: number;\n    proBalance?: number;\n    quoteId?: number;\n    countryId?: number;\n}\n\nexport interface JobContextType {\n    operation?: string;\n    commands?: Array<string | undefined>;\n    commandContext?: Payload;\n    proTestContext?: {};\n}\nexport interface Payload {\n    operation?: string;\n    commands?: Array<string>;\n    commandContext?: ContextType;\n    jobTestContext?: JobContextType;\n};\n\nexport const PayloadBase = {\n    operation: \"CREATEUSER\",\n    commands: [\"WITHPHONECONFIRMATION\", \"WITHPASSWORD\"],\n    commandContext: {\n        operation: \"\",\n        commands: [\"\"]\n    },\n    jobTestContext: {\n        operation: \"\",\n        commands: [\"\"]\n    },\n}\n */\n\n\n///////////////////////////\n\n\nexport enum Create {\n    USER = \"CREATEUSER\",\n    PRO = \"CREATEPRO\",\n    JOB = \"CREATEJOB\",\n    QUOTE = \"PLACEQUOTE\",\n    DEAL = \"CREATEDEAL\",\n    VERIFICATION = \"ConfirmPhone\"\n};\n\nexport enum With {\n    MODEL = \"WITHMODEL\",\n    AUTHTOKEN = \"WITHAUTHTOKEN\",\n    JOB = \"WITHJOB\",\n    JOBDATE = \"WITHJOBDATE\",\n    REPLACEANSWER = \"WITHREPLACEANSWER\",\n    COUNTRY = \"WITHCOUNTRYID\",\n    JOBSTATUS = \"WITHSTATUS\",\n    BM = \"WITHBUSINESSMODEL\",\n    SERVICEID = \"WITHSERVICEID\",\n    QUOTES = \"WITHQUOTES\",\n    QUOTEPRICE = \"WITHQUOTEPRICE\",\n    QUOTECOUNT = \"WITHQUOTECOUNT\",\n    QUOTEMESSAGE = \"WITHQUOTEMESSAGE\",\n    QUOTEID = \"WITHQUOTEID\",\n    CREDITCARD = \"WITHCREDITCARD\",\n    BALANCE = \"WITHBALANCE\",\n    DEAL = \"WITHDEAL\",\n    PASSWORD = \"WITHPASSWORD\",\n    PHONECONFIRMATION = \"WITHPHONECONFIRMATON\"\n};\n\nexport interface ReplaceAnswer {\n    controlId: number,\n    values: Array<string>\n}\n\nexport interface commandContext {\n    jobStatus?: number,\n    jobDate?: string, // example \"2020-03-06 14:00\"\n    replaceAnswer?: Array<ReplaceAnswer>,\n    businessModel?: number,\n    serviceId?: number,\n    quotePrice?: number,\n    quoteCount?: number,\n    proBalance?: number,\n    quoteId?: number,\n    quoteInitialMessage?: string,\n    countryId?: number,\n    authToken?: string,\n}\n\nexport interface ResponseModel {\n    model: string,\n    operation?: string,\n    accessToken?: string,\n    refreshToken?: string,\n    password?: string\n}\nexport type corePayload = {\n    operation: Create,\n    commands?: Array<With>,\n    commandContext?: commandContext\n}\nexport type Payload = corePayload &\n{\n    jobTestContext?: corePayload & {\n        proTestContext?: corePayload\n    }\n}\n","import React from \"react\";\nimport WithCard from \"components/container/withCard\";\nimport { getAllUsers, deleteUser } from \"core/db/services\";\nimport { Button, Dimmer, Loader, Grid } from \"semantic-ui-react\";\nimport { history } from \"App\";\nimport { CardElement } from \"assets/propTypes\";\n\ntype Props = {\n  env: string;\n};\n\nexport default class Saved extends React.Component<Props> {\n  state: { users: CardElement[]; loading: boolean } = {\n    users: [],\n    loading: true,\n  };\n  async componentDidMount() {\n    const users = await getAllUsers();\n    this.setState({ users, loading: false });\n  }\n  render() {\n    const handleDelete = (user_id: string) => {\n      this.setState({ ...this.state, loading: true });\n      deleteUser(user_id)\n        .then(() =>\n          this.setState({\n            users: this.state.users.filter((user) => user.id !== user_id),\n            loading: false,\n          })\n        )\n        .catch(() => console.log(\"cant deleted...\"));\n    };\n    return (\n      <div>\n        {this.state.loading ? (\n          <Dimmer active={this.state.loading}>\n            <Loader />\n          </Dimmer>\n        ) : this.state.users.filter(\n            (user) => user.environment === this.props.env\n          ).length ? (\n          <Grid\n            container\n            stackable\n            stretched\n            columns=\"4\"\n            style={{ margin: \"auto auto\" }}\n            centered\n          >\n            <Grid.Row centered verticalAlign=\"middle\">\n              <h1>{this.props.env}</h1>\n            </Grid.Row>\n            {this.state.users\n              .filter((user) => user.environment === this.props.env)\n              .map((user, id) => (\n                <Grid.Column key={id}>\n                  <WithCard\n                    card={user}\n                    key={id}\n                    onDelete={(user_id: string) => handleDelete(user_id)}\n                  />\n                </Grid.Column>\n              ))}\n          </Grid>\n        ) : (\n          <React.Fragment>\n            <h1>There is no saved user</h1>\n            <Button color=\"green\" onClick={() => history.push(\"/\")}>\n              Go to Create One\n            </Button>\n          </React.Fragment>\n        )}\n      </div>\n    );\n  }\n}\n","import React from \"react\";\nimport { Card, Image, Flag, Icon } from \"semantic-ui-react\";\nimport ClipBoardButton from \"components/container/withClipboard\";\nimport { useSelector } from \"react-redux\";\nimport { getUserElements, getCardElements } from \"../../core/store/selectors\";\n\nconst images = require.context(\"images\", true);\n\nconst CustomUser = () => {\n  const user = useSelector(getUserElements);\n  const { userId, email, password, accessToken } = useSelector(getCardElements);\n  return (\n    <Card centered>\n      <Image\n        circular\n        src={images(\"./\" + (user.country ? user.country : \"tr\") + \".png\")}\n        wrapped\n        ui={false}\n        label={\n          user.environment !== \"\"\n            ? {\n                color: user.environment === \"Test\" ? \"red\" : \"blue\",\n                content: user.environment === \"Test\" ? \"TEST\" : \"STAGE\",\n                ribbon: true,\n              }\n            : null\n        }\n      ></Image>\n      <Card.Content>\n        <Card.Header>\n          <span>Serbest Meslek Erbabı</span>\n        </Card.Header>\n        <Card.Meta>\n          ShapeShifter\n          <span>\n            <Flag\n              style={{ marginLeft: \"4px\" }}\n              name={user.country}\n              size=\"huge\"\n            />\n          </span>\n        </Card.Meta>\n        <Card.Description>\n          <div> Valar Morghulis</div>\n        </Card.Description>\n      </Card.Content>\n      <Card.Content extra textAlign=\"center\">\n        {userId ? <ClipBoardButton name=\"Id\" copy={userId} /> : null}\n        {email ? <ClipBoardButton name=\"Email\" copy={email} /> : null}\n        {password ? <ClipBoardButton name=\"Password\" copy={password} /> : null}\n        {accessToken ? (\n          <ClipBoardButton name=\"Token\" copy={accessToken} />\n        ) : null}\n      </Card.Content>\n      <Icon name=\"user\" />\n    </Card>\n  );\n};\n\nexport default CustomUser;\n","import React, { Fragment } from \"react\";\nimport WithSelect from \"components/container/withSelect\";\nimport { environmentOptions, userTypeOptions } from \"assets/selectableOptions\";\nimport { Message } from \"semantic-ui-react\";\nimport { useSelector } from \"react-redux\";\nimport { getUserElements } from \"core/store/selectors\";\nimport { Application } from \"core/initApp\";\n\nconst Header: React.FC = () => {\n  const user = useSelector(getUserElements);\n  let firstName = Application.currentUser?.profile.firstName;\n  let header = `Hi ${firstName}, do not forget to use sidebar hiding at the most left side of the page`;\n  return (\n    <Fragment>\n      {user.type === \"Default\" ? (\n        <div style={{ margin: \"0 25%\" }}>\n          <Message\n            icon=\"info\"\n            header={header}\n            content=\"All users created are saved, don't worry\"\n            size=\"small\"\n            compact\n          />\n        </div>\n      ) : null}\n      <WithSelect\n        name=\"Type\"\n        options={userTypeOptions}\n        defaultValue=\"Default\"\n      />\n      <WithSelect\n        name=\"Environment\"\n        options={environmentOptions}\n        defaultValue=\"Test\"\n      />\n    </Fragment>\n  );\n};\n\nexport default Header;\n","import React from \"react\";\nimport { Card, Image } from \"semantic-ui-react\";\nimport pokemon from \"images/pokemon-destek.png\";\nimport { useSelector } from \"react-redux\";\nimport { getUserElements, getCardElements } from \"core/store/selectors\";\nimport ClipBoardButton from \"components/container/withClipboard\";\n\nconst DefaultUser: React.FC = () => {\n  const user = useSelector(getUserElements);\n  const { userId, email, password, accessToken } = useSelector(getCardElements);\n  return (\n    <React.Fragment>\n      <Card centered>\n        <Image\n          src={pokemon}\n          wrapped\n          ui={false}\n          label={\n            user.environment !== \"\"\n              ? {\n                  as: \"a\",\n                  color: user.environment === \"Test\" ? \"red\" : \"blue\",\n                  content: user.environment === \"Test\" ? \"TEST\" : \"STAGE\",\n                  ribbon: true,\n                }\n              : null\n          }\n        />\n        <Card.Content>\n          <Card.Header>Pokemon Destek</Card.Header>\n          <Card.Meta>\n            <span>Ash Ketchum</span>\n          </Card.Meta>\n          <Card.Description>\n            I wanna be the very best like no one ever was\n          </Card.Description>\n        </Card.Content>\n        <Card.Content extra textAlign=\"center\">\n          {userId ? <ClipBoardButton name=\"Id\" copy={userId} /> : null}\n          {email ? <ClipBoardButton name=\"Email\" copy={email} /> : null}\n          {password ? (\n            <ClipBoardButton name=\"Password\" copy={password} />\n          ) : null}\n          {accessToken ? (\n            <ClipBoardButton name=\"Token\" copy={accessToken} />\n          ) : null}\n        </Card.Content>\n      </Card>\n    </React.Fragment>\n  );\n};\n\nexport default DefaultUser;\n","import { UserElement } from \"../../../assets/propTypes\";\nimport { USER } from '../actionTypes';\n\nconst initialState: UserElement = {\n  type: \"Default\",\n  environment: \"Test\",\n  job: false,\n  country: 'tr',\n  service: 156,\n  deal: undefined,\n  loading: false,\n  bm: '1',\n};\n\ntype action = {\n  type: string,\n  payload: any\n}\n\n\nexport default function (state = initialState, action: action) {\n  switch (action.type) {\n\n    case USER.TYPE: {\n      return { ...state, type: action.payload }\n    }\n    case USER.ENVIRONMENT: {\n      return { ...state, environment: action.payload }\n    }\n    case USER.COUNTRY: {\n      return { ...state, country: action.payload }\n    }\n    case USER.BUSINESSMODEL: {\n      return { ...state, bm: action.payload }\n    }\n    case USER.JOB: {\n      return { ...state, service: action.payload, job: action.payload !== '' ? true : false }\n    }\n    case USER.DEAL: {\n      return { ...state, deal: action.payload }\n    }\n    case USER.DATE: {\n      return { ...state, date: action.payload }\n    }\n    default:\n      return state\n  }\n}","import { CardElement } from \"../../../assets/propTypes\";\nimport { DEFAULT_USER } from \"../actionTypes\";\n\nconst initialState: CardElement = {\n    environment: \"\",\n    email: \"\",\n    password: \"\",\n    id: \"\",\n    accessToken: \"\",\n    imageId: undefined\n};\n\ntype action = {\n    type: string;\n    payload: any;\n};\n\nexport default function (state = initialState, action: action) {\n    switch (action.type) {\n        case DEFAULT_USER: {\n            return {\n                ...state,\n                userId: action.payload.user_id,\n                email: action.payload.email,\n                password: action.payload.password,\n                accessToken: action.payload.accessToken,\n            };\n        }\n        default:\n            return state;\n    }\n}\n","import { combineReducers } from \"redux\";\nimport user from \"./user\";\nimport card from \"./card\";\n\nexport default combineReducers({ user, card });\n","import { createStore } from \"redux\";\nimport rootReducer from \"./reducers\";\n\nexport default createStore(rootReducer);","import { useState } from \"react\";\nimport store from \"core/store/index\";\nimport { dispatchDefaultUser } from \"core/store/actions\";\nimport { Application, collection } from \"core/initApp\";\n\nconst payload = {\n  operation: \"CREATEUSER\",\n  commands: [\"WITHPHONECONFIRMATION\", \"WITHPASSWORD\"],\n};\n\nexport function CreateDefaultUser(environment: string) {\n  process.env[\"NODE_TLS_REJECT_UNAUTHORIZED\"] = \"0\"; // to prevent SSL\n  const url = `https://ttk.armut.${environment}/operate`;\n\n  const [isLoading, setState] = useState(false);\n\n  const controller = new AbortController();\n  const signal = controller.signal;\n\n  const loadUser = () => {\n    setState(true);\n    setTimeout(() => controller.abort(), 20000);\n    fetch(url, {\n      method: \"POST\",\n      body: JSON.stringify(payload),\n      signal,\n    })\n      .then((res) => res.json())\n      .then((user) => {\n        const { responseContext, error } = user;\n        if (error) return;\n        const { accessToken, password, model } = responseContext[0];\n        const { user_id, email, first_name } = model;\n        if (!error) {\n          let imageId = Math.floor(Math.random() * Math.floor(151));\n          store.dispatch(\n            dispatchDefaultUser({\n              user_id,\n              email,\n              password,\n              accessToken,\n              name: first_name,\n              imageId,\n            })\n          );\n          collection.insertOne({\n            user_id: Application.currentUser?.id,\n            id: user_id,\n            environment,\n            email,\n            password,\n            accessToken,\n            name: first_name,\n            imageId,\n          });\n        }\n      })\n      .catch((error) => {\n        console.log(error);\n      })\n      .finally(() => {\n        setState(false);\n      });\n  };\n  return [isLoading, loadUser] as const; // infers [boolean, typeof load] instead of (boolean | typeof load)[]\n}\n","import { Create, With, Payload, corePayload } from './models'\nexport interface UserModelDetails {\n    jobStatus: number, /*   1:NoJob \n                            2:JobWithNoQuote \n                            3:JobWith2Quotes \n                            4:JobWithDeal \n                            5:JobDone \n                            8:Reviewed \n                            11:PleaseSelectQuote */\n    bmType?: number\n    serviceId?: number /* Boya Badana :32 \n                          Evden Eve Nakliye:142 \n                          Psikolog:156 \n                          İngilizce Özel Ders:64 \n                          Haşere İlaçlama:31 \n                          Pokemon Destek:1 */\n    isRepeat?: boolean,\n    jobDate?: string,  /* 'YY-MM-DD HH:MM' */\n    response?: {\n        // by default returns userToken as first value\n        emailPassword?: boolean,\n        verificationCode?: boolean,\n    }\n}\nexport interface ProModelDetails {\n    // will be implemented when ttk is ready.\n    bmType?: number,\n    callPreferences?: number,\n    serviceId?: number\n    photoDetail?: boolean,\n    jobLocation?: boolean,\n    jobDate?: string\n}\n\nexport const DefaultProDetails: corePayload = {\n    operation: Create.PRO,\n    commands: [With.PASSWORD, With.CREDITCARD, With.BALANCE], //\"WITHPASSWORD\", \"PHONECONFIRMATON\" should be added for create-pro function.\n    commandContext: { proBalance: 10000 }\n}\n\nexport const DefaultJobDetails: Payload[\"jobTestContext\"] = {\n    operation: Create.JOB,\n    commands: [With.SERVICEID, With.QUOTES],\n    commandContext: { serviceId: 156 },\n    proTestContext: DefaultProDetails\n}\n\nexport const DefaultPayload: Payload = {\n    operation: Create.USER,\n    commands: [With.PHONECONFIRMATION, With.PASSWORD, With.JOB],\n    jobTestContext: DefaultJobDetails\n}","import React from \"react\";\nimport { Button, Icon, Dimmer, Loader } from \"semantic-ui-react\";\nimport { CreateDefaultUser } from \"../../services/createDefaultUser\";\nimport { useSelector } from \"react-redux\";\nimport { getUserElements } from \"core/store/selectors\";\nimport { CreateCustomUser } from \"services/createCustomUser\";\n\nconst Submit: React.FC = () => {\n  const user = useSelector(getUserElements);\n\n  const [isLoadingDefault, loadDefault] = CreateDefaultUser(user.environment);\n  const [isLoadingCustom, loadCustom] = CreateCustomUser(user.environment);\n\n  const loadUser = user.type === \"Default\" ? loadDefault : loadCustom;\n  let isLoading = user.type === \"Default\" ? isLoadingDefault : isLoadingCustom;\n  return (\n    <React.Fragment>\n      <Dimmer active={isLoading}>\n        <Loader />\n      </Dimmer>\n      <Button\n        icon\n        labelPosition=\"left\"\n        id=\"saveUser\"\n        size=\"medium\"\n        color=\"instagram\"\n        type=\"button\"\n        style={{\n          display: \"inline-block\",\n          margin: \"10px auto 10px 5px\",\n        }}\n        onClick={() => loadUser()}\n      >\n        <Icon name=\"plus\" />\n        Create User\n      </Button>\n    </React.Fragment>\n  );\n};\n\nexport default Submit;\n","import { useState } from \"react\";\nimport store from \"core/store/index\";\nimport { dispatchDefaultUser } from \"core/store/actions\";\nimport { collection, Application } from \"core/initApp\";\nimport { useSelector } from \"react-redux\";\nimport { getUserElements } from \"core/store/selectors\";\nimport { DefaultPayload } from \"./shared\";\nimport { Payload, With, Create } from \"./models\";\n\nexport function CreateCustomUser(environment: string) {\n  const payload: Payload = JSON.parse(JSON.stringify(DefaultPayload));\n\n  process.env[\"NODE_TLS_REJECT_UNAUTHORIZED\"] = \"0\"; // to prevent SSL\n  const url = `https://ttk.armut.${environment}/operate`;\n\n  const user = useSelector(getUserElements);\n  const [isLoading, setLoading] = useState(false);\n\n  const loadCustomUser = () => {\n    /*  if (user.country) {\n      payload.commands?.push(With.COUNTRY);\n      payload.commandContext = {\n        ...payload.commandContext,\n        countryId: user.country,\n      };\n    } */\n    if (user.job) {\n      payload.commands?.push(With.JOB);\n      payload.jobTestContext = {\n        operation: Create.JOB,\n        commands: [With.SERVICEID],\n        commandContext: {\n          serviceId: parseInt(user.service),\n        },\n      };\n      if (user.date) {\n        payload.jobTestContext.commands?.push(With.JOBDATE);\n        payload.jobTestContext.commandContext = {\n          ...payload.jobTestContext.commandContext,\n          jobDate: user.date,\n        };\n      }\n      if (user.deal) {\n        payload.jobTestContext.commands?.push(With.DEAL);\n        payload.jobTestContext.commandContext = {\n          ...payload.jobTestContext.commandContext,\n          jobDate: user.date,\n        };\n        payload.jobTestContext.proTestContext = {\n          operation: Create.PRO,\n          commands: [With.CREDITCARD, With.BALANCE],\n          commandContext: { proBalance: 10000 },\n        };\n      } else if (!user.deal) {\n        payload.jobTestContext.commands?.push(With.QUOTES);\n      }\n    }\n    console.log(payload);\n\n    setLoading(true);\n    fetch(url, {\n      method: \"POST\",\n      body: JSON.stringify(payload),\n    })\n      .then((res) => res.json())\n      .then((user) => {\n        const { responseContext, error } = user;\n        const { accessToken, password, model } = responseContext[0];\n        const { user_id, email, first_name } = model;\n        if (!error) {\n          let imageId = Math.floor(Math.random() * Math.floor(151));\n          store.dispatch(\n            dispatchDefaultUser({\n              user_id,\n              email,\n              password,\n              accessToken,\n              name: first_name,\n              imageId,\n            })\n          );\n          collection\n            .insertOne({\n              user_id: Application.currentUser?.id,\n              id: user_id,\n              email,\n              password,\n              accessToken,\n              first_name,\n              imageId,\n            })\n            .then((result) =>\n              console.log(\n                `Successfully inserted item with _id: ${result.insertedId}`\n              )\n            )\n            .catch((err) => console.error(`Failed to insert item: ${err}`));\n        }\n      })\n      .finally(() => {\n        setLoading(false);\n      });\n  };\n  return [isLoading, loadCustomUser] as const;\n}\n","import React, { useEffect } from \"react\";\nimport { Grid, Container } from \"semantic-ui-react\";\nimport CustomUser from \"../cards/customUser\";\nimport UserForm from \"components/forms/userForm\";\nimport { connect, useSelector, useDispatch } from \"react-redux\";\nimport Header from \"./Header\";\nimport { getUserElements } from \"core/store/selectors\";\nimport DefaultUser from \"../cards/defaultUser\";\nimport Submit from \"components/display/Submit\";\nimport { USER } from \"core/store/actionTypes\";\n\nconst Landing = () => {\n  const user = useSelector(getUserElements);\n  const dispatch = useDispatch();\n  useEffect(() => {\n    dispatch({ type: USER.TYPE, payload: \"Default\" });\n    dispatch({ type: USER.ENVIRONMENT, payload: \"Test\" });\n  }, [dispatch]);\n  return (\n    <React.Fragment>\n      <div style={{ margin: \"0px 15%\" }}>\n        <Grid columns={user.type === \"Custom\" ? 2 : 1} divided stackable>\n          <Grid.Column>\n            <Header />\n            {user.type === \"Custom\" ? (\n              <CustomUser {...user} />\n            ) : (\n              <DefaultUser />\n            )}\n          </Grid.Column>\n          {user.type === \"Custom\" ? (\n            <React.Fragment>\n              <Grid.Column>\n                <UserForm />\n              </Grid.Column>\n            </React.Fragment>\n          ) : null}\n          <Container style={{ margin: \"15px auto\" }}>\n            <Submit />\n          </Container>\n        </Grid>\n      </div>\n    </React.Fragment>\n  );\n};\n\nexport default connect(null, null)(Landing);\n","import React from \"react\";\nimport { Switch, Route, Redirect } from \"react-router\";\nimport Login from \"./Auth/Login\";\nimport Redirection from \"./Auth/Redirect\";\nimport Saved from \"./SavedUsers\";\nimport Landing from \"./Landing\";\nimport { UserContext } from \"core/store/ContextApi/Context\";\n\nconst Routes: React.FC = () => {\n  \n  return (\n    <UserContext.Consumer>\n      {(User) => (\n        <div className=\"App\">\n          <Switch>\n            <Route path=\"/login\" component={Login} />\n            <Route path=\"/redirect\" component={Redirection} />\n            {!User.user && <Redirect push to=\"/login\" />}\n\n            <Route path=\"/test-user\">\n              <Saved env=\"Test\" />\n            </Route>\n            <Route path=\"/stage-user\">\n              <Saved env=\"Stage\" />\n            </Route>\n\n            <Route path=\"/\" component={Landing} />\n          </Switch>\n        </div>\n      )}\n    </UserContext.Consumer>\n  );\n};\n\nexport default Routes;\n","import React, { useState } from \"react\";\nimport { Sidebar, Segment, Menu } from \"semantic-ui-react\";\nimport SideMenu from \"./SideMenu\";\nimport Routes from \"../Routes\";\n\nconst SideBarMenu: React.FC = () => {\n  const [visible, setVisibility] = useState(false);\n\n  return (\n    <React.Fragment>\n      <Sidebar.Pushable as={Segment}>\n        <Sidebar\n          onMouseLeave={() => setVisibility(false)}\n          as={Menu}\n          animation=\"overlay\"\n          icon=\"labeled\"\n          inverted\n          onHide={() => setVisibility(false)}\n          vertical\n          visible={visible}\n          width=\"thin\"\n        >\n          <SideMenu />\n        </Sidebar>\n        <Sidebar.Pusher dimmed={visible}>\n          <Routes />\n        </Sidebar.Pusher>\n      </Sidebar.Pushable>\n      <div\n        style={{\n          position: \"absolute\",\n          left: \"0\",\n          top: \"0\",\n          width: \"3%\",\n          height: \"100%\",\n        }}\n        onMouseEnter={() => setVisibility(true)}\n      />\n    </React.Fragment>\n  );\n};\n\nexport default SideBarMenu;\n","import React from \"react\";\nimport \"App.scss\";\nimport { Router } from \"react-router-dom\";\nimport { createBrowserHistory } from \"history\";\nimport { AuthGuard } from \"components/display/Auth/AuthGuard\";\nimport SideBarMenu from \"components/display/Sidebar/SidePush\";\n\nexport const history = createBrowserHistory();\n\nfunction App() {\n  return (\n    <Router history={history}>\n      <AuthGuard>\n        <SideBarMenu />\n      </AuthGuard>\n    </Router>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      process.env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\nimport { Provider } from \"react-redux\";\nimport store from \"core/store/index\";\n\nReactDOM.render(\n  <React.Fragment>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </React.Fragment>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}