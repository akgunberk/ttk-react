{"version":3,"sources":["images/pokemon-destek.png","images sync /^/.//.*$","images/eg.png","images/ro.png","images/sa.png","images/tr.png","images/uk.png","images/us.png","core/db/constants.ts","core/store/ContextApi/Context.tsx","assets/constants.ts","core/initApp.js","components/hooks/loginReducer.tsx","components/AuthGuard.tsx","components/display/Sidebar/SideMenu.tsx","components/container/statistics.tsx","components/display/Auth/Login.tsx","components/display/Auth/Redirect.tsx","components/container/withClipboard.tsx","components/container/withCard.tsx","core/db/actions/deleteUser.js","core/db/actions/getUsers.js","core/store/actionTypes.ts","components/display/SavedUsers.tsx","core/store/selectors.js","components/cards/customUser.tsx","assets/selectableOptions.ts","core/store/actions.ts","components/container/withSelect.tsx","components/container/withButtonGroup.tsx","components/forms/userForm.tsx","components/display/Header.tsx","components/cards/defaultUser.tsx","core/store/reducers/user.ts","core/store/reducers/card.ts","core/store/reducers/index.js","core/store/index.ts","components/hooks/createDefaultUser.tsx","components/hooks/createCustomUser.tsx","components/display/Submit.tsx","components/display/Landing.tsx","components/display/Routes.tsx","components/display/Sidebar/SidePush.tsx","App.tsx","serviceWorker.ts","index.tsx"],"names":["module","exports","map","webpackContext","req","id","webpackContextResolve","__webpack_require__","o","e","Error","code","keys","Object","resolve","mongodb","UserContext","React","createContext","RedirectUri","Application","Realm","collection","services","service","db","database","dispatch","a","credentials","google","logIn","then","user","type","payload","console","log","AppState","userId","active","reducer","state","action","AuthGuard","props","useState","isLoggedIn","currentUser","authState","setAuthState","useReducer","handleLogout","logOut","authInfo","useMemo","actions","Provider","value","children","SideMenu","Consumer","User","Fragment","to","Menu","Item","as","Icon","name","onClick","items","key","label","getStats","fetch","method","res","json","stats","forEach","el","index","values","Statistics","setState","style","position","bottom","Statistic","Group","Component","Login","history","useHistory","useEffect","push","Dimmer","Loader","Grid","columns","relaxed","stackable","Column","Button","LoginWithGoogle","Redirection","handleAuthRedirect","Segment","height","width","size","ClipBoardButton","copy","margin","text","basic","animated","Content","visible","hidden","marginLeft","WithCard","card","onDelete","Card","color","Label","attached","Header","Meta","email","password","Description","accessToken","extra","deleteOne","getUsers","find","users","USER","Saved","loading","this","handleDelete","user_id","deleteUser","filter","catch","environment","env","length","Row","centered","verticalAlign","getUserElements","store","getCardElements","images","require","CustomUser","useSelector","Image","circular","src","country","wrapped","ui","content","ribbon","Flag","textAlign","countryOptions","jobOptionsBM1","jobOptionsBM2","businessModelOptions","environmentOptions","userTypeOptions","dispatchDefaultUser","connect","dispatchSelectable","selectType","replace","toUpperCase","className","Dropdown","selection","clearable","placeholder","defaultValue","options","onChange","data","dispatchDeal","DEAL","undefined","deal","setDeal","handleClick","click","job","marginTop","positive","left","Or","right","UserForm","date","setDate","focused","setFocused","useDispatch","jobDate","format","DATE","Form","divided","bm","noBorder","numberOfMonths","onDateChange","onFocusChange","isOutsideRange","Message","icon","header","compact","DefaultUser","pokemon","initialState","combineReducers","TYPE","ENVIRONMENT","COUNTRY","BUSINESSMODEL","JOB","createStore","rootReducer","operation","commands","commandContext","jobTestContext","Submit","process","url","isLoading","body","JSON","stringify","responseContext","error","model","first_name","insertOne","finally","CreateDefaultUser","isLoadingDefault","loadDefault","setLoading","serviceId","parseInt","proTestContext","proBalance","result","insertedId","err","CreateCustomUser","isLoadingCustom","loadCustom","loadUser","labelPosition","display","Container","Routes","path","component","Landing","SideBarMenu","setVisibility","Sidebar","Pushable","onMouseLeave","animation","inverted","onHide","vertical","Pusher","dimmed","top","onMouseEnter","createBrowserHistory","App","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister","message"],"mappings":"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","file":"static/js/main.5140f030.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/pokemon-destek.eb7bf3da.png\";","var map = {\n\t\"./eg.png\": 452,\n\t\"./pokemon-destek.png\": 182,\n\t\"./ro.png\": 453,\n\t\"./sa.png\": 454,\n\t\"./tr.png\": 455,\n\t\"./uk.png\": 456,\n\t\"./us.png\": 457\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn map[req];\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = 451;","module.exports = __webpack_public_path__ + \"static/media/eg.ee87944d.png\";","module.exports = __webpack_public_path__ + \"static/media/ro.7c6628a2.png\";","module.exports = __webpack_public_path__ + \"static/media/sa.bb924894.png\";","module.exports = __webpack_public_path__ + \"static/media/tr.046e91f7.png\";","module.exports = __webpack_public_path__ + \"static/media/uk.b702632c.png\";","module.exports = __webpack_public_path__ + \"static/media/us.2918610d.png\";","export enum mongodb {\n    service = \"mongodb-atlas\",\n    collection = \"test\",\n    database = \"ttk-ui-db\",\n}","import React from \"react\";\n\nexport const UserContext = React.createContext<any>(null);\n","export const RedirectUri = \"https://ttk-ui-cvkwt.mongodbstitch.com/redirect\";\n\nexport const ClientId = \"291216037477-tlo72q1hnsl5kk6qph3spkc191mhnfn2.apps.googleusercontent.com\";\n\n","import * as Realm from \"realm-web\";\nimport { mongodb } from \"./db/constants\";\nimport { RedirectUri } from \"assets/constants\";\n\nexport const Application = new Realm.App({ id: \"ttk-ui-cvkwt\" });\n\nexport const Mongo = Application.services.mongodb(mongodb.service);\n\nexport const collection = Mongo.db(mongodb.database).collection(\n  mongodb.collection\n);\n\nexport async function LoginWithGoogle(dispatch) {\n  const credentials = Realm.Credentials.google(RedirectUri);\n  Application.logIn(credentials).then((user) => {\n    dispatch({ type: \"userId\", payload: user.id });\n    console.log(\"signed in successfully with id:\" + user.id);\n  });\n}\n","type AppState = {\n  userId: string;\n  active: boolean;\n};\nexport type Action =\n  | { type: \"userId\"; payload: string }\n  | { type: \"active\"; payload: boolean };\n\nexport const AppState = {\n  userId: \"\",\n  active: false,\n};\n\nexport function reducer(state: AppState, action: Action): AppState {\n  switch (action.type) {\n    case \"userId\":\n      return { ...state, userId: action.payload };\n    case \"active\":\n      return { ...state, active: true };\n    default:\n      return state;\n  }\n}\n","import React, { useState, useReducer } from \"react\";\nimport { UserContext } from \"core/store/ContextApi/Context\";\nimport { Application } from \"core/db\";\nimport { reducer, AppState } from \"./hooks/loginReducer\";\n\nexport function AuthGuard(props: any) {\n  const [authState, setAuthState] = useState({\n    isLoggedIn: Application.currentUser?.state === \"active\",\n    currentUser: Application.currentUser,\n  });\n  // eslint-disable-next-line\n  const [state, dispatch] = useReducer(reducer, AppState);\n\n  const handleLogout = () => {\n    Application.currentUser?.logOut();\n    dispatch({ type: \"userId\", payload: \"\" });\n  };\n\n  const authInfo = React.useMemo(() => {\n    const { isLoggedIn, currentUser } = authState;\n    const value = {\n      isLoggedIn,\n      currentUser,\n      actions: { handleLogout, setAuthState },\n    };\n    return value;\n  }, [authState]);\n\n  return (\n    <UserContext.Provider value={authInfo}>\n      {props.children}\n    </UserContext.Provider>\n  );\n}\n","import React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { Menu, Icon } from \"semantic-ui-react\";\nimport { UserContext } from \"core/store/ContextApi/Context\";\n\nconst SideMenu: React.FC = () => {\n  return (\n    <UserContext.Consumer>\n      {(User) => (\n        <React.Fragment>\n          <Link to=\"/\">\n            <Menu.Item as=\"div\">\n              <Icon name=\"home\" />\n              Home\n            </Menu.Item>\n          </Link>\n          <Link to=\"/test-user\">\n            <Menu.Item as=\"div\">\n              <Icon name=\"folder\" />\n              Test - Saved\n            </Menu.Item>\n          </Link>\n          <Link to=\"/stage-user\">\n            <Menu.Item as=\"div\">\n              <Icon name=\"folder outline\" />\n              Stage - Saved\n            </Menu.Item>\n          </Link>\n          <Link to=\"/login\">\n            <Menu.Item\n              as=\"div\"\n              onClick={() => {\n                if (User.isLoggedIn) User.actions.handleLogout();\n              }}\n            >\n              <Icon name={!User.isLoggedIn ? \"sign-in\" : \"sign-out\"} />\n              {!User.isLoggedIn ? \"Log In\" : \"Log Out\"}\n            </Menu.Item>\n          </Link>\n        </React.Fragment>\n      )}\n    </UserContext.Consumer>\n  );\n};\n\nexport default SideMenu;\n","import React from \"react\";\nimport { Statistic } from \"semantic-ui-react\";\nimport fetch from \"node-fetch\";\n\nconst items = [\n  { key: \"1\", label: \"Visits\", value: \"\" },\n  { key: \"2\", label: \"Test Users\", value: \"\" },\n  { key: \"3\", label: \"Stage Users\", value: \"\" },\n  { key: \"4\", label: \"Active Members\", value: \"\" },\n];\n\nasync function getStats() {\n  const url =\n    \"https://webhooks.mongodb-stitch.com/api/client/v2.0/app/ttk-ui-cvkwt/service/userCount/incoming_webhook/statsWebHook\";\n  const stats = await fetch(url, {\n    method: \"GET\",\n  }).then((res) => res.json());\n\n  items.forEach((el, index) => {\n    el.value = Object.values<string>(stats[index])[0];\n  });\n  return items;\n}\n\nclass Statistics extends React.Component {\n  constructor(props: any) {\n    super(props);\n\n    this.state = {\n      items: {},\n    };\n  }\n  async componentDidMount() {\n    getStats().then((items) => this.setState({ items }));\n  }\n  render() {\n    return items[0].value ? (\n      <div style={{ position: \"absolute\", bottom: \"15%\" }}>\n        <Statistic.Group items={items} />\n      </div>\n    ) : null;\n  }\n}\n\nexport default Statistics;\n","import React, { useReducer, useEffect } from \"react\";\nimport { Grid, Dimmer, Loader, Button } from \"semantic-ui-react\";\nimport Statistics from \"components/container/statistics\";\nimport { reducer, AppState } from \"components/hooks/loginReducer\";\nimport { LoginWithGoogle } from \"core/db\";\nimport { useHistory } from \"react-router\";\n\nexport const Login: React.FC<any> = () => {\n  // eslint-disable-next-line\n  const [state, dispatch] = useReducer(reducer, AppState);\n  let history = useHistory();\n  useEffect(() => {\n    if (state.userId !== \"\") {\n      history.push(\"/\");\n    }\n    // eslint-disable-next-line\n  }, [state.userId]);\n\n  return (\n    <React.Fragment>\n      <Dimmer active={state.active}>\n        <Loader />\n      </Dimmer>\n\n      <Grid columns={1} relaxed=\"very\" stackable>\n        <Grid.Column>\n          <Button onClick={() => LoginWithGoogle(dispatch)}>Login</Button>\n        </Grid.Column>\n      </Grid>\n\n      <Statistics />\n    </React.Fragment>\n  );\n};\n\nexport default Login;\n","import React, { useEffect } from \"react\";\nimport { Segment, Dimmer, Loader } from \"semantic-ui-react\";\nimport { handleAuthRedirect } from \"realm-web\";\n\nconst Redirection: React.FC = () => {\n  useEffect(() => {\n    handleAuthRedirect();\n  });\n\n  return (\n    <Segment style={{ height: \"100vh\", width: \"100vw\" }}>\n      <Dimmer active>\n        <Loader size=\"huge\">Please wait...</Loader>\n      </Dimmer>\n    </Segment>\n  );\n};\n\nexport default Redirection;\n","import React from \"react\";\nimport { Button, Icon } from \"semantic-ui-react\";\nimport CopyToClipboard from \"react-copy-to-clipboard\";\n\nconst ClipBoardButton: React.FC<{ name: string; copy: string }> = ({\n  name,\n  copy,\n}) => {\n  return (\n    <div style={{ margin: \"5px\" }}>\n      <CopyToClipboard text={copy}>\n        <Button\n          basic\n          type=\"button\"\n          style={{ width: \"125px\" }}\n          animated=\"fade\"\n          size=\"medium\"\n        >\n          <Button.Content visible>{name}</Button.Content>\n          <Button.Content hidden>\n            Copy <Icon style={{ marginLeft: \"4px\" }} name=\"clipboard\" />\n          </Button.Content>\n        </Button>\n      </CopyToClipboard>\n    </div>\n  );\n};\n\nexport default ClipBoardButton;\n","import React from \"react\";\nimport { Button, Card, Label } from \"semantic-ui-react\";\nimport { CardElement } from \"assets/propTypes\";\nimport ClipBoardButton from \"./withClipboard\";\n\nconst WithCard: React.FC<{ card: CardElement; onDelete: any }> = ({\n  card,\n  onDelete,\n}) => {\n  return (\n    <React.Fragment>\n      <Card color=\"red\">\n        <Label attached=\"top\">{card.id}</Label>\n        <Card.Content>\n          <Card.Header>{card.name}</Card.Header>\n          <Card.Meta>\n            <ClipBoardButton name=\"Email\" copy={card.email} />\n          </Card.Meta>\n          <Card.Meta>\n            <ClipBoardButton name=\"Password\" copy={card.password} />\n          </Card.Meta>\n          <Card.Description>\n            <ClipBoardButton name=\"Token\" copy={card.accessToken} />\n          </Card.Description>\n        </Card.Content>\n        <Card.Content extra>\n          <Button basic color=\"red\" onClick={() => onDelete(card.id)}>\n            Delete User\n          </Button>\n        </Card.Content>\n      </Card>\n    </React.Fragment>\n  );\n};\n\nexport default WithCard;\n","import { collection } from \"core/db\";\n\nexport async function deleteUser(id) {\n  return await collection.deleteOne({ id }).then(() => console.log(\"deleted\"));\n}\n","import { collection } from \"core/db\";\n\nexport async function getUsers() {\n  return await collection.find().then((users) => users);\n}\n","export enum USER {\n    TYPE = \"TYPE\",\n    ENVIRONMENT = \"ENVIRONMENT\",\n    COUNTRY = \"COUNTRY\",\n    JOB = \"JOB\",\n    DEAL = \"DEAL\",\n    PASSWORD = \"PASSWORD\",\n    BUSINESSMODEL = \"BUSINESSMODEL\",\n    DATE = \"DATE\"\n}\n\nexport const DEFAULT_USER = \"DEFAULT\";\n","import React from \"react\";\nimport WithCard from \"components/container/withCard\";\nimport { getUsers, deleteUser } from \"core/db/actions\";\nimport { Button, Dimmer, Loader, Grid } from \"semantic-ui-react\";\nimport { history } from \"App\";\nimport { CardElement } from \"assets/propTypes\";\n\ntype Props = {\n  env: string;\n};\n\nexport default class Saved extends React.Component<Props> {\n  state: { users: CardElement[]; loading: boolean } = {\n    users: [],\n    loading: true,\n  };\n  async componentDidMount() {\n    const users = await getUsers();\n    this.setState({ users, loading: false });\n  }\n  render() {\n    const handleDelete = (user_id: string) => {\n      this.setState({ ...this.state, loading: true });\n      deleteUser(user_id)\n        .then(() =>\n          this.setState({\n            users: this.state.users.filter((user) => user.id !== user_id),\n            loading: false,\n          })\n        )\n        .catch(() => console.log(\"cant deleted...\"));\n    };\n    return (\n      <div>\n        {this.state.loading ? (\n          <Dimmer active={this.state.loading}>\n            <Loader />\n          </Dimmer>\n        ) : this.state.users.filter(\n            (user) => user.environment === this.props.env\n          ).length ? (\n          <Grid columns=\"equal\" style={{ margin: \"0 15%\" }}>\n            <Grid.Row centered verticalAlign=\"middle\">\n              <h1>{this.props.env}</h1>\n            </Grid.Row>\n            {this.state.users\n              .filter((user) => user.environment === this.props.env)\n              .map((user, id) => (\n                <Grid.Column key={id}>\n                  <WithCard\n                    card={user}\n                    key={id}\n                    onDelete={(user_id: string) => handleDelete(user_id)}\n                  />\n                </Grid.Column>\n              ))}\n          </Grid>\n        ) : (\n          <React.Fragment>\n            <h1>There is no saved user</h1>\n            <Button color=\"green\" onClick={() => history.push(\"/\")}>\n              Go to Create One\n            </Button>\n          </React.Fragment>\n        )}\n      </div>\n    );\n  }\n}\n","export const getUserElements = (store) => store.user;\n\nexport const getCardElements = (store) => store.card;\n","import React from \"react\";\nimport { Card, Image, Flag, Icon } from \"semantic-ui-react\";\nimport ClipBoardButton from \"components/container/withClipboard\";\nimport { useSelector } from \"react-redux\";\nimport { getUserElements, getCardElements } from \"../../core/store/selectors\";\n\nconst images = require.context(\"images\", true);\n\nconst CustomUser = () => {\n  const user = useSelector(getUserElements);\n  const { userId, email, password, accessToken } = useSelector(getCardElements);\n  return (\n    <Card centered>\n      <Image\n        circular\n        src={images(\"./\" + (user.country ? user.country : \"tr\") + \".png\")}\n        wrapped\n        ui={false}\n        label={\n          user.environment !== \"\"\n            ? {\n                as: \"a\",\n                color: user.environment === \"Test\" ? \"red\" : \"blue\",\n                content: user.environment === \"Test\" ? \"TEST\" : \"STAGE\",\n                ribbon: true,\n              }\n            : null\n        }\n      ></Image>\n      <Card.Content>\n        <Card.Header>\n          <span>Serbest Meslek Erbabı</span>\n        </Card.Header>\n        <Card.Meta>\n          ShapeShifter\n          <span>\n            <Flag\n              style={{ marginLeft: \"4px\" }}\n              name={user.country}\n              size=\"huge\"\n            />\n          </span>\n        </Card.Meta>\n        <Card.Description>\n          <div> Valar Morghulis</div>\n        </Card.Description>\n      </Card.Content>\n      <Card.Content extra textAlign=\"center\">\n        {userId ? <ClipBoardButton name=\"Id\" copy={userId} /> : null}\n        {email ? <ClipBoardButton name=\"Email\" copy={email} /> : null}\n        {password ? <ClipBoardButton name=\"Password\" copy={password} /> : null}\n        {accessToken ? (\n          <ClipBoardButton name=\"Token\" copy={accessToken} />\n        ) : null}\n      </Card.Content>\n      <Icon name=\"user\" />\n    </Card>\n  );\n};\n\nexport default CustomUser;\n","export const countryOptions = [\n    { key: '1', value: 'tr', text: 'Turkish' },\n    { key: '2', value: 'ro', text: 'Romanian' },\n    { key: '3', value: 'sa', text: 'Arabic' },\n    { key: '4', value: 'eg', text: 'Egyptian' },\n    { key: '5', value: 'us', text: 'American' },\n    { key: '6', value: 'uk', text: 'British' },\n]\n\nexport const jobOptionsBM1 = [\n    { key: '1', value: '1', text: 'Pokemon' },\n    { key: '2', value: '142', text: 'Nakliye' },\n    { key: '3', value: '32', text: 'Badana' },\n    { key: '4', value: '31', text: 'İlaçlama' },\n    { key: '5', value: '156', text: 'Psikolog' },\n    { key: '6', value: '64', text: 'Özel Ders' },\n]\n\nexport const jobOptionsBM2 = [\n    { key: '1', value: '13', text: 'Ev Temizliği' },\n    { key: '2', value: '12', text: 'Masaj' },\n]\n\nexport const businessModelOptions = [\n    { key: '1', value: '1', text: 'BM1' },\n    { key: '2', value: '2', text: 'BM2' }\n]\nexport const environmentOptions = [\n    { key: '1', value: 'Test', text: 'Test' },\n    { key: '2', value: 'Stage', text: 'Stage' }\n]\n\n\nexport const userTypeOptions = [\n    { key: '1', value: 'Default', text: 'Default' },\n    { key: '2', value: 'Custom', text: 'Customize' }\n]","import { USER, DEFAULT_USER } from \"./actionTypes\";\n\nexport const dispatchDeal = (payload: number) => ({\n    type: USER.DEAL,\n    payload\n});\n\nexport const dispatchDate = (payload: number) => ({\n    type: USER.DATE,\n    payload\n});\n\nexport const dispatchSelectable = (type: string, payload: any) => ({\n    type,\n    payload\n})\n\nexport const dispatchDefaultUser = (payload: { user_id: string, email: string, password: string, accessToken: string, name: string }) => (\n    {\n        type: DEFAULT_USER,\n        payload\n    }\n)\n\n","import React from \"react\";\nimport { Grid, Dropdown, DropdownItemProps } from \"semantic-ui-react\";\nimport { dispatchSelectable } from \"core/store/actions\";\nimport { connect } from \"react-redux\";\n\ntype PropTypes = {\n  name: string;\n  options: Array<DropdownItemProps>;\n  dispatchSelectable: any;\n  defaultValue?: any;\n};\n\nconst WithSelect = (props: PropTypes) => {\n  const selectType = props.name.replace(/\\s/g, \"\").toUpperCase();\n  return (\n    <React.Fragment>\n      <Grid.Column textAlign=\"center\" className=\"selectable\">\n        <Dropdown\n          selection\n          clearable\n          placeholder={`${props.name}`}\n          defaultValue={props.defaultValue ? props.defaultValue : null}\n          options={props.options}\n          onChange={(e, data) =>\n            props.dispatchSelectable(selectType, data.value)\n          }\n        />\n      </Grid.Column>\n    </React.Fragment>\n  );\n};\n\nexport default connect(null, { dispatchSelectable })(WithSelect);\n","import React, { useState } from \"react\";\nimport { Grid, Button } from \"semantic-ui-react\";\nimport { connect, useSelector } from \"react-redux\";\nimport { dispatchDeal } from \"core/store/actions\";\nimport { getUserElements } from \"core/store/selectors\";\n\ntype PropTypes = { left: string; right: string; dispatchDeal: any };\n\nconst WithButtonGroup: React.FC<PropTypes> = (props) => {\n  let [deal, setDeal] = useState<number | undefined>(undefined);\n\n  const handleClick = (click: number): void => {\n    if (deal !== click) setDeal(click);\n    props.dispatchDeal(click);\n  };\n\n  const user = useSelector(getUserElements);\n\n  return user.job ? (\n    <React.Fragment>\n      <Grid.Column textAlign=\"center\" className=\"selectable\">\n        <Button.Group size=\"medium\" style={{ marginTop: \"30px\" }}>\n          with\n          <Button\n            type=\"button\"\n            positive={deal === 0}\n            onClick={() => handleClick(0)}\n          >\n            {props.left}\n          </Button>\n          <Button.Or />\n          <Button\n            type=\"button\"\n            positive={deal === 1}\n            onClick={() => handleClick(1)}\n          >\n            {props.right}\n          </Button>\n        </Button.Group>\n      </Grid.Column>\n    </React.Fragment>\n  ) : null;\n};\n\nexport default connect(null, { dispatchDeal })(WithButtonGroup);\n","import React, { useState, useEffect } from \"react\";\nimport { Grid, Form } from \"semantic-ui-react\";\nimport {\n  countryOptions,\n  businessModelOptions,\n  jobOptionsBM2,\n  jobOptionsBM1,\n} from \"assets/selectableOptions\";\nimport \"react-dates/initialize\";\nimport { SingleDatePicker } from \"react-dates\";\nimport \"react-dates/lib/css/_datepicker.css\";\nimport WithSelect from \"components/container/withSelect\";\nimport WithButtonGroup from \"components/container/withButtonGroup\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { getUserElements } from \"core/store/selectors\";\nimport moment from \"moment\";\nimport { USER } from \"core/store/actionTypes\";\n\nconst UserForm: React.FC = () => {\n  const user = useSelector(getUserElements);\n  const [date, setDate] = useState<moment.Moment | null>(null);\n  const [focused, setFocused] = useState<boolean | null>(false);\n  const dispatch = useDispatch();\n  useEffect(() => {\n    let jobDate = date?.format(\"YYYY-MM-DD HH:MM\");\n    dispatch({ type: USER.DATE, payload: jobDate });\n  }, [date, dispatch]);\n  return (\n    <React.Fragment>\n      <Form>\n        <Grid columns=\"equal\" divided=\"vertically\">\n          <Grid.Row centered>\n            <WithSelect name=\"Country\" options={countryOptions} />\n          </Grid.Row>\n          <Grid.Row centered>\n            <WithSelect name=\"Business Model\" options={businessModelOptions} />\n\n            <WithSelect\n              name=\"Job\"\n              options={user.bm === \"1\" ? jobOptionsBM1 : jobOptionsBM2}\n            />\n          </Grid.Row>\n          {user.job ? (\n            <Grid.Row centered>\n              <Grid.Column textAlign=\"center\">\n                <SingleDatePicker\n                  noBorder\n                  numberOfMonths={1}\n                  date={date}\n                  onDateChange={(date) => setDate(date)}\n                  focused={focused}\n                  onFocusChange={({ focused }) => setFocused(focused)}\n                  id=\"jobDate\"\n                  isOutsideRange={() => false}\n                />\n                <WithButtonGroup left=\"Quote\" right=\"Deal\" />\n              </Grid.Column>\n            </Grid.Row>\n          ) : null}\n        </Grid>\n      </Form>\n    </React.Fragment>\n  );\n};\n\nexport default UserForm;\n","import React, { Fragment } from \"react\";\nimport WithSelect from \"components/container/withSelect\";\nimport { environmentOptions, userTypeOptions } from \"assets/selectableOptions\";\nimport { Message } from \"semantic-ui-react\";\nimport { useSelector } from \"react-redux\";\nimport { getUserElements } from \"core/store/selectors\";\n\nconst Header: React.FC = () => {\n  const user = useSelector(getUserElements);\n  return (\n    <Fragment>\n      {user.type === \"Default\" ? (\n        <div style={{ margin: \"0 25%\" }}>\n          <Message\n            icon=\"info\"\n            header=\"Use sidebar hiding at the most left side of the page \"\n            content=\"All users created are saved, don't worry\"\n            size=\"small\"\n            compact\n          />\n        </div>\n      ) : null}\n      <WithSelect\n        name=\"Type\"\n        options={userTypeOptions}\n        defaultValue=\"Default\"\n      />\n      <WithSelect\n        name=\"Environment\"\n        options={environmentOptions}\n        defaultValue=\"Test\"\n      />\n    </Fragment>\n  );\n};\n\nexport default Header;\n","import React from \"react\";\nimport { Card, Image } from \"semantic-ui-react\";\nimport pokemon from \"images/pokemon-destek.png\";\nimport { useSelector } from \"react-redux\";\nimport { getUserElements, getCardElements } from \"core/store/selectors\";\nimport ClipBoardButton from \"components/container/withClipboard\";\n\nconst DefaultUser: React.FC = () => {\n  const user = useSelector(getUserElements);\n  const { userId, email, password, accessToken } = useSelector(getCardElements);\n  return (\n    <React.Fragment>\n      <Card centered>\n        <Image\n          src={pokemon}\n          wrapped\n          ui={false}\n          label={\n            user.environment !== \"\"\n              ? {\n                  as: \"a\",\n                  color: user.environment === \"Test\" ? \"red\" : \"blue\",\n                  content: user.environment === \"Test\" ? \"TEST\" : \"STAGE\",\n                  ribbon: true,\n                }\n              : null\n          }\n        />\n        <Card.Content>\n          <Card.Header>Pokemon Destek</Card.Header>\n          <Card.Meta>\n            <span>Ash Ketchum</span>\n          </Card.Meta>\n          <Card.Description>\n            I wanna be the very best like no one ever was\n          </Card.Description>\n        </Card.Content>\n        <Card.Content extra textAlign=\"center\">\n          {userId ? <ClipBoardButton name=\"Id\" copy={userId} /> : null}\n          {email ? <ClipBoardButton name=\"Email\" copy={email} /> : null}\n          {password ? (\n            <ClipBoardButton name=\"Password\" copy={password} />\n          ) : null}\n          {accessToken ? (\n            <ClipBoardButton name=\"Token\" copy={accessToken} />\n          ) : null}\n        </Card.Content>\n      </Card>\n    </React.Fragment>\n  );\n};\n\nexport default DefaultUser;\n","import { UserElement } from \"../../../assets/propTypes\";\nimport { USER } from '../actionTypes';\n\nconst initialState: UserElement = {\n  type: \"Default\",\n  environment: \"Test\",\n  job: false,\n  country: 'tr',\n  service: 156,\n  deal: undefined,\n  loading: false,\n  bm: '1',\n};\n\ntype action = {\n  type: string,\n  payload: any\n}\n\n\nexport default function (state = initialState, action: action) {\n  switch (action.type) {\n\n    case USER.TYPE: {\n      return { ...state, type: action.payload }\n    }\n    case USER.ENVIRONMENT: {\n      return { ...state, environment: action.payload }\n    }\n    case USER.COUNTRY: {\n      return { ...state, country: action.payload }\n    }\n    case USER.BUSINESSMODEL: {\n      return { ...state, bm: action.payload }\n    }\n    case USER.JOB: {\n      return { ...state, service: action.payload, job: action.payload !== '' ? true : false }\n    }\n    case USER.DEAL: {\n      return { ...state, deal: action.payload }\n    }\n    case USER.DATE: {\n      return { ...state, date: action.payload }\n    }\n    default:\n      return state\n  }\n}","import { CardElement } from \"../../../assets/propTypes\";\nimport { DEFAULT_USER } from \"../actionTypes\";\n\nconst initialState: CardElement = {\n    environment: \"\",\n    email: \"\",\n    password: \"\",\n    id: \"\",\n    accessToken: \"\",\n};\n\ntype action = {\n    type: string;\n    payload: any;\n};\n\nexport default function (state = initialState, action: action) {\n    switch (action.type) {\n        case DEFAULT_USER: {\n            return {\n                ...state,\n                userId: action.payload.user_id,\n                email: action.payload.email,\n                password: action.payload.password,\n                accessToken: action.payload.accessToken,\n            };\n        }\n        default:\n            return state;\n    }\n}\n","import { combineReducers } from \"redux\";\nimport user from \"./user\";\nimport card from \"./card\";\n\nexport default combineReducers({ user, card });\n","import { createStore } from \"redux\";\nimport rootReducer from \"./reducers\";\n\nexport default createStore(rootReducer);","import { useState } from \"react\";\nimport store from \"core/store/index\";\nimport { dispatchDefaultUser } from \"core/store/actions\";\nimport { Application, collection } from \"core/initApp\";\n\nconst payload = {\n  operation: \"CREATEUSER\",\n  commands: [\"WITHPHONECONFIRMATION\", \"WITHPASSWORD\"],\n};\n\nexport function CreateDefaultUser(environment: string) {\n  process.env[\"NODE_TLS_REJECT_UNAUTHORIZED\"] = \"0\"; // to prevent SSL\n  const url = `https://ttk.armut.${environment}/operate`;\n\n  const [isLoading, setState] = useState(false);\n\n  const loadUser = () => {\n    setState(true);\n    fetch(url, {\n      method: \"POST\",\n      body: JSON.stringify(payload),\n    })\n      .then((res) => res.json())\n      .then((user) => {\n        const { responseContext, error } = user;\n        if (error) return;\n        const { accessToken, password, model } = responseContext[0];\n        const { user_id, email, first_name } = model;\n        if (!error) {\n          store.dispatch(\n            dispatchDefaultUser({\n              user_id,\n              email,\n              password,\n              accessToken,\n              name: first_name,\n            })\n          );\n          collection.insertOne({\n            user_id: Application.currentUser?.id,\n            id: user_id,\n            environment,\n            email,\n            password,\n            accessToken,\n            name: first_name,\n          });\n        }\n      })\n      .catch((error) => {\n        console.log(error);\n      })\n      .finally(() => {\n        setState(false);\n      });\n  };\n  return [isLoading, loadUser] as const; // infers [boolean, typeof load] instead of (boolean | typeof load)[]\n}\n","import { useState } from \"react\";\nimport store from \"core/store/index\";\nimport { dispatchDefaultUser } from \"core/store/actions\";\nimport { collection, Application } from \"core/initApp\";\nimport { useSelector } from \"react-redux\";\nimport { getUserElements } from \"core/store/selectors\";\n\ninterface contextType {\n  jobDate?: string; // example \"2020-03-06 14:00\"\n  businessModel?: number;\n  serviceId?: number;\n  proBalance?: number;\n  quoteId?: number;\n  countryId?: number;\n}\n\ninterface jobContextType {\n  operation?: string;\n  commands?: Array<string | undefined>;\n  commandContext?: contextType;\n  proTestContext?: {};\n}\n\nconst payload: {\n  operation: string;\n  commands: Array<string>;\n  commandContext: contextType;\n  jobTestContext: jobContextType;\n} = {\n  operation: \"CREATEUSER\",\n  commands: [\"WITHPHONECONFIRMATION\", \"WITHPASSWORD\"],\n  commandContext: {},\n  jobTestContext: {},\n};\n\nexport function CreateCustomUser(environment: string) {\n  process.env[\"NODE_TLS_REJECT_UNAUTHORIZED\"] = \"0\"; // to prevent SSL\n  const url = `https://ttk.armut.${environment}/operate`;\n\n  const user = useSelector(getUserElements);\n  const [isLoading, setLoading] = useState(false);\n\n  const loadCustomUser = () => {\n    /* if (user.country) {\n      payload.commands.push(\"WITHCOUNTRYID\");\n      payload.commandContext[\"countryId\"] = user.country;\n    } */\n    if (user.job) {\n      payload.commands.push(\"WITHJOB\");\n      payload.jobTestContext = {\n        operation: \"CREATEJOB\",\n        commands: [\"WITHSERVICEID\"],\n        commandContext: {\n          serviceId: parseInt(user.service),\n        },\n      };\n      if (user.date) {\n        payload.jobTestContext.commands?.push(\"WITHJOBDATE\");\n        payload.jobTestContext.commandContext = {\n          ...payload.jobTestContext.commandContext,\n          jobDate: user.date,\n        };\n      }\n      if (user.deal === 1) {\n        payload.jobTestContext.commands?.push(\"WITHDEAL\");\n        payload.jobTestContext.commandContext = {\n          ...payload.jobTestContext.commandContext,\n          jobDate: user.date,\n        };\n        payload.jobTestContext.proTestContext = {\n          operation: [\"CREATEPRO\"],\n          commands: [\"WITHCREDITCARD\", \"WITHBALANCE\"],\n          commandContext: { proBalance: 10000 },\n        };\n      } else if (user.deal === 0) {\n        payload.jobTestContext.commands?.push(\"WITHQUOTES\");\n      }\n      console.log(payload);\n    }\n\n    setLoading(true);\n    fetch(url, {\n      method: \"POST\",\n      body: JSON.stringify(payload),\n    })\n      .then((res) => res.json())\n      .then((user) => {\n        const { responseContext, error } = user;\n        const { accessToken, password, model } = responseContext[0];\n        const { user_id, email, first_name } = model;\n        if (!error) {\n          store.dispatch(\n            dispatchDefaultUser({\n              user_id,\n              email,\n              password,\n              accessToken,\n              name: first_name,\n            })\n          );\n          collection\n            .insertOne({\n              user_id: Application.currentUser?.id,\n              id: user_id,\n              email,\n              password,\n              accessToken,\n              first_name,\n            })\n            .then((result) =>\n              console.log(\n                `Successfully inserted item with _id: ${result.insertedId}`\n              )\n            )\n            .catch((err) => console.error(`Failed to insert item: ${err}`));\n        }\n      })\n      .finally(() => {\n        setLoading(false);\n      });\n  };\n  return [isLoading, loadCustomUser] as const;\n}\n","import React from \"react\";\nimport { Button, Icon, Dimmer, Loader } from \"semantic-ui-react\";\nimport { CreateDefaultUser } from \"../hooks/createDefaultUser\";\nimport { useSelector } from \"react-redux\";\nimport { getUserElements } from \"core/store/selectors\";\nimport { CreateCustomUser } from \"components/hooks/createCustomUser\";\n\nconst Submit: React.FC = () => {\n  const user = useSelector(getUserElements);\n\n  const [isLoadingDefault, loadDefault] = CreateDefaultUser(user.environment);\n  const [isLoadingCustom, loadCustom] = CreateCustomUser(user.environment);\n\n  const loadUser = user.type === \"Default\" ? loadDefault : loadCustom;\n  let isLoading = user.type === \"Default\" ? isLoadingDefault : isLoadingCustom;\n  return (\n    <React.Fragment>\n      <Dimmer active={isLoading}>\n        <Loader />\n      </Dimmer>\n      <Button\n        icon\n        labelPosition=\"left\"\n        id=\"saveUser\"\n        size=\"medium\"\n        color=\"instagram\"\n        type=\"button\"\n        style={{\n          display: \"inline-block\",\n          margin: \"10px auto 10px 5px\",\n        }}\n        onClick={() => loadUser()}\n      >\n        <Icon name=\"plus\" />\n        Create User\n      </Button>\n    </React.Fragment>\n  );\n};\n\nexport default Submit;\n","import React, { useEffect } from \"react\";\nimport { Grid, Container } from \"semantic-ui-react\";\nimport CustomUser from \"../cards/customUser\";\nimport UserForm from \"components/forms/userForm\";\nimport { connect, useSelector, useDispatch } from \"react-redux\";\nimport Header from \"./Header\";\nimport { getUserElements } from \"core/store/selectors\";\nimport DefaultUser from \"../cards/defaultUser\";\nimport Submit from \"components/display/Submit\";\nimport { USER } from \"core/store/actionTypes\";\n\nconst Landing = () => {\n  const user = useSelector(getUserElements);\n  const dispatch = useDispatch();\n  useEffect(() => {\n    dispatch({ type: USER.TYPE, payload: \"Default\" });\n    dispatch({ type: USER.ENVIRONMENT, payload: \"Test\" });\n  }, [dispatch]);\n  return (\n    <React.Fragment>\n      <div style={{ margin: \"0px 15%\" }}>\n        <Grid columns={user.type === \"Custom\" ? 2 : 1} divided stackable>\n          <Grid.Column>\n            <Header />\n            {user.type === \"Custom\" ? (\n              <CustomUser {...user} />\n            ) : (\n              <DefaultUser />\n            )}\n          </Grid.Column>\n          {user.type === \"Custom\" ? (\n            <React.Fragment>\n              <Grid.Column>\n                <UserForm />\n              </Grid.Column>\n            </React.Fragment>\n          ) : null}\n          <Container style={{ margin: \"15px auto\" }}>\n            <Submit />\n          </Container>\n        </Grid>\n      </div>\n    </React.Fragment>\n  );\n};\n\nexport default connect(null, null)(Landing);\n","import React from \"react\";\nimport { Switch, Route, Redirect } from \"react-router\";\nimport Login from \"./Auth/Login\";\nimport Redirection from \"./Auth/Redirect\";\nimport Saved from \"./SavedUsers\";\nimport Landing from \"./Landing\";\nimport { UserContext } from \"core/store/ContextApi/Context\";\n\nconst Routes: React.FC = () => {\n  return (\n    <UserContext.Consumer>\n      {(User) => (\n        <div className=\"App\">\n          <Switch>\n            <Route path=\"/login\" component={Login} />\n            <Route path=\"/redirect\" component={Redirection} />\n            {!User.isLoggedIn && <Redirect push to=\"/login\" />}\n\n            <Route path=\"/test-user\">\n              <Saved env=\"Test\" />\n            </Route>\n            <Route path=\"/stage-user\">\n              <Saved env=\"Stage\" />\n            </Route>\n\n            <Route path=\"/\" component={Landing} />\n          </Switch>\n        </div>\n      )}\n    </UserContext.Consumer>\n  );\n};\n\nexport default Routes;\n","import React, { useState } from \"react\";\nimport { Sidebar, Segment, Menu } from \"semantic-ui-react\";\nimport SideMenu from \"./SideMenu\";\nimport Routes from \"../Routes\";\n\nconst SideBarMenu: React.FC = () => {\n  const [visible, setVisibility] = useState(false);\n\n  return (\n    <React.Fragment>\n      <Sidebar.Pushable as={Segment}>\n        <Sidebar\n          onMouseLeave={() => setVisibility(false)}\n          as={Menu}\n          animation=\"overlay\"\n          icon=\"labeled\"\n          inverted\n          onHide={() => setVisibility(false)}\n          vertical\n          visible={visible}\n          width=\"thin\"\n        >\n          <SideMenu />\n        </Sidebar>\n        <Sidebar.Pusher dimmed={visible}>\n          <Routes />\n        </Sidebar.Pusher>\n      </Sidebar.Pushable>\n      <div\n        style={{\n          position: \"absolute\",\n          left: \"0\",\n          top: \"0\",\n          width: \"3%\",\n          height: \"100%\",\n        }}\n        onMouseEnter={() => setVisibility(true)}\n      />\n    </React.Fragment>\n  );\n};\n\nexport default SideBarMenu;\n","import React from \"react\";\nimport \"App.scss\";\nimport { Router } from \"react-router-dom\";\nimport { createBrowserHistory } from \"history\";\nimport { AuthGuard } from \"components/AuthGuard\";\nimport SideBarMenu from \"components/display/Sidebar/SidePush\";\n\nexport const history = createBrowserHistory();\n\nfunction App() {\n  return (\n    <Router history={history}>\n      <AuthGuard>\n        <SideBarMenu />\n      </AuthGuard>\n    </Router>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      process.env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\nimport { Provider } from \"react-redux\";\nimport store from \"core/store/index\";\n\nReactDOM.render(\n  <React.Fragment>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </React.Fragment>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}