{"version":3,"sources":["serve.ts"],"names":[],"mappings":";;;;;;;;;;AAAA,iDAA+C;AAC/C,6BAA4B;AAC5B,iCAAgC;AAChC,iCAAgC;AAOhC,eAA4B,WAAmB;;QAC3C,OAAO,CAAC,GAAG,CAAC,MAAM,CAAC,OAAO,CAAC,YAAY,WAAW,EAAE,CAAC,CAAC,CAAA;QACtD,MAAM,eAAe,GAAG,6BAA6B,CAAA;QACrD,MAAM,aAAa,GAAG,MAAM,KAAK,CAAC,QAAQ,CAAC,IAAI,CAAC,IAAI,CAAC,OAAO,CAAC,GAAG,EAAE,EAAE,MAAM,eAAe,EAAE,CAAC,CAAC,CAAA;QAC7F,EAAE,CAAC,CAAC,aAAa,CAAC,MAAM,GAAG,CAAC,CAAC,CAAC,CAAC;YAC3B,MAAM,YAAY,GAAG,aAAa,CAAC,CAAC,CAAC,CAAA;YACrC,MAAM,KAAK,GAAG,qBAAK,CAAC,YAAY,CAAC,CAAA;YACjC,KAAK,CAAC,MAAM,CAAC,EAAE,CAAC,MAAM,EAAE,UAAU,IAAI;gBAClC,EAAE,CAAC,CAAC,OAAO,IAAI,KAAK,QAAQ,CAAC,CAAC,CAAC;oBAC3B,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC;gBACtB,CAAC;gBACD,EAAE,CAAC,CAAC,OAAO,IAAI,KAAK,QAAS,CAAC,CAAC,CAAC;oBAC5B,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,QAAQ,CAAC,MAAM,CAAC,CAAC,CAAA;gBACtC,CAAC;YACL,CAAC,CAAC,CAAC;YACH,KAAK,CAAC,MAAM,CAAC,EAAE,CAAC,MAAM,EAAE,UAAU,IAAI;gBAClC,OAAO,CAAC,KAAK,CAAC,IAAI,CAAC,CAAC;YACxB,CAAC,CAAC,CAAC;YACH,KAAK,CAAC,EAAE,CAAC,OAAO,EAAE,UAAU,IAAI;gBAC5B,OAAO,CAAC,GAAG,CAAC,gBAAgB,GAAG,IAAI,CAAC,CAAC;YACzC,CAAC,CAAC,CAAC;QACP,CAAC;IACL,CAAC;CAAA;AAtBD,sBAsBC","file":"serve.js","sourcesContent":["import { execFile, spawn } from 'child_process'\nimport * as path from 'path'\nimport * as utils from './utils'\nimport * as colors from 'colors'\n\n/**\n * This method wil search for a file called `start-object-server.command` \n * recursively until it finds the first one and then will call it\n * @param projectName the project name in this directory\n */\nexport async function serve(projectName: string) {\n    console.log(colors.magenta(`Starting ${projectName}`))\n    const commandFileName = `start-object-server.command`\n    const foundCommands = await utils.globFind(path.join(process.cwd(), `**/${commandFileName}`))\n    if (foundCommands.length > 0) {\n        const firstCommand = foundCommands[0]\n        const child = spawn(firstCommand)\n        child.stdout.on('data', function (data) {\n            if (typeof data === 'string') {\n                console.log(data);\n            }\n            if (typeof data === 'object' ) { \n                console.log(data.toString('utf8'))\n            }\n        });\n        child.stderr.on('data', function (data) {\n            console.error(data);\n        });\n        child.on('close', function (code) {\n            console.log('closing code: ' + code);\n        });\n    }\n}"],"sourceRoot":"/Users/maximilianalexander/realm-cli/src"}