{"version":3,"sources":["project-init.ts"],"names":[],"mappings":";;;;;;;;;;AAAA,+BAA8B;AAC9B,6BAA4B;AAC5B,iCAAgC;AAEhC,iCAAgC;AAGhC,qBACI,WAAsC,EACtC,UAAkB,EAClB,YAAqB,IAAI,EACzB,QAAiB,IAAI,EACrB,YAAqB,IAAI;;QAEzB,IAAI,SAAS,GAAW,OAAO,CAAC,GAAG,EAAE,CAAA;QACrC,EAAE,CAAC,CAAC,WAAW,CAAC,CAAC,CAAC;YACd,SAAS,GAAG,IAAI,CAAC,IAAI,CAAC,OAAO,CAAC,GAAG,EAAE,EAAE,WAAW,CAAC,CAAA;QACrD,CAAC;QACD,EAAE,CAAC,CAAC,CAAE,CAAA,MAAM,EAAE,CAAC,UAAU,CAAC,SAAS,CAAC,CAAA,CAAC,CAAC,CAAC;YACnC,IAAI,CAAC;gBACD,OAAO,CAAC,GAAG,CAAC,MAAM,CAAC,OAAO,CAAC,0CAA0C,WAAW,GAAG,CAAC,CAAC,CAAA;gBACrF,MAAM,EAAE,CAAC,MAAM,CAAC,SAAS,CAAC,CAAA;YAC9B,CAAC;YAAC,KAAK,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC;gBACX,OAAO,CAAC,KAAK,CAAC,MAAM,CAAC,GAAG,CAAC,0DAA0D,WAAW,EAAE,CAAC,CAAC,CAAA;gBAClG,OAAO,CAAC,IAAI,CAAC,CAAC,CAAC,CAAA;YACnB,CAAC;QACL,CAAC;QAAC,IAAI,CAAC,CAAC;YACJ,OAAO,CAAC,GAAG,CAAC,MAAM,CAAC,GAAG,CAAC,YAAY,WAAW,oEAAoE,CAAC,CAAC,CAAA;YACpH,OAAO,CAAC,IAAI,CAAC,CAAC,CAAC,CAAA;QACnB,CAAC;QACD,MAAM,SAAS,GAAW,IAAI,CAAC,IAAI,CAAC,SAAS,EAAE,QAAQ,CAAC,CAAA;QACxD,MAAM,MAAM,GAAW,IAAI,CAAC,IAAI,CAAC,SAAS,EAAE,KAAK,CAAC,CAAA;QAClD,MAAM,UAAU,GAAW,IAAI,CAAC,IAAI,CAAC,SAAS,EAAE,SAAS,CAAC,CAAA;QAE1D,EAAE,CAAC,CAAC,SAAS,CAAC,CAAC,CAAC;YACZ,IAAI,CAAC;gBACD,OAAO,CAAC,GAAG,CAAC,MAAM,CAAC,OAAO,CAAC,wBAAwB,CAAC,CAAC,CAAA;gBACrD,MAAM,EAAE,CAAC,MAAM,CAAC,SAAS,CAAC,CAAA;gBAC1B,MAAM,YAAY,GAAG,iDAAiD,CAAA;gBACtE,MAAM,wBAAwB,GAAG,UAAU,CAAA;gBAC3C,MAAM,kBAAkB,GAAG,qDAAqD,wBAAwB,SAAS,CAAA;gBACjH,MAAM,WAAW,GAAG,GAAG,YAAY,IAAI,kBAAkB,EAAE,CAAA;gBAC3D,MAAM,UAAU,GAAG,IAAI,CAAC,IAAI,CAAC,SAAS,EAAE,kBAAkB,CAAC,CAAA;gBAC3D,OAAO,CAAC,GAAG,CAAC,MAAM,CAAC,OAAO,CAAC,gCAAgC,UAAU,EAAE,CAAC,CAAC,CAAA;gBACzE,MAAM,KAAK,CAAC,YAAY,CAAC,WAAW,EAAE,UAAU,CAAC,CAAA;gBACjD,OAAO,CAAC,GAAG,CAAC,MAAM,CAAC,OAAO,CAAC,6DAA6D,CAAC,CAAC,CAAA;gBAC1F,MAAM,KAAK,CAAC,SAAS,CAAC,SAAS,EAAE,UAAU,CAAC,CAAA;gBAC5C,OAAO,CAAC,GAAG,CAAC,MAAM,CAAC,OAAO,CAAC,4CAA4C,CAAC,CAAC,CAAA;YAC7E,CAAC;YAAC,KAAK,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC;gBACX,OAAO,CAAC,KAAK,CAAC,MAAM,CAAC,GAAG,CAAC,iDAAiD,GAAG,EAAE,CAAC,CAAC,CAAA;gBACjF,OAAO,CAAC,IAAI,EAAE,CAAA;YAClB,CAAC;QACL,CAAC;QACD,EAAE,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC;YACR,IAAI,CAAC;gBACD,OAAO,CAAC,GAAG,CAAC,MAAM,CAAC,IAAI,CAAC,wBAAwB,CAAC,CAAC,CAAA;gBAClD,MAAM,cAAc,GAAG,gEAAgE,CAAA;gBACvF,MAAM,kBAAkB,GAAG,qBAAqB,CAAA;gBAChD,MAAM,aAAa,GAAG,IAAI,CAAC,IAAI,CAAC,SAAS,EAAE,GAAG,kBAAkB,SAAS,CAAC,CAAA;gBAC1E,MAAM,KAAK,CAAC,YAAY,CAAC,cAAc,EAAE,aAAa,CAAC,CAAA;gBACvD,OAAO,CAAC,GAAG,CAAC,MAAM,CAAC,IAAI,CAAC,wBAAwB,CAAC,CAAC,CAAA;gBAClD,MAAM,KAAK,CAAC,SAAS,CAAC,SAAS,EAAE,aAAa,CAAC,CAAA;gBAC/C,MAAM,KAAK,CAAC,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,SAAS,EAAE,kBAAkB,CAAC,EAAE,IAAI,CAAC,IAAI,CAAC,SAAS,EAAE,KAAK,CAAC,CAAC,CAAA;gBACzF,MAAM,KAAK,CAAC,MAAM,CAAC,aAAa,CAAC,CAAA;gBACjC,OAAO,CAAC,GAAG,CAAC,MAAM,CAAC,IAAI,CAAC,oBAAoB,CAAC,CAAC,CAAA;YAClD,CAAC;YAAC,KAAK,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC;gBACX,OAAO,CAAC,GAAG,CAAC,MAAM,CAAC,GAAG,CAAC,mDAAmD,GAAG,CAAC,QAAQ,EAAE,EAAE,CAAC,CAAC,CAAA;gBAC5F,OAAO,CAAC,IAAI,EAAE,CAAA;YAClB,CAAC;QACL,CAAC;QACD,EAAE,CAAC,CAAC,SAAS,CAAC,CAAC,CAAC;YACZ,IAAI,CAAC;gBACD,OAAO,CAAC,GAAG,CAAC,MAAM,CAAC,KAAK,CAAC,4BAA4B,CAAC,CAAC,CAAA;gBACvD,MAAM,EAAE,CAAC,MAAM,CAAC,UAAU,CAAC,CAAA;gBAC3B,OAAO,CAAC,GAAG,CAAC,MAAM,CAAC,KAAK,CAAC,wBAAwB,CAAC,CAAC,CAAA;YACvD,CAAC;YAAC,KAAK,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC;gBACX,OAAO,CAAC,KAAK,CAAC,GAAG,CAAC,CAAA;gBAClB,OAAO,CAAC,IAAI,EAAE,CAAA;YAClB,CAAC;QACL,CAAC;QACD,OAAO,CAAC,GAAG,CAAC,MAAM,CAAC,IAAI,CAAC,kCAAkC,WAAW,GAAG,CAAC,CAAC,CAAA;IAC9E,CAAC;CAAA;AA1ED,kCA0EC","file":"project-init.js","sourcesContent":["import * as fs from 'fs-extra'\nimport * as path from 'path'\nimport * as colors from 'colors'\nimport * as ProgressBar from 'progress'\nimport * as utils from './utils'\n\n\nexport async function initProject(\n    projectName: string | null | undefined,\n    rosVersion: string,\n    isBackend: boolean = true,\n    isIOS: boolean = true,\n    isAndroid: boolean = true\n) {\n    let directory: string = process.cwd()\n    if (projectName) {\n        directory = path.join(process.cwd(), projectName)\n    }\n    if (! await fs.pathExists(directory)) {\n        try {\n            console.log(colors.magenta(`Creating your new Realm Project called ${projectName}!`))\n            await fs.mkdirp(directory)\n        } catch (err) {\n            console.error(colors.red(`Oh no we ran into an issue creating your project name: ${projectName}`))\n            process.exit(1)\n        }\n    } else {\n        console.log(colors.red(`Uh oh... ${projectName} is already taken at this location. Maybe choose a different name?`))\n        process.exit(0)\n    }\n    const serverDir: string = path.join(directory, 'server')\n    const iosDir: string = path.join(directory, 'ios')\n    const androidDir: string = path.join(directory, 'android')\n\n    if (isBackend) {\n        try {\n            console.log(colors.magenta('Creating your backend!'))\n            await fs.mkdirp(serverDir)\n            const downloadBase = 'https://static.realm.io/downloads/object-server'\n            const realmObjectServerVersion = rosVersion\n            const objectServerBundle = `realm-object-server-bundled_node_darwin-developer-${realmObjectServerVersion}.tar.gz`\n            const downloadUrl = `${downloadBase}/${objectServerBundle}`\n            const bundlePath = path.join(serverDir, objectServerBundle)\n            console.log(colors.magenta(`Grabbing Realm-Object-Server ${rosVersion}`))\n            await utils.downloadFile(downloadUrl, bundlePath)\n            console.log(colors.magenta('Unpacking your backend. This could take a few seconds (^_^)'))\n            await utils.untarFile(serverDir, bundlePath)\n            console.log(colors.magenta('Done with your backend. Thanks for waiting'))\n        } catch (err) {\n            console.error(colors.red(`pooooo we ran into an issue with your backend ${err}`))\n            process.exit()\n        }\n    }\n    if (isIOS) {\n        try {\n            console.log(colors.cyan('Creating your iOS app!'))\n            const iosDownloadUrl = `https://github.com/mbalex99/ios-template/archive/master.tar.gz`\n            const iosUnzippedDirName = 'ios-template-master'\n            const iosBundlePath = path.join(directory, `${iosUnzippedDirName}.tar.gz`)\n            await utils.downloadFile(iosDownloadUrl, iosBundlePath)\n            console.log(colors.cyan('Unpacking your iOS App'))\n            await utils.untarFile(directory, iosBundlePath)\n            await utils.rename(path.join(directory, iosUnzippedDirName), path.join(directory, 'ios'))\n            await utils.remove(iosBundlePath)\n            console.log(colors.cyan('Done your iOS app!'))\n        } catch (err) {\n            console.log(colors.red(`Uh oh we ran into an issue making your iOS app! ${err.toString()}`))\n            process.exit()\n        }\n    }\n    if (isAndroid) {\n        try {\n            console.log(colors.green('Creating your Android app!'))\n            await fs.mkdirp(androidDir)\n            console.log(colors.green('Done your Android app!'))\n        } catch (err) {\n            console.error(err)\n            process.exit()\n        }\n    }\n    console.log(colors.bold(`Congrats! Now run \"realm start ${projectName}\"`))\n}"],"sourceRoot":"/Users/maximilianalexander/realm-cli/src"}