#!/usr/bin/env node
"use strict";
var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};
Object.defineProperty(exports, "__esModule", { value: true });
const program = require("commander");
const packageJSON = require('../package.json');
const project_init_1 = require("./project-init");
const serve_1 = require("./serve");
program
    .version(packageJSON["version"])
    .command('init [projectName]')
    .option('-r, --ros-version [version]', 'ROS Version')
    .action(function (projectName) {
    return __awaiter(this, void 0, void 0, function* () {
        if (!projectName) {
            console.warn('Specify a project name. Run something like "realm init MyRealmApp"');
            return;
        }
        const rosVersion = this.rosVersion || packageJSON._defaultRealmDependencies.ROS_VERSION;
        yield project_init_1.initProject(projectName, rosVersion);
    });
});
program.command('start [projectName]')
    .action(function (projectName) {
    return __awaiter(this, void 0, void 0, function* () {
        if (!projectName) {
            console.warn('Specify a project name. Run something like "realm start MyRealmApp"');
            process.exit(0);
        }
        yield serve_1.serve(projectName);
    });
});
program
    .command('go [names...]')
    .option('-p, --peppers', 'Add peppers')
    .action(function (...commands) {
    return __awaiter(this, void 0, void 0, function* () {
        console.log(commands[0] || []);
        process.exit();
    });
});
program.parse(process.argv);
if (!program.args.length)
    program.help();

//# sourceMappingURL=index.js.map
