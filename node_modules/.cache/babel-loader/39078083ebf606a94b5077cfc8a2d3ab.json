{"ast":null,"code":"import _slicedToArray from\"/Users/berkakgun/Desktop/ttk/ttkui/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import React,{useState,useEffect}from\"react\";import{Grid,Form}from\"semantic-ui-react\";import{countryOptions,businessModelOptions,jobOptionsBM2,jobOptionsBM1}from\"assets/selectableOptions\";import\"react-dates/initialize\";import{SingleDatePicker}from\"react-dates\";import\"react-dates/lib/css/_datepicker.css\";import WithSelect from\"components/container/withSelect\";import WithButtonGroup from\"components/container/withButtonGroup\";import{useSelector,useDispatch}from\"react-redux\";import{getUserElements}from\"store/selectors\";import{USER}from\"store/actionTypes\";var UserForm=function UserForm(){var user=useSelector(getUserElements);var _useState=useState(null),_useState2=_slicedToArray(_useState,2),date=_useState2[0],setDate=_useState2[1];var _useState3=useState(false),_useState4=_slicedToArray(_useState3,2),focused=_useState4[0],setFocused=_useState4[1];var dispatch=useDispatch();useEffect(function(){var jobDate=date===null||date===void 0?void 0:date.format(\"YYYY-MM-DD HH:MM\");dispatch({type:USER.DATE,payload:jobDate});},[date,dispatch]);return/*#__PURE__*/React.createElement(React.Fragment,null,/*#__PURE__*/React.createElement(Form,null,/*#__PURE__*/React.createElement(Grid,{columns:\"equal\",divided:\"vertically\"},/*#__PURE__*/React.createElement(Grid.Row,{centered:true},/*#__PURE__*/React.createElement(WithSelect,{name:\"Country\",options:countryOptions})),/*#__PURE__*/React.createElement(Grid.Row,{centered:true},/*#__PURE__*/React.createElement(WithSelect,{name:\"Business Model\",options:businessModelOptions}),/*#__PURE__*/React.createElement(WithSelect,{name:\"Job\",options:user.bm===\"1\"?jobOptionsBM1:jobOptionsBM2})),user.job?/*#__PURE__*/React.createElement(Grid.Row,{centered:true},/*#__PURE__*/React.createElement(Grid.Column,{textAlign:\"center\"},/*#__PURE__*/React.createElement(SingleDatePicker,{noBorder:true,numberOfMonths:1,date:date,onDateChange:function onDateChange(date){return setDate(date);},focused:focused,onFocusChange:function onFocusChange(_ref){var focused=_ref.focused;return setFocused(focused);},id:\"jobDate\",isOutsideRange:function isOutsideRange(){return false;}}),/*#__PURE__*/React.createElement(WithButtonGroup,{left:\"Quote\",right:\"Deal\"}))):null)));};export default UserForm;","map":{"version":3,"sources":["/Users/berkakgun/Desktop/ttk/ttkui/src/components/forms/userForm.tsx"],"names":["React","useState","useEffect","Grid","Form","countryOptions","businessModelOptions","jobOptionsBM2","jobOptionsBM1","SingleDatePicker","WithSelect","WithButtonGroup","useSelector","useDispatch","getUserElements","USER","UserForm","user","date","setDate","focused","setFocused","dispatch","jobDate","format","type","DATE","payload","bm","job"],"mappings":"yJAAA,MAAOA,CAAAA,KAAP,EAAgBC,QAAhB,CAA0BC,SAA1B,KAA2C,OAA3C,CACA,OAASC,IAAT,CAAeC,IAAf,KAA2B,mBAA3B,CACA,OACEC,cADF,CAEEC,oBAFF,CAGEC,aAHF,CAIEC,aAJF,KAKO,0BALP,CAMA,MAAO,wBAAP,CACA,OAASC,gBAAT,KAAiC,aAAjC,CACA,MAAO,qCAAP,CACA,MAAOC,CAAAA,UAAP,KAAuB,iCAAvB,CACA,MAAOC,CAAAA,eAAP,KAA4B,sCAA5B,CACA,OAASC,WAAT,CAAsBC,WAAtB,KAAyC,aAAzC,CACA,OAASC,eAAT,KAAgC,iBAAhC,CAEA,OAASC,IAAT,KAAqB,mBAArB,CAEA,GAAMC,CAAAA,QAAkB,CAAG,QAArBA,CAAAA,QAAqB,EAAM,CAC/B,GAAMC,CAAAA,IAAI,CAAGL,WAAW,CAACE,eAAD,CAAxB,CAD+B,cAEPb,QAAQ,CAAuB,IAAvB,CAFD,wCAExBiB,IAFwB,eAElBC,OAFkB,8BAGDlB,QAAQ,CAAiB,KAAjB,CAHP,yCAGxBmB,OAHwB,eAGfC,UAHe,eAI/B,GAAMC,CAAAA,QAAQ,CAAGT,WAAW,EAA5B,CACAX,SAAS,CAAC,UAAM,CACd,GAAIqB,CAAAA,OAAO,CAAGL,IAAH,SAAGA,IAAH,iBAAGA,IAAI,CAAEM,MAAN,CAAa,kBAAb,CAAd,CACAF,QAAQ,CAAC,CAAEG,IAAI,CAAEV,IAAI,CAACW,IAAb,CAAmBC,OAAO,CAAEJ,OAA5B,CAAD,CAAR,CACD,CAHQ,CAGN,CAACL,IAAD,CAAOI,QAAP,CAHM,CAAT,CAIA,mBACE,oBAAC,KAAD,CAAO,QAAP,mBACE,oBAAC,IAAD,mBACE,oBAAC,IAAD,EAAM,OAAO,CAAC,OAAd,CAAsB,OAAO,CAAC,YAA9B,eACE,oBAAC,IAAD,CAAM,GAAN,EAAU,QAAQ,KAAlB,eACE,oBAAC,UAAD,EAAY,IAAI,CAAC,SAAjB,CAA2B,OAAO,CAAEjB,cAApC,EADF,CADF,cAIE,oBAAC,IAAD,CAAM,GAAN,EAAU,QAAQ,KAAlB,eACE,oBAAC,UAAD,EAAY,IAAI,CAAC,gBAAjB,CAAkC,OAAO,CAAEC,oBAA3C,EADF,cAGE,oBAAC,UAAD,EACE,IAAI,CAAC,KADP,CAEE,OAAO,CAAEW,IAAI,CAACW,EAAL,GAAY,GAAZ,CAAkBpB,aAAlB,CAAkCD,aAF7C,EAHF,CAJF,CAYGU,IAAI,CAACY,GAAL,cACC,oBAAC,IAAD,CAAM,GAAN,EAAU,QAAQ,KAAlB,eACE,oBAAC,IAAD,CAAM,MAAN,EAAa,SAAS,CAAC,QAAvB,eACE,oBAAC,gBAAD,EACE,QAAQ,KADV,CAEE,cAAc,CAAE,CAFlB,CAGE,IAAI,CAAEX,IAHR,CAIE,YAAY,CAAE,sBAACA,IAAD,QAAUC,CAAAA,OAAO,CAACD,IAAD,CAAjB,EAJhB,CAKE,OAAO,CAAEE,OALX,CAME,aAAa,CAAE,gCAAGA,CAAAA,OAAH,MAAGA,OAAH,OAAiBC,CAAAA,UAAU,CAACD,OAAD,CAA3B,EANjB,CAOE,EAAE,CAAC,SAPL,CAQE,cAAc,CAAE,gCAAM,MAAN,EARlB,EADF,cAWE,oBAAC,eAAD,EAAiB,IAAI,CAAC,OAAtB,CAA8B,KAAK,CAAC,MAApC,EAXF,CADF,CADD,CAgBG,IA5BN,CADF,CADF,CADF,CAoCD,CA7CD,CA+CA,cAAeJ,CAAAA,QAAf","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport { Grid, Form } from \"semantic-ui-react\";\nimport {\n  countryOptions,\n  businessModelOptions,\n  jobOptionsBM2,\n  jobOptionsBM1,\n} from \"assets/selectableOptions\";\nimport \"react-dates/initialize\";\nimport { SingleDatePicker } from \"react-dates\";\nimport \"react-dates/lib/css/_datepicker.css\";\nimport WithSelect from \"components/container/withSelect\";\nimport WithButtonGroup from \"components/container/withButtonGroup\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { getUserElements } from \"store/selectors\";\nimport moment from \"moment\";\nimport { USER } from \"store/actionTypes\";\n\nconst UserForm: React.FC = () => {\n  const user = useSelector(getUserElements);\n  const [date, setDate] = useState<moment.Moment | null>(null);\n  const [focused, setFocused] = useState<boolean | null>(false);\n  const dispatch = useDispatch();\n  useEffect(() => {\n    let jobDate = date?.format(\"YYYY-MM-DD HH:MM\");\n    dispatch({ type: USER.DATE, payload: jobDate });\n  }, [date, dispatch]);\n  return (\n    <React.Fragment>\n      <Form>\n        <Grid columns=\"equal\" divided=\"vertically\">\n          <Grid.Row centered>\n            <WithSelect name=\"Country\" options={countryOptions} />\n          </Grid.Row>\n          <Grid.Row centered>\n            <WithSelect name=\"Business Model\" options={businessModelOptions} />\n\n            <WithSelect\n              name=\"Job\"\n              options={user.bm === \"1\" ? jobOptionsBM1 : jobOptionsBM2}\n            />\n          </Grid.Row>\n          {user.job ? (\n            <Grid.Row centered>\n              <Grid.Column textAlign=\"center\">\n                <SingleDatePicker\n                  noBorder\n                  numberOfMonths={1}\n                  date={date}\n                  onDateChange={(date) => setDate(date)}\n                  focused={focused}\n                  onFocusChange={({ focused }) => setFocused(focused)}\n                  id=\"jobDate\"\n                  isOutsideRange={() => false}\n                />\n                <WithButtonGroup left=\"Quote\" right=\"Deal\" />\n              </Grid.Column>\n            </Grid.Row>\n          ) : null}\n        </Grid>\n      </Form>\n    </React.Fragment>\n  );\n};\n\nexport default UserForm;\n"]},"metadata":{},"sourceType":"module"}