{"ast":null,"code":"var _jsxFileName = \"/Users/berkakgun/Desktop/ttk/ttkui/src/components/container/withClipboard.tsx\";\nimport React, { useState, useRef } from \"react\";\nimport { Button, Icon } from \"semantic-ui-react\";\nimport CopyToClipboard from \"react-copy-to-clipboard\";\n\nconst TriggerButton = ({\n  name,\n  copy,\n  popUp\n}) => /*#__PURE__*/React.createElement(CopyToClipboard, {\n  text: copy,\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 10,\n    columnNumber: 3\n  }\n}, /*#__PURE__*/React.createElement(Button, {\n  basic: true,\n  type: \"button\",\n  style: {\n    width: \"125px\"\n  },\n  animated: \"fade\",\n  size: \"medium\",\n  onClick: () => popUp(true),\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 11,\n    columnNumber: 5\n  }\n}, /*#__PURE__*/React.createElement(Button.Content, {\n  visible: true,\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 19,\n    columnNumber: 7\n  }\n}, name), /*#__PURE__*/React.createElement(Button.Content, {\n  hidden: true,\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 20,\n    columnNumber: 7\n  }\n}, \"Copy \", /*#__PURE__*/React.createElement(Icon, {\n  style: {\n    marginLeft: \"4px\"\n  },\n  name: \"clipboard\",\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 21,\n    columnNumber: 14\n  }\n}))));\n\nconst ClipBoardButton = ({\n  name,\n  copy\n}) => {\n  const [info, setInfo] = useState(false);\n  const ref = useRef(false);\n  return /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      margin: \"5px\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(TriggerButton, {\n    name: name,\n    copy: copy,\n    popUp: e => setInfo(e),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 7\n    }\n  }));\n};\n\nexport default ClipBoardButton;","map":{"version":3,"sources":["/Users/berkakgun/Desktop/ttk/ttkui/src/components/container/withClipboard.tsx"],"names":["React","useState","useRef","Button","Icon","CopyToClipboard","TriggerButton","name","copy","popUp","width","marginLeft","ClipBoardButton","info","setInfo","ref","margin","e"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,MAA1B,QAAwC,OAAxC;AACA,SAAgBC,MAAhB,EAAwBC,IAAxB,QAAoC,mBAApC;AACA,OAAOC,eAAP,MAA4B,yBAA5B;;AAEA,MAAMC,aAIJ,GAAG,CAAC;AAAEC,EAAAA,IAAF;AAAQC,EAAAA,IAAR;AAAcC,EAAAA;AAAd,CAAD,kBACH,oBAAC,eAAD;AAAiB,EAAA,IAAI,EAAED,IAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBACE,oBAAC,MAAD;AACE,EAAA,KAAK,MADP;AAEE,EAAA,IAAI,EAAC,QAFP;AAGE,EAAA,KAAK,EAAE;AAAEE,IAAAA,KAAK,EAAE;AAAT,GAHT;AAIE,EAAA,QAAQ,EAAC,MAJX;AAKE,EAAA,IAAI,EAAC,QALP;AAME,EAAA,OAAO,EAAE,MAAMD,KAAK,CAAC,IAAD,CANtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAQE,oBAAC,MAAD,CAAQ,OAAR;AAAgB,EAAA,OAAO,MAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAyBF,IAAzB,CARF,eASE,oBAAC,MAAD,CAAQ,OAAR;AAAgB,EAAA,MAAM,MAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,yBACO,oBAAC,IAAD;AAAM,EAAA,KAAK,EAAE;AAAEI,IAAAA,UAAU,EAAE;AAAd,GAAb;AAAoC,EAAA,IAAI,EAAC,WAAzC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EADP,CATF,CADF,CALF;;AAsBA,MAAMC,eAAyD,GAAG,CAAC;AACjEL,EAAAA,IADiE;AAEjEC,EAAAA;AAFiE,CAAD,KAG5D;AACJ,QAAM,CAACK,IAAD,EAAOC,OAAP,IAAkBb,QAAQ,CAAC,KAAD,CAAhC;AACA,QAAMc,GAAG,GAAGb,MAAM,CAAC,KAAD,CAAlB;AACA,sBACE;AAAK,IAAA,KAAK,EAAE;AAAEc,MAAAA,MAAM,EAAE;AAAV,KAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,aAAD;AAAe,IAAA,IAAI,EAAET,IAArB;AAA2B,IAAA,IAAI,EAAEC,IAAjC;AAAuC,IAAA,KAAK,EAAGS,CAAD,IAAOH,OAAO,CAACG,CAAD,CAA5D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CADF;AAKD,CAXD;;AAaA,eAAeL,eAAf","sourcesContent":["import React, { useState, useRef } from \"react\";\nimport { Popup, Button, Icon } from \"semantic-ui-react\";\nimport CopyToClipboard from \"react-copy-to-clipboard\";\n\nconst TriggerButton: React.FC<{\n  name: string;\n  copy: string;\n  popUp: React.Dispatch<React.SetStateAction<boolean>>;\n}> = ({ name, copy, popUp }) => (\n  <CopyToClipboard text={copy}>\n    <Button\n      basic\n      type=\"button\"\n      style={{ width: \"125px\" }}\n      animated=\"fade\"\n      size=\"medium\"\n      onClick={() => popUp(true)}\n    >\n      <Button.Content visible>{name}</Button.Content>\n      <Button.Content hidden>\n        Copy <Icon style={{ marginLeft: \"4px\" }} name=\"clipboard\" />\n      </Button.Content>\n    </Button>\n  </CopyToClipboard>\n);\n\nconst ClipBoardButton: React.FC<{ name: string; copy: string }> = ({\n  name,\n  copy,\n}) => {\n  const [info, setInfo] = useState(false);\n  const ref = useRef(false);\n  return (\n    <div style={{ margin: \"5px\" }}>\n      <TriggerButton name={name} copy={copy} popUp={(e) => setInfo(e)} />\n    </div>\n  );\n};\n\nexport default ClipBoardButton;\n"]},"metadata":{},"sourceType":"module"}