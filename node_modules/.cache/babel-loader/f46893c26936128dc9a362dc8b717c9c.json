{"ast":null,"code":"var _jsxFileName = \"/Users/berkakgun/Desktop/ttk/ttkui/src/components/AuthGuard.tsx\";\nimport React, { useContext, useState } from \"react\";\nimport { UserContext } from \"core/store/ContextApi/Context\";\nimport { Application } from \"core/db\";\nexport function useStitchAuth() {\n  const context = useContext(UserContext);\n  console.log(context);\n\n  if (!context) {\n    return {\n      isLoggedIn: false,\n      actions: {}\n    };\n  }\n\n  return context;\n}\nexport function AuthGuard(props) {\n  var _Application$currentU;\n\n  const [authState, setAuthState] = useState({\n    isLoggedIn: ((_Application$currentU = Application.currentUser) === null || _Application$currentU === void 0 ? void 0 : _Application$currentU.state) === \"active\",\n    currentUser: Application.currentUser\n  });\n\n  const handleLogout = () => {\n    var _Application$currentU2;\n\n    return (_Application$currentU2 = Application.currentUser) === null || _Application$currentU2 === void 0 ? void 0 : _Application$currentU2.logOut;\n  };\n\n  const authInfo = React.useMemo(() => {\n    const {\n      isLoggedIn,\n      currentUser\n    } = authState;\n    const value = {\n      isLoggedIn,\n      currentUser,\n      actions: {\n        handleLogout,\n        setAuthState\n      }\n    };\n    return value;\n  }, [authState]);\n  return /*#__PURE__*/React.createElement(UserContext.Provider, {\n    value: authInfo,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 5\n    }\n  }, props.children);\n}","map":{"version":3,"sources":["/Users/berkakgun/Desktop/ttk/ttkui/src/components/AuthGuard.tsx"],"names":["React","useContext","useState","UserContext","Application","useStitchAuth","context","console","log","isLoggedIn","actions","AuthGuard","props","authState","setAuthState","currentUser","state","handleLogout","logOut","authInfo","useMemo","value","children"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,UAAhB,EAA4BC,QAA5B,QAA4C,OAA5C;AACA,SAASC,WAAT,QAA4B,+BAA5B;AACA,SAASC,WAAT,QAA4B,SAA5B;AAEA,OAAO,SAASC,aAAT,GAAyB;AAC9B,QAAMC,OAAO,GAAGL,UAAU,CAACE,WAAD,CAA1B;AACAI,EAAAA,OAAO,CAACC,GAAR,CAAYF,OAAZ;;AACA,MAAI,CAACA,OAAL,EAAc;AACZ,WAAO;AAAEG,MAAAA,UAAU,EAAE,KAAd;AAAqBC,MAAAA,OAAO,EAAE;AAA9B,KAAP;AACD;;AACD,SAAOJ,OAAP;AACD;AAED,OAAO,SAASK,SAAT,CAAmBC,KAAnB,EAA+B;AAAA;;AACpC,QAAM,CAACC,SAAD,EAAYC,YAAZ,IAA4BZ,QAAQ,CAAC;AACzCO,IAAAA,UAAU,EAAE,0BAAAL,WAAW,CAACW,WAAZ,gFAAyBC,KAAzB,MAAmC,QADN;AAEzCD,IAAAA,WAAW,EAAEX,WAAW,CAACW;AAFgB,GAAD,CAA1C;;AAKA,QAAME,YAAY,GAAG;AAAA;;AAAA,qCAAMb,WAAW,CAACW,WAAlB,2DAAM,uBAAyBG,MAA/B;AAAA,GAArB;;AACA,QAAMC,QAAQ,GAAGnB,KAAK,CAACoB,OAAN,CAAc,MAAM;AACnC,UAAM;AAAEX,MAAAA,UAAF;AAAcM,MAAAA;AAAd,QAA8BF,SAApC;AACA,UAAMQ,KAAK,GAAG;AACZZ,MAAAA,UADY;AAEZM,MAAAA,WAFY;AAGZL,MAAAA,OAAO,EAAE;AAAEO,QAAAA,YAAF;AAAgBH,QAAAA;AAAhB;AAHG,KAAd;AAKA,WAAOO,KAAP;AACD,GARgB,EAQd,CAACR,SAAD,CARc,CAAjB;AASA,sBACE,oBAAC,WAAD,CAAa,QAAb;AAAsB,IAAA,KAAK,EAAEM,QAA7B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGP,KAAK,CAACU,QADT,CADF;AAKD","sourcesContent":["import React, { useContext, useState } from \"react\";\nimport { UserContext } from \"core/store/ContextApi/Context\";\nimport { Application } from \"core/db\";\n\nexport function useStitchAuth() {\n  const context = useContext(UserContext);\n  console.log(context);\n  if (!context) {\n    return { isLoggedIn: false, actions: {} };\n  }\n  return context;\n}\n\nexport function AuthGuard(props: any) {\n  const [authState, setAuthState] = useState({\n    isLoggedIn: Application.currentUser?.state === \"active\",\n    currentUser: Application.currentUser,\n  });\n\n  const handleLogout = () => Application.currentUser?.logOut;\n  const authInfo = React.useMemo(() => {\n    const { isLoggedIn, currentUser } = authState;\n    const value = {\n      isLoggedIn,\n      currentUser,\n      actions: { handleLogout, setAuthState },\n    };\n    return value;\n  }, [authState]);\n  return (\n    <UserContext.Provider value={authInfo}>\n      {props.children}\n    </UserContext.Provider>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}