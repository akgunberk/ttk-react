{"ast":null,"code":"var _jsxFileName = \"/Users/berkakgun/Desktop/ttk/ttkui/src/components/forms/UserForm.tsx\";\nimport React, { useEffect, useState } from \"react\";\nimport { Label, Grid, Button, Popup, Select, Checkbox } from \"semantic-ui-react\";\nimport CustomUserCard from \"../cards/customUser\";\nimport countryOptions from \"../../assets/selectableOptions\";\n\nconst CustomUser = props => {\n  let values = props.values;\n  let passProps = props.handleForm;\n  let card = props.options;\n  useEffect(() => {\n    values.deal = deal;\n    passProps(values);\n  });\n  let [deal, setDeal] = useState(0);\n  return /*#__PURE__*/React.createElement(React.Fragment, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      margin: \"0px 15%\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    columns: 2,\n    divided: true,\n    stackable: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Grid.Column, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(CustomUserCard, {\n    flag: values.country,\n    card: card,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 13\n    }\n  })), /*#__PURE__*/React.createElement(Grid.Column, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    columns: 4,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Grid.Row, {\n    centered: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(Grid.Column, {\n    textAlign: \"center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(Label, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 19\n    }\n  }, \"Country\"), /*#__PURE__*/React.createElement(Select, {\n    placeholder: \"Select Country\",\n    options: countryOptions,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 19\n    }\n  })), /*#__PURE__*/React.createElement(Grid.Column, {\n    textAlign: \"center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    style: {\n      marginBottom: \"5px 0px 0px\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 19\n    }\n  }, /*#__PURE__*/React.createElement(Label, {\n    size: \"medium\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(Checkbox, {\n    label: \"Password\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 23\n    }\n  })))), /*#__PURE__*/React.createElement(Grid.Column, {\n    textAlign: \"center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(Label, {\n    size: \"medium\",\n    style: {\n      margin: \" 0px\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 19\n    }\n  }, /*#__PURE__*/React.createElement(Checkbox, {\n    label: \"with Job\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 21\n    }\n  })), values.job ? /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(Select, {\n    placeholder: \"Jobs\",\n    options: jobOptions,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 23\n    }\n  })) : null), /*#__PURE__*/React.createElement(Grid.Column, {\n    textAlign: \"center\",\n    style: {\n      width: \"auto\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 17\n    }\n  }, values.job === true ? /*#__PURE__*/React.createElement(React.Fragment, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(Button.Group, {\n    size: \"medium\",\n    style: {\n      marginTop: \"30px\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 23\n    }\n  }, \"with\", /*#__PURE__*/React.createElement(Popup, {\n    content: \"Creates 2 quotes for you\",\n    pinned: true,\n    position: \"bottom center\",\n    on: \"hover\",\n    trigger: /*#__PURE__*/React.createElement(Button, {\n      type: \"button\",\n      positive: deal === 0,\n      onClick: () => setDeal(0),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 29\n      }\n    }, \"Quote\"),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 25\n    }\n  }), /*#__PURE__*/React.createElement(Button.Or, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 25\n    }\n  }), /*#__PURE__*/React.createElement(Button, {\n    type: \"button\",\n    positive: deal === 1,\n    onClick: () => setDeal(1),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 25\n    }\n  }, \"Deal\"))) : null)))))));\n};\n/* const CustomUserFormik = withFormik({\n  mapPropsToValues({ password, job, country, service, quoteNumber, deal }) {\n    return {\n      password: password || true,\n      job: job || false,\n      country: country || \"tr\",\n      service: service || 156,\n      quoteNumber: quoteNumber || 2,\n      deal: deal,\n    };\n  },\n})(CustomUser);\n\nexport default CustomUserFormik; */\n\n\nexport default CustomUser;","map":{"version":3,"sources":["/Users/berkakgun/Desktop/ttk/ttkui/src/components/forms/UserForm.tsx"],"names":["React","useEffect","useState","Label","Grid","Button","Popup","Select","Checkbox","CustomUserCard","countryOptions","CustomUser","props","values","passProps","handleForm","card","options","deal","setDeal","margin","country","marginBottom","job","jobOptions","width","marginTop"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport {\n  Label,\n  Grid,\n  Button,\n  Popup,\n  Select,\n  Checkbox,\n} from \"semantic-ui-react\";\nimport DefaultUser from \"../cards/defaultUser\";\nimport CustomUserCard from \"../cards/customUser\";\nimport countryOptions from \"../../assets/selectableOptions\";\nconst CustomUser = (props) => {\n  let values = props.values;\n  let passProps = props.handleForm;\n  let card = props.options;\n\n  useEffect(() => {\n    values.deal = deal;\n    passProps(values);\n  });\n  let [deal, setDeal] = useState(0);\n  return (\n    <React.Fragment>\n      <div style={{ margin: \"0px 15%\" }}>\n        <Grid columns={2} divided stackable>\n          <Grid.Column>\n            <CustomUserCard flag={values.country} card={card} />\n          </Grid.Column>\n          <Grid.Column>\n            <Grid columns={4}>\n              <Grid.Row centered>\n                <Grid.Column textAlign=\"center\">\n                  <Label>Country</Label>\n                  <Select\n                    placeholder=\"Select Country\"\n                    options={countryOptions}\n                  />\n                </Grid.Column>\n                <Grid.Column textAlign=\"center\">\n                  <span style={{ marginBottom: \"5px 0px 0px\" }}>\n                    <Label size=\"medium\">\n                      <Checkbox label=\"Password\" />\n                    </Label>\n                  </span>\n                </Grid.Column>\n                <Grid.Column textAlign=\"center\">\n                  <Label size=\"medium\" style={{ margin: \" 0px\" }}>\n                    <Checkbox label=\"with Job\" />\n                  </Label>\n                  {values.job ? (\n                    <div>\n                      <Select placeholder=\"Jobs\" options={jobOptions} />\n                    </div>\n                  ) : null}\n                </Grid.Column>\n                <Grid.Column textAlign=\"center\" style={{ width: \"auto\" }}>\n                  {values.job === true ? (\n                    <React.Fragment>\n                      <Button.Group size=\"medium\" style={{ marginTop: \"30px\" }}>\n                        with\n                        <Popup\n                          content=\"Creates 2 quotes for you\"\n                          pinned\n                          position=\"bottom center\"\n                          on=\"hover\"\n                          trigger={\n                            <Button\n                              type=\"button\"\n                              positive={deal === 0}\n                              onClick={() => setDeal(0)}\n                            >\n                              Quote\n                            </Button>\n                          }\n                        />\n                        <Button.Or />\n                        <Button\n                          type=\"button\"\n                          positive={deal === 1}\n                          onClick={() => setDeal(1)}\n                        >\n                          Deal\n                        </Button>\n                      </Button.Group>\n                    </React.Fragment>\n                  ) : null}\n                </Grid.Column>\n              </Grid.Row>\n            </Grid>\n          </Grid.Column>\n        </Grid>\n      </div>\n    </React.Fragment>\n  );\n};\n\n/* const CustomUserFormik = withFormik({\n  mapPropsToValues({ password, job, country, service, quoteNumber, deal }) {\n    return {\n      password: password || true,\n      job: job || false,\n      country: country || \"tr\",\n      service: service || 156,\n      quoteNumber: quoteNumber || 2,\n      deal: deal,\n    };\n  },\n})(CustomUser);\n\nexport default CustomUserFormik; */\n\nexport default CustomUser;\n"]},"metadata":{},"sourceType":"module"}