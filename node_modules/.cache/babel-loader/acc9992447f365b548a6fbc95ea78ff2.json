{"ast":null,"code":"var _jsxFileName = \"/Users/berkakgun/Desktop/ttk/ttkui/src/components/display/ConfirmEmail.tsx\";\nimport React, { useState } from \"react\";\nimport { confirmUser } from \"api/db-actions\";\nimport { Button, Form } from \"semantic-ui-react\";\nimport { useHistory } from \"react-router\";\nimport WithMessage from \"components/container/withMessage\";\nimport { Stitch, UserPasswordAuthProviderClient } from \"mongodb-stitch-browser-sdk\";\nexport const Confirmation = () => {\n  const [error, setError] = useState(false);\n  const [mail, setMail] = useState(\"\");\n  const history = useHistory();\n\n  const resendMail = async email => {\n    Stitch.defaultAppClient.auth.getProviderClient(UserPasswordAuthProviderClient.factory).resendConfirmationEmail(email);\n  };\n\n  try {\n    confirmUser().then(res => history.push(\"/login\")).catch(() => setError(true));\n  } catch (error) {\n    setError(true);\n  }\n\n  return /*#__PURE__*/React.createElement(React.Fragment, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 5\n    }\n  }, error ? /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      display: \"block\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(WithMessage, {\n    header: \"Please try to login with your email and password\",\n    message: \"If you cant login it means you had a trouble with confirmation of your email.\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(Form.Input, {\n    icon: \"user\",\n    iconPosition: \"left\",\n    type: \"email\",\n    placeholder: \"Email\",\n    onChange: (e, data) => setMail(data.value),\n    style: {\n      marginTop: \"25px\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(Button, {\n    style: {\n      marginTop: \"10px\"\n    },\n    primary: true,\n    onClick: resendMail,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 11\n    }\n  }, \"Resend Confirmation Mail\")) : null);\n};","map":{"version":3,"sources":["/Users/berkakgun/Desktop/ttk/ttkui/src/components/display/ConfirmEmail.tsx"],"names":["React","useState","confirmUser","Button","Form","useHistory","WithMessage","Stitch","UserPasswordAuthProviderClient","Confirmation","error","setError","mail","setMail","history","resendMail","email","defaultAppClient","auth","getProviderClient","factory","resendConfirmationEmail","then","res","push","catch","display","e","data","value","marginTop"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,SAASC,WAAT,QAAoC,gBAApC;AACA,SAASC,MAAT,EAAiBC,IAAjB,QAA6B,mBAA7B;AACA,SAASC,UAAT,QAA2B,cAA3B;AACA,OAAOC,WAAP,MAAwB,kCAAxB;AACA,SACEC,MADF,EAEEC,8BAFF,QAGO,4BAHP;AAKA,OAAO,MAAMC,YAAsB,GAAG,MAAM;AAC1C,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBV,QAAQ,CAAC,KAAD,CAAlC;AACA,QAAM,CAACW,IAAD,EAAOC,OAAP,IAAkBZ,QAAQ,CAAC,EAAD,CAAhC;AACA,QAAMa,OAAO,GAAGT,UAAU,EAA1B;;AACA,QAAMU,UAAU,GAAG,MAAOC,KAAP,IAAyB;AAC1CT,IAAAA,MAAM,CAACU,gBAAP,CAAwBC,IAAxB,CACGC,iBADH,CACqBX,8BAA8B,CAACY,OADpD,EAEGC,uBAFH,CAE2BL,KAF3B;AAGD,GAJD;;AAKA,MAAI;AACFd,IAAAA,WAAW,GACRoB,IADH,CACSC,GAAD,IAAST,OAAO,CAACU,IAAR,CAAa,QAAb,CADjB,EAEGC,KAFH,CAES,MAAMd,QAAQ,CAAC,IAAD,CAFvB;AAGD,GAJD,CAIE,OAAOD,KAAP,EAAc;AACdC,IAAAA,QAAQ,CAAC,IAAD,CAAR;AACD;;AACD,sBACE,oBAAC,KAAD,CAAO,QAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGD,KAAK,gBACJ;AAAK,IAAA,KAAK,EAAE;AAAEgB,MAAAA,OAAO,EAAE;AAAX,KAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,WAAD;AACE,IAAA,MAAM,EAAC,kDADT;AAEE,IAAA,OAAO,EAAC,+EAFV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,eAKE,oBAAC,IAAD,CAAM,KAAN;AACE,IAAA,IAAI,EAAC,MADP;AAEE,IAAA,YAAY,EAAC,MAFf;AAGE,IAAA,IAAI,EAAC,OAHP;AAIE,IAAA,WAAW,EAAC,OAJd;AAKE,IAAA,QAAQ,EAAE,CAACC,CAAD,EAAIC,IAAJ,KAAaf,OAAO,CAACe,IAAI,CAACC,KAAN,CALhC;AAME,IAAA,KAAK,EAAE;AAAEC,MAAAA,SAAS,EAAE;AAAb,KANT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IALF,eAaE,oBAAC,MAAD;AAAQ,IAAA,KAAK,EAAE;AAAEA,MAAAA,SAAS,EAAE;AAAb,KAAf;AAAsC,IAAA,OAAO,MAA7C;AAA8C,IAAA,OAAO,EAAEf,UAAvD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gCAbF,CADI,GAkBF,IAnBN,CADF;AAuBD,CAvCM","sourcesContent":["import React, { useState } from \"react\";\nimport { confirmUser, client } from \"api/db-actions\";\nimport { Button, Form } from \"semantic-ui-react\";\nimport { useHistory } from \"react-router\";\nimport WithMessage from \"components/container/withMessage\";\nimport {\n  Stitch,\n  UserPasswordAuthProviderClient,\n} from \"mongodb-stitch-browser-sdk\";\n\nexport const Confirmation: React.FC = () => {\n  const [error, setError] = useState(false);\n  const [mail, setMail] = useState(\"\");\n  const history = useHistory();\n  const resendMail = async (email: string) => {\n    Stitch.defaultAppClient.auth\n      .getProviderClient(UserPasswordAuthProviderClient.factory)\n      .resendConfirmationEmail(email);\n  };\n  try {\n    confirmUser()\n      .then((res) => history.push(\"/login\"))\n      .catch(() => setError(true));\n  } catch (error) {\n    setError(true);\n  }\n  return (\n    <React.Fragment>\n      {error ? (\n        <div style={{ display: \"block\" }}>\n          <WithMessage\n            header=\"Please try to login with your email and password\"\n            message=\"If you cant login it means you had a trouble with confirmation of your email.\"\n          />\n          <Form.Input\n            icon=\"user\"\n            iconPosition=\"left\"\n            type=\"email\"\n            placeholder=\"Email\"\n            onChange={(e, data) => setMail(data.value)}\n            style={{ marginTop: \"25px\" }}\n          />\n          <Button style={{ marginTop: \"10px\" }} primary onClick={resendMail}>\n            Resend Confirmation Mail\n          </Button>\n        </div>\n      ) : null}\n    </React.Fragment>\n  );\n};\n"]},"metadata":{},"sourceType":"module"}