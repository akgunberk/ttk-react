{"ast":null,"code":"export function reducer(state, action) {\n  switch (action.type) {\n    case \"email\":\n      return { ...state,\n        email: action.payload\n      };\n\n    case \"password\":\n      return { ...state,\n        password: action.payload\n      };\n\n    case \"error\":\n      return { ...state,\n        error: action.payload,\n        active: false,\n        email: \"\",\n        password: \"\"\n      };\n\n    case \"login\":\n      return { ...state\n      };\n\n    case \"signup\":\n      return { ...state\n      };\n\n    case \"active\":\n      return { ...state,\n        active: true\n      };\n\n    case \"modal\":\n      return { ...state,\n        modal: action.payload,\n        active: false\n      };\n\n    default:\n      return state;\n  }\n}","map":{"version":3,"sources":["/Users/berkakgun/Desktop/ttk/ttkui/src/components/hooks/loginReducer.tsx"],"names":["reducer","state","action","type","email","payload","password","error","active","modal"],"mappings":"AAgBA,OAAO,SAASA,OAAT,CAAiBC,KAAjB,EAAkCC,MAAlC,EAA4D;AACjE,UAAQA,MAAM,CAACC,IAAf;AACE,SAAK,OAAL;AACE,aAAO,EACL,GAAGF,KADE;AAELG,QAAAA,KAAK,EAAEF,MAAM,CAACG;AAFT,OAAP;;AAIF,SAAK,UAAL;AACE,aAAO,EAAE,GAAGJ,KAAL;AAAYK,QAAAA,QAAQ,EAAEJ,MAAM,CAACG;AAA7B,OAAP;;AACF,SAAK,OAAL;AACE,aAAO,EACL,GAAGJ,KADE;AAELM,QAAAA,KAAK,EAAEL,MAAM,CAACG,OAFT;AAGLG,QAAAA,MAAM,EAAE,KAHH;AAILJ,QAAAA,KAAK,EAAE,EAJF;AAKLE,QAAAA,QAAQ,EAAE;AALL,OAAP;;AAOF,SAAK,OAAL;AACE,aAAO,EACL,GAAGL;AADE,OAAP;;AAGF,SAAK,QAAL;AACE,aAAO,EACL,GAAGA;AADE,OAAP;;AAGF,SAAK,QAAL;AACE,aAAO,EAAE,GAAGA,KAAL;AAAYO,QAAAA,MAAM,EAAE;AAApB,OAAP;;AACF,SAAK,OAAL;AACE,aAAO,EAAE,GAAGP,KAAL;AAAYQ,QAAAA,KAAK,EAAEP,MAAM,CAACG,OAA1B;AAAmCG,QAAAA,MAAM,EAAE;AAA3C,OAAP;;AACF;AACE,aAAOP,KAAP;AA7BJ;AA+BD","sourcesContent":["type AppState = {\n  email: string;\n  password: string;\n  active: boolean;\n  error: string;\n  modal: boolean;\n};\ntype Action =\n  | { type: \"login\"; payload: string }\n  | { type: \"signup\"; payload: number }\n  | { type: \"email\"; payload: string }\n  | { type: \"password\"; payload: string }\n  | { type: \"error\"; payload: string }\n  | { type: \"active\"; payload: boolean }\n  | { type: \"modal\"; payload: boolean };\n\nexport function reducer(state: AppState, action: Action): AppState {\n  switch (action.type) {\n    case \"email\":\n      return {\n        ...state,\n        email: action.payload,\n      };\n    case \"password\":\n      return { ...state, password: action.payload };\n    case \"error\":\n      return {\n        ...state,\n        error: action.payload,\n        active: false,\n        email: \"\",\n        password: \"\",\n      };\n    case \"login\":\n      return {\n        ...state,\n      };\n    case \"signup\":\n      return {\n        ...state,\n      };\n    case \"active\":\n      return { ...state, active: true };\n    case \"modal\":\n      return { ...state, modal: action.payload, active: false };\n    default:\n      return state;\n  }\n}\n"]},"metadata":{},"sourceType":"module"}