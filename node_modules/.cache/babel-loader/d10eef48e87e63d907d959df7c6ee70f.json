{"ast":null,"code":"var _jsxFileName = \"/Users/berkakgun/Desktop/ttk/ttkui/src/components/container/withClipboard.tsx\";\nimport React, { useState } from \"react\";\nimport { Popup, Button, Icon } from \"semantic-ui-react\";\nimport CopyToClipboard from \"react-copy-to-clipboard\";\n\nconst TriggerButton = ({\n  name\n}) => /*#__PURE__*/React.createElement(CopyToClipboard, {\n  text: name,\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 6,\n    columnNumber: 3\n  }\n}, /*#__PURE__*/React.createElement(Button, {\n  basic: true,\n  type: \"button\",\n  style: {\n    width: \"125px\"\n  },\n  animated: \"fade\",\n  size: \"medium\",\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 7,\n    columnNumber: 5\n  }\n}, /*#__PURE__*/React.createElement(Button.Content, {\n  visible: true,\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 14,\n    columnNumber: 7\n  }\n}, name), /*#__PURE__*/React.createElement(Button.Content, {\n  hidden: true,\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 15,\n    columnNumber: 7\n  }\n}, \"Copy \", /*#__PURE__*/React.createElement(Icon, {\n  style: {\n    marginLeft: \"4px\"\n  },\n  name: \"clipboard\",\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 16,\n    columnNumber: 14\n  }\n}))));\n\nconst ClipBoardButton = ({\n  name\n}) => {\n  const [info, setInfo] = useState(false);\n  return /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      margin: \"5px\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Popup, {\n    trigger: false,\n    content: `Copied to clipboard.`,\n    on: \"click\",\n    position: \"right center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 7\n    }\n  }));\n};\n\nexport default ClipBoardButton;","map":{"version":3,"sources":["/Users/berkakgun/Desktop/ttk/ttkui/src/components/container/withClipboard.tsx"],"names":["React","useState","Popup","Button","Icon","CopyToClipboard","TriggerButton","name","width","marginLeft","ClipBoardButton","info","setInfo","margin"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,SAASC,KAAT,EAAgBC,MAAhB,EAAwBC,IAAxB,QAAoC,mBAApC;AACA,OAAOC,eAAP,MAA4B,yBAA5B;;AAEA,MAAMC,aAAyC,GAAG,CAAC;AAAEC,EAAAA;AAAF,CAAD,kBAChD,oBAAC,eAAD;AAAiB,EAAA,IAAI,EAAEA,IAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBACE,oBAAC,MAAD;AACE,EAAA,KAAK,MADP;AAEE,EAAA,IAAI,EAAC,QAFP;AAGE,EAAA,KAAK,EAAE;AAAEC,IAAAA,KAAK,EAAE;AAAT,GAHT;AAIE,EAAA,QAAQ,EAAC,MAJX;AAKE,EAAA,IAAI,EAAC,QALP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAOE,oBAAC,MAAD,CAAQ,OAAR;AAAgB,EAAA,OAAO,MAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAyBD,IAAzB,CAPF,eAQE,oBAAC,MAAD,CAAQ,OAAR;AAAgB,EAAA,MAAM,MAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,yBACO,oBAAC,IAAD;AAAM,EAAA,KAAK,EAAE;AAAEE,IAAAA,UAAU,EAAE;AAAd,GAAb;AAAoC,EAAA,IAAI,EAAC,WAAzC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EADP,CARF,CADF,CADF;;AAiBA,MAAMC,eAA2C,GAAG,CAAC;AAAEH,EAAAA;AAAF,CAAD,KAAc;AAChE,QAAM,CAACI,IAAD,EAAOC,OAAP,IAAkBX,QAAQ,CAAC,KAAD,CAAhC;AACA,sBACE;AAAK,IAAA,KAAK,EAAE;AAAEY,MAAAA,MAAM,EAAE;AAAV,KAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,KAAD;AACE,IAAA,OAAO,EAAE,KADX;AAEE,IAAA,OAAO,EAAG,sBAFZ;AAGE,IAAA,EAAE,EAAC,OAHL;AAIE,IAAA,QAAQ,EAAC,cAJX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CADF;AAUD,CAZD;;AAcA,eAAeH,eAAf","sourcesContent":["import React, { useState } from \"react\";\nimport { Popup, Button, Icon } from \"semantic-ui-react\";\nimport CopyToClipboard from \"react-copy-to-clipboard\";\n\nconst TriggerButton: React.FC<{ name: string }> = ({ name }) => (\n  <CopyToClipboard text={name}>\n    <Button\n      basic\n      type=\"button\"\n      style={{ width: \"125px\" }}\n      animated=\"fade\"\n      size=\"medium\"\n    >\n      <Button.Content visible>{name}</Button.Content>\n      <Button.Content hidden>\n        Copy <Icon style={{ marginLeft: \"4px\" }} name=\"clipboard\" />\n      </Button.Content>\n    </Button>\n  </CopyToClipboard>\n);\n\nconst ClipBoardButton: React.FC<{ name: string }> = ({ name }) => {\n  const [info, setInfo] = useState(false);\n  return (\n    <div style={{ margin: \"5px\" }}>\n      <Popup\n        trigger={false}\n        content={`Copied to clipboard.`}\n        on=\"click\"\n        position=\"right center\"\n      />\n    </div>\n  );\n};\n\nexport default ClipBoardButton;\n"]},"metadata":{},"sourceType":"module"}