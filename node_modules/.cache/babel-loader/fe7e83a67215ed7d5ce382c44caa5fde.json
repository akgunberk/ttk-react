{"ast":null,"code":"import _slicedToArray from\"/Users/berkakgun/Desktop/ttk/ttkui/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import{useState}from\"react\";import store from\"core/store/index\";import{dispatchDefaultUser}from\"core/store/actions\";import{Application,collection}from\"core/initApp\";var payload={operation:\"CREATEUSER\",commands:[\"WITHPHONECONFIRMATION\",\"WITHPASSWORD\"]};export function CreateDefaultUser(environment){process.env[\"NODE_TLS_REJECT_UNAUTHORIZED\"]=\"0\";// to prevent SSL\nvar url=\"https://ttk.armut.\".concat(environment,\"/operate\");var _useState=useState(false),_useState2=_slicedToArray(_useState,2),isLoading=_useState2[0],setState=_useState2[1];var controller=new AbortController();var signal=controller.signal;var loadUser=function loadUser(){setState(true);setTimeout(function(){return controller.abort();},20000);fetch(url,{method:\"POST\",body:JSON.stringify(payload),signal:signal}).then(function(res){return res.json();}).then(function(user){var responseContext=user.responseContext,error=user.error;if(error)return;var _responseContext$=responseContext[0],accessToken=_responseContext$.accessToken,password=_responseContext$.password,model=_responseContext$.model;var user_id=model.user_id,email=model.email,first_name=model.first_name;if(!error){var _Application$currentU;var imageId=Math.floor(Math.random()*Math.floor(151));store.dispatch(dispatchDefaultUser({user_id:user_id,email:email,password:password,accessToken:accessToken,name:first_name,imageId:imageId}));collection.insertOne({user_id:(_Application$currentU=Application.currentUser)===null||_Application$currentU===void 0?void 0:_Application$currentU.id,id:user_id,environment:environment,email:email,password:password,accessToken:accessToken,name:first_name,imageId:imageId});}}).catch(function(error){console.log(error);}).finally(function(){setState(false);});};return[isLoading,loadUser];// infers [boolean, typeof load] instead of (boolean | typeof load)[]\n}","map":{"version":3,"sources":["/Users/berkakgun/Desktop/ttk/ttkui/src/services/createDefaultUser.tsx"],"names":["useState","store","dispatchDefaultUser","Application","collection","payload","operation","commands","CreateDefaultUser","environment","process","env","url","isLoading","setState","controller","AbortController","signal","loadUser","setTimeout","abort","fetch","method","body","JSON","stringify","then","res","json","user","responseContext","error","accessToken","password","model","user_id","email","first_name","imageId","Math","floor","random","dispatch","name","insertOne","currentUser","id","catch","console","log","finally"],"mappings":"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","sourcesContent":["import { useState } from \"react\";\nimport store from \"core/store/index\";\nimport { dispatchDefaultUser } from \"core/store/actions\";\nimport { Application, collection } from \"core/initApp\";\n\nconst payload = {\n  operation: \"CREATEUSER\",\n  commands: [\"WITHPHONECONFIRMATION\", \"WITHPASSWORD\"],\n};\n\nexport function CreateDefaultUser(environment: string) {\n  process.env[\"NODE_TLS_REJECT_UNAUTHORIZED\"] = \"0\"; // to prevent SSL\n  const url = `https://ttk.armut.${environment}/operate`;\n\n  const [isLoading, setState] = useState(false);\n\n  const controller = new AbortController();\n  const signal = controller.signal;\n\n  const loadUser = () => {\n    setState(true);\n    setTimeout(() => controller.abort(), 20000);\n    fetch(url, {\n      method: \"POST\",\n      body: JSON.stringify(payload),\n      signal,\n    })\n      .then((res) => res.json())\n      .then((user) => {\n        const { responseContext, error } = user;\n        if (error) return;\n        const { accessToken, password, model } = responseContext[0];\n        const { user_id, email, first_name } = model;\n        if (!error) {\n          let imageId = Math.floor(Math.random() * Math.floor(151));\n          store.dispatch(\n            dispatchDefaultUser({\n              user_id,\n              email,\n              password,\n              accessToken,\n              name: first_name,\n              imageId,\n            })\n          );\n          collection.insertOne({\n            user_id: Application.currentUser?.id,\n            id: user_id,\n            environment,\n            email,\n            password,\n            accessToken,\n            name: first_name,\n            imageId,\n          });\n        }\n      })\n      .catch((error) => {\n        console.log(error);\n      })\n      .finally(() => {\n        setState(false);\n      });\n  };\n  return [isLoading, loadUser] as const; // infers [boolean, typeof load] instead of (boolean | typeof load)[]\n}\n"]},"metadata":{},"sourceType":"module"}