{"ast":null,"code":"var _jsxFileName = \"/Users/berkakgun/Desktop/ttk/ttkui/src/components/forms/userForm.tsx\";\nimport React, { useState } from \"react\";\nimport { Grid, Form } from \"semantic-ui-react\";\nimport { countryOptions, businessModelOptions, jobOptionsBM2, jobOptionsBM1 } from \"assets/selectableOptions\";\nimport \"react-dates/initialize\";\nimport { SingleDatePicker } from \"react-dates\";\nimport \"react-dates/lib/css/_datepicker.css\";\nimport WithSelect from \"components/container/withSelect\";\nimport WithButtonGroup from \"components/container/withButtonGroup\";\nimport { useSelector } from \"react-redux\";\nimport { getUserElements } from \"store/selectors\";\n\nconst UserForm = () => {\n  const user = useSelector(getUserElements);\n  const [date, setDate] = useState(null);\n  const [focused, setFocused] = useState(false);\n  return /*#__PURE__*/React.createElement(React.Fragment, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Form, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    columns: 2,\n    divided: \"vertically\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Grid.Row, {\n    centered: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(WithSelect, {\n    name: \"Country\",\n    options: countryOptions,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 13\n    }\n  })), /*#__PURE__*/React.createElement(Grid.Row, {\n    centered: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(Grid.Column, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(WithSelect, {\n    name: \"Business Model\",\n    options: businessModelOptions,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 15\n    }\n  }), /*#__PURE__*/React.createElement(WithSelect, {\n    name: \"Job\",\n    options: user.bm === \"1\" ? jobOptionsBM1 : jobOptionsBM2,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 15\n    }\n  })), /*#__PURE__*/React.createElement(Grid.Column, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(WithButtonGroup, {\n    left: \"Quote\",\n    right: \"Deal\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 15\n    }\n  }))), /*#__PURE__*/React.createElement(Grid.Row, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(Grid.Column, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(SingleDatePicker, {\n    numberOfMonths: 1,\n    date: date // momentPropTypes.momentObj or null\n    ,\n    onDateChange: date => setDate(date) // PropTypes.func.isRequired\n    ,\n    focused: focused // PropTypes.bool\n    ,\n    onFocusChange: ({\n      focused\n    }) => setFocused(focused) // PropTypes.func.isRequired\n    ,\n    id: \"jobDate\" // PropTypes.string.isRequired,\n    ,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 15\n    }\n  }))))));\n};\n\nexport default UserForm;","map":{"version":3,"sources":["/Users/berkakgun/Desktop/ttk/ttkui/src/components/forms/userForm.tsx"],"names":["React","useState","Grid","Form","countryOptions","businessModelOptions","jobOptionsBM2","jobOptionsBM1","SingleDatePicker","WithSelect","WithButtonGroup","useSelector","getUserElements","UserForm","user","date","setDate","focused","setFocused","bm"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\nimport { Grid, Form } from \"semantic-ui-react\";\nimport {\n  countryOptions,\n  businessModelOptions,\n  jobOptionsBM2,\n  jobOptionsBM1,\n} from \"assets/selectableOptions\";\nimport \"react-dates/initialize\";\nimport { SingleDatePicker } from \"react-dates\";\nimport \"react-dates/lib/css/_datepicker.css\";\nimport WithSelect from \"components/container/withSelect\";\nimport WithButtonGroup from \"components/container/withButtonGroup\";\nimport { useSelector } from \"react-redux\";\nimport { getUserElements } from \"store/selectors\";\n\nconst UserForm: React.FC = () => {\n  const user = useSelector(getUserElements);\n  const [date, setDate] = useState<moment.Moment | null>(null);\n  const [focused, setFocused] = useState<boolean | null>(false);\n  return (\n    <React.Fragment>\n      <Form>\n        <Grid columns={2} divided=\"vertically\">\n          <Grid.Row centered>\n            <WithSelect name=\"Country\" options={countryOptions} />\n          </Grid.Row>\n          <Grid.Row centered>\n            <Grid.Column>\n              <WithSelect\n                name=\"Business Model\"\n                options={businessModelOptions}\n              />\n              <WithSelect\n                name=\"Job\"\n                options={user.bm === \"1\" ? jobOptionsBM1 : jobOptionsBM2}\n              />\n            </Grid.Column>\n            <Grid.Column>\n              <WithButtonGroup left=\"Quote\" right=\"Deal\" />\n            </Grid.Column>\n          </Grid.Row>\n          <Grid.Row>\n            <Grid.Column>\n              <SingleDatePicker\n                numberOfMonths={1}\n                date={date} // momentPropTypes.momentObj or null\n                onDateChange={(date) => setDate(date)} // PropTypes.func.isRequired\n                focused={focused} // PropTypes.bool\n                onFocusChange={({ focused }) => setFocused(focused)} // PropTypes.func.isRequired\n                id=\"jobDate\" // PropTypes.string.isRequired,\n              />\n            </Grid.Column>\n          </Grid.Row>\n        </Grid>\n      </Form>\n    </React.Fragment>\n  );\n};\n\nexport default UserForm;\n"]},"metadata":{},"sourceType":"module"}