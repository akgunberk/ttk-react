{"ast":null,"code":"var _jsxFileName = \"/Users/berkakgun/Desktop/ttk/ttkui/src/components/hoc/selectHOC.tsx\";\nimport React from \"react\";\nimport { Grid, Label, Select } from \"semantic-ui-react\";\n\nconst WithSelect = ({\n  name,\n  options\n}) => {\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 12,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Grid.Column, {\n    textAlign: \"center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Label, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 9\n    }\n  }, name.toUpperCase(), \" \"), /*#__PURE__*/React.createElement(Select, {\n    placeholder: `Select ${name}`,\n    options: (options.text, options.value),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 9\n    }\n  })));\n};\n\nexport default WithSelect;","map":{"version":3,"sources":["/Users/berkakgun/Desktop/ttk/ttkui/src/components/hoc/selectHOC.tsx"],"names":["React","Grid","Label","Select","WithSelect","name","options","toUpperCase","text","value"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,IAAT,EAAeC,KAAf,EAAsBC,MAAtB,QAAoC,mBAApC;;AAEA,MAAMC,UAAU,GAAG,CAAC;AAClBC,EAAAA,IADkB;AAElBC,EAAAA;AAFkB,CAAD,KAMb;AACJ,sBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,IAAD,CAAM,MAAN;AAAa,IAAA,SAAS,EAAC,QAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,KAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAQD,IAAI,CAACE,WAAL,EAAR,MADF,eAEE,oBAAC,MAAD;AACE,IAAA,WAAW,EAAG,UAASF,IAAK,EAD9B;AAEE,IAAA,OAAO,GAAGC,OAAO,CAACE,IAAR,EAAcF,OAAO,CAACG,KAAzB,CAFT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFF,CADF,CADF;AAWD,CAlBD;;AAoBA,eAAeL,UAAf","sourcesContent":["import React from \"react\";\nimport { Grid, Label, Select } from \"semantic-ui-react\";\n\nconst WithSelect = ({\n  name,\n  options,\n}: {\n  name: string;\n  options: { text: string; value: string };\n}) => {\n  return (\n    <div>\n      <Grid.Column textAlign=\"center\">\n        <Label>{name.toUpperCase()} </Label>\n        <Select\n          placeholder={`Select ${name}`}\n          options={(options.text, options.value)}\n        />\n      </Grid.Column>\n    </div>\n  );\n};\n\nexport default WithSelect;\n"]},"metadata":{},"sourceType":"module"}