{"ast":null,"code":"var _jsxFileName = \"/Users/berkakgun/Desktop/ttk/ttkui/src/components/display/ConfirmEmail.tsx\";\nimport React, { useState } from \"react\";\nimport { confirmUser } from \"api/db-actions\";\nimport { Button, Form } from \"semantic-ui-react\";\nimport { useHistory } from \"react-router\";\nimport WithMessage from \"components/container/withMessage\";\nexport const Confirmation = () => {\n  const [error, setError] = useState(false);\n  const history = useHistory();\n\n  try {\n    confirmUser().then(res => history.push(\"/login\")).catch(() => setError(true));\n  } catch (error) {\n    setError(true);\n  }\n\n  return /*#__PURE__*/React.createElement(React.Fragment, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 5\n    }\n  }, error ? /*#__PURE__*/React.createElement(React.Fragment, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(WithMessage, {\n    header: \"Please try to login with your email and password\",\n    message: \"If you cant login it means you had a trouble with confirmation of your email.\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(Form.Input, {\n    icon: \"user\",\n    iconPosition: \"left\",\n    type: \"email\",\n    label: \"Email\",\n    placeholder: \"Email\",\n    onChange: (e, data) => console.log(data),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(Button, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 11\n    }\n  }, \"Resend Confirmation Mail\")) : null);\n};","map":{"version":3,"sources":["/Users/berkakgun/Desktop/ttk/ttkui/src/components/display/ConfirmEmail.tsx"],"names":["React","useState","confirmUser","Button","Form","useHistory","WithMessage","Confirmation","error","setError","history","then","res","push","catch","e","data","console","log"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,SAASC,WAAT,QAA4B,gBAA5B;AACA,SAASC,MAAT,EAAuBC,IAAvB,QAAmC,mBAAnC;AACA,SAASC,UAAT,QAA2B,cAA3B;AACA,OAAOC,WAAP,MAAwB,kCAAxB;AAEA,OAAO,MAAMC,YAAsB,GAAG,MAAM;AAC1C,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBR,QAAQ,CAAC,KAAD,CAAlC;AACA,QAAMS,OAAO,GAAGL,UAAU,EAA1B;;AACA,MAAI;AACFH,IAAAA,WAAW,GACRS,IADH,CACSC,GAAD,IAASF,OAAO,CAACG,IAAR,CAAa,QAAb,CADjB,EAEGC,KAFH,CAES,MAAML,QAAQ,CAAC,IAAD,CAFvB;AAGD,GAJD,CAIE,OAAOD,KAAP,EAAc;AACdC,IAAAA,QAAQ,CAAC,IAAD,CAAR;AACD;;AACD,sBACE,oBAAC,KAAD,CAAO,QAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGD,KAAK,gBACJ,oBAAC,KAAD,CAAO,QAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,WAAD;AACE,IAAA,MAAM,EAAC,kDADT;AAEE,IAAA,OAAO,EAAC,+EAFV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,eAKE,oBAAC,IAAD,CAAM,KAAN;AACE,IAAA,IAAI,EAAC,MADP;AAEE,IAAA,YAAY,EAAC,MAFf;AAGE,IAAA,IAAI,EAAC,OAHP;AAIE,IAAA,KAAK,EAAC,OAJR;AAKE,IAAA,WAAW,EAAC,OALd;AAME,IAAA,QAAQ,EAAE,CAACO,CAAD,EAAIC,IAAJ,KAAaC,OAAO,CAACC,GAAR,CAAYF,IAAZ,CANzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IALF,eAaE,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gCAbF,CADI,GAgBF,IAjBN,CADF;AAqBD,CA/BM","sourcesContent":["import React, { useState } from \"react\";\nimport { confirmUser } from \"api/db-actions\";\nimport { Button, Grid, Form } from \"semantic-ui-react\";\nimport { useHistory } from \"react-router\";\nimport WithMessage from \"components/container/withMessage\";\n\nexport const Confirmation: React.FC = () => {\n  const [error, setError] = useState(false);\n  const history = useHistory();\n  try {\n    confirmUser()\n      .then((res) => history.push(\"/login\"))\n      .catch(() => setError(true));\n  } catch (error) {\n    setError(true);\n  }\n  return (\n    <React.Fragment>\n      {error ? (\n        <React.Fragment>\n          <WithMessage\n            header=\"Please try to login with your email and password\"\n            message=\"If you cant login it means you had a trouble with confirmation of your email.\"\n          />\n          <Form.Input\n            icon=\"user\"\n            iconPosition=\"left\"\n            type=\"email\"\n            label=\"Email\"\n            placeholder=\"Email\"\n            onChange={(e, data) => console.log(data)}\n          />\n          <Button>Resend Confirmation Mail</Button>\n        </React.Fragment>\n      ) : null}\n    </React.Fragment>\n  );\n};\n"]},"metadata":{},"sourceType":"module"}