{"ast":null,"code":"var _jsxFileName = \"/Users/berkakgun/Desktop/ttk/ttkui/src/components/AuthGuard.tsx\";\nimport React, { useState, useReducer } from \"react\";\nimport { UserContext } from \"core/store/ContextApi/Context\";\nimport { Application } from \"core/db\";\nimport { reducer, AppState } from \"./hooks/loginReducer\";\nexport function AuthGuard(props) {\n  var _Application$currentU;\n\n  const [authState, setAuthState] = useState({\n    isLoggedIn: ((_Application$currentU = Application.currentUser) === null || _Application$currentU === void 0 ? void 0 : _Application$currentU.state) === \"active\",\n    currentUser: Application.currentUser\n  });\n\n  const handleLogout = () => {\n    var _Application$currentU2;\n\n    (_Application$currentU2 = Application.currentUser) === null || _Application$currentU2 === void 0 ? void 0 : _Application$currentU2.logOut();\n    const [state, dispatch] = useReducer(reducer, AppState);\n    dispatch({\n      action: \"userId\",\n      payload: \"\"\n    });\n  };\n\n  const authInfo = React.useMemo(() => {\n    const {\n      isLoggedIn,\n      currentUser\n    } = authState;\n    const value = {\n      isLoggedIn,\n      currentUser,\n      actions: {\n        handleLogout,\n        setAuthState\n      }\n    };\n    return value;\n  }, [authState]);\n  return /*#__PURE__*/React.createElement(UserContext.Provider, {\n    value: authInfo,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 5\n    }\n  }, props.children);\n}","map":{"version":3,"sources":["/Users/berkakgun/Desktop/ttk/ttkui/src/components/AuthGuard.tsx"],"names":["React","useState","useReducer","UserContext","Application","reducer","AppState","AuthGuard","props","authState","setAuthState","isLoggedIn","currentUser","state","handleLogout","logOut","dispatch","action","payload","authInfo","useMemo","value","actions","children"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,UAA1B,QAA4C,OAA5C;AACA,SAASC,WAAT,QAA4B,+BAA5B;AACA,SAASC,WAAT,QAA4B,SAA5B;AACA,SAASC,OAAT,EAAkBC,QAAlB,QAAkC,sBAAlC;AAEA,OAAO,SAASC,SAAT,CAAmBC,KAAnB,EAA+B;AAAA;;AACpC,QAAM,CAACC,SAAD,EAAYC,YAAZ,IAA4BT,QAAQ,CAAC;AACzCU,IAAAA,UAAU,EAAE,0BAAAP,WAAW,CAACQ,WAAZ,gFAAyBC,KAAzB,MAAmC,QADN;AAEzCD,IAAAA,WAAW,EAAER,WAAW,CAACQ;AAFgB,GAAD,CAA1C;;AAKA,QAAME,YAAY,GAAG,MAAM;AAAA;;AACzB,8BAAAV,WAAW,CAACQ,WAAZ,kFAAyBG,MAAzB;AACA,UAAM,CAACF,KAAD,EAAQG,QAAR,IAAoBd,UAAU,CAACG,OAAD,EAAUC,QAAV,CAApC;AACAU,IAAAA,QAAQ,CAAC;AAAEC,MAAAA,MAAM,EAAE,QAAV;AAAoBC,MAAAA,OAAO,EAAE;AAA7B,KAAD,CAAR;AACD,GAJD;;AAMA,QAAMC,QAAQ,GAAGnB,KAAK,CAACoB,OAAN,CAAc,MAAM;AACnC,UAAM;AAAET,MAAAA,UAAF;AAAcC,MAAAA;AAAd,QAA8BH,SAApC;AACA,UAAMY,KAAK,GAAG;AACZV,MAAAA,UADY;AAEZC,MAAAA,WAFY;AAGZU,MAAAA,OAAO,EAAE;AAAER,QAAAA,YAAF;AAAgBJ,QAAAA;AAAhB;AAHG,KAAd;AAKA,WAAOW,KAAP;AACD,GARgB,EAQd,CAACZ,SAAD,CARc,CAAjB;AAUA,sBACE,oBAAC,WAAD,CAAa,QAAb;AAAsB,IAAA,KAAK,EAAEU,QAA7B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGX,KAAK,CAACe,QADT,CADF;AAKD","sourcesContent":["import React, { useState, useReducer } from \"react\";\nimport { UserContext } from \"core/store/ContextApi/Context\";\nimport { Application } from \"core/db\";\nimport { reducer, AppState } from \"./hooks/loginReducer\";\n\nexport function AuthGuard(props: any) {\n  const [authState, setAuthState] = useState({\n    isLoggedIn: Application.currentUser?.state === \"active\",\n    currentUser: Application.currentUser,\n  });\n\n  const handleLogout = () => {\n    Application.currentUser?.logOut();\n    const [state, dispatch] = useReducer(reducer, AppState);\n    dispatch({ action: \"userId\", payload: \"\" });\n  };\n\n  const authInfo = React.useMemo(() => {\n    const { isLoggedIn, currentUser } = authState;\n    const value = {\n      isLoggedIn,\n      currentUser,\n      actions: { handleLogout, setAuthState },\n    };\n    return value;\n  }, [authState]);\n\n  return (\n    <UserContext.Provider value={authInfo}>\n      {props.children}\n    </UserContext.Provider>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}