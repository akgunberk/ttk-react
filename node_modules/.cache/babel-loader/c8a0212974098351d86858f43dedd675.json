{"ast":null,"code":"import _regeneratorRuntime from\"/Users/berkakgun/Desktop/ttk/ttkui/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";import _asyncToGenerator from\"/Users/berkakgun/Desktop/ttk/ttkui/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";import*as Realm from\"realm-web\";import{mongodb}from\"./db/constants\";import{RedirectUri}from\"assets/constants\";export var Application=new Realm.App({id:\"ttk-ui-cvkwt\"});export var Mongo=Application.services.mongodb(mongodb.service);export var collection=Mongo.db(mongodb.database).collection(mongodb.collection);export function LoginWithGoogle(_x){return _LoginWithGoogle.apply(this,arguments);}function _LoginWithGoogle(){_LoginWithGoogle=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(dispatch){var credentials;return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:credentials=Realm.Credentials.google(RedirectUri);Application.logIn(credentials).then(function(user){dispatch({type:\"userId\",payload:user.id});console.log(\"signed in successfully with id:\"+user.id);});case 2:case\"end\":return _context.stop();}}},_callee);}));return _LoginWithGoogle.apply(this,arguments);}","map":{"version":3,"sources":["/Users/berkakgun/Desktop/ttk/ttkui/src/core/initApp.js"],"names":["Realm","mongodb","RedirectUri","Application","App","id","Mongo","services","service","collection","db","database","LoginWithGoogle","dispatch","credentials","Credentials","google","logIn","then","user","type","payload","console","log"],"mappings":"+SAAA,MAAO,GAAKA,CAAAA,KAAZ,KAAuB,WAAvB,CACA,OAASC,OAAT,KAAwB,gBAAxB,CACA,OAASC,WAAT,KAA4B,kBAA5B,CAEA,MAAO,IAAMC,CAAAA,WAAW,CAAG,GAAIH,CAAAA,KAAK,CAACI,GAAV,CAAc,CAAEC,EAAE,CAAE,cAAN,CAAd,CAApB,CAEP,MAAO,IAAMC,CAAAA,KAAK,CAAGH,WAAW,CAACI,QAAZ,CAAqBN,OAArB,CAA6BA,OAAO,CAACO,OAArC,CAAd,CAEP,MAAO,IAAMC,CAAAA,UAAU,CAAGH,KAAK,CAACI,EAAN,CAAST,OAAO,CAACU,QAAjB,EAA2BF,UAA3B,CACxBR,OAAO,CAACQ,UADgB,CAAnB,CAIP,eAAsBG,CAAAA,eAAtB,oD,qGAAO,iBAA+BC,QAA/B,kIACCC,WADD,CACed,KAAK,CAACe,WAAN,CAAkBC,MAAlB,CAAyBd,WAAzB,CADf,CAELC,WAAW,CAACc,KAAZ,CAAkBH,WAAlB,EAA+BI,IAA/B,CAAoC,SAACC,IAAD,CAAU,CAC5CN,QAAQ,CAAC,CAAEO,IAAI,CAAE,QAAR,CAAkBC,OAAO,CAAEF,IAAI,CAACd,EAAhC,CAAD,CAAR,CACAiB,OAAO,CAACC,GAAR,CAAY,kCAAoCJ,IAAI,CAACd,EAArD,EACD,CAHD,EAFK,sD","sourcesContent":["import * as Realm from \"realm-web\";\nimport { mongodb } from \"./db/constants\";\nimport { RedirectUri } from \"assets/constants\";\n\nexport const Application = new Realm.App({ id: \"ttk-ui-cvkwt\" });\n\nexport const Mongo = Application.services.mongodb(mongodb.service);\n\nexport const collection = Mongo.db(mongodb.database).collection(\n  mongodb.collection\n);\n\nexport async function LoginWithGoogle(dispatch) {\n  const credentials = Realm.Credentials.google(RedirectUri);\n  Application.logIn(credentials).then((user) => {\n    dispatch({ type: \"userId\", payload: user.id });\n    console.log(\"signed in successfully with id:\" + user.id);\n  });\n}\n"]},"metadata":{},"sourceType":"module"}