{"ast":null,"code":"import React from\"react\";import{Grid,Dropdown}from\"semantic-ui-react\";import{dispatchSelectable}from\"core/store/actions\";import{connect}from\"react-redux\";var WithSelect=function WithSelect(props){var selectType=props.name.replace(/\\s/g,\"\").toUpperCase();return/*#__PURE__*/React.createElement(React.Fragment,null,/*#__PURE__*/React.createElement(Grid.Column,{textAlign:\"center\",className:\"selectable\"},/*#__PURE__*/React.createElement(Dropdown,{selection:true,placeholder:\"\".concat(props.name),defaultValue:props.defaultValue?props.defaultValue:null,options:props.options,onChange:function onChange(e,data){return props.dispatchSelectable(selectType,data.value);}})));};export default connect(null,{dispatchSelectable:dispatchSelectable})(WithSelect);","map":{"version":3,"sources":["/Users/berkakgun/Desktop/ttk/ttkui/src/components/container/withSelect.tsx"],"names":["React","Grid","Dropdown","dispatchSelectable","connect","WithSelect","props","selectType","name","replace","toUpperCase","defaultValue","options","e","data","value"],"mappings":"AAAA,MAAOA,CAAAA,KAAP,KAAkB,OAAlB,CACA,OAASC,IAAT,CAAeC,QAAf,KAAkD,mBAAlD,CACA,OAASC,kBAAT,KAAmC,oBAAnC,CACA,OAASC,OAAT,KAAwB,aAAxB,CASA,GAAMC,CAAAA,UAAU,CAAG,QAAbA,CAAAA,UAAa,CAACC,KAAD,CAAsB,CACvC,GAAMC,CAAAA,UAAU,CAAGD,KAAK,CAACE,IAAN,CAAWC,OAAX,CAAmB,KAAnB,CAA0B,EAA1B,EAA8BC,WAA9B,EAAnB,CACA,mBACE,oBAAC,KAAD,CAAO,QAAP,mBACE,oBAAC,IAAD,CAAM,MAAN,EAAa,SAAS,CAAC,QAAvB,CAAgC,SAAS,CAAC,YAA1C,eACE,oBAAC,QAAD,EACE,SAAS,KADX,CAEE,WAAW,WAAKJ,KAAK,CAACE,IAAX,CAFb,CAGE,YAAY,CAAEF,KAAK,CAACK,YAAN,CAAqBL,KAAK,CAACK,YAA3B,CAA0C,IAH1D,CAIE,OAAO,CAAEL,KAAK,CAACM,OAJjB,CAKE,QAAQ,CAAE,kBAACC,CAAD,CAAIC,IAAJ,QACRR,CAAAA,KAAK,CAACH,kBAAN,CAAyBI,UAAzB,CAAqCO,IAAI,CAACC,KAA1C,CADQ,EALZ,EADF,CADF,CADF,CAeD,CAjBD,CAmBA,cAAeX,CAAAA,OAAO,CAAC,IAAD,CAAO,CAAED,kBAAkB,CAAlBA,kBAAF,CAAP,CAAP,CAAsCE,UAAtC,CAAf","sourcesContent":["import React from \"react\";\nimport { Grid, Dropdown, DropdownItemProps } from \"semantic-ui-react\";\nimport { dispatchSelectable } from \"core/store/actions\";\nimport { connect } from \"react-redux\";\n\ntype PropTypes = {\n  name: string;\n  options: Array<DropdownItemProps>;\n  dispatchSelectable: any;\n  defaultValue?: any;\n};\n\nconst WithSelect = (props: PropTypes) => {\n  const selectType = props.name.replace(/\\s/g, \"\").toUpperCase();\n  return (\n    <React.Fragment>\n      <Grid.Column textAlign=\"center\" className=\"selectable\">\n        <Dropdown\n          selection\n          placeholder={`${props.name}`}\n          defaultValue={props.defaultValue ? props.defaultValue : null}\n          options={props.options}\n          onChange={(e, data) =>\n            props.dispatchSelectable(selectType, data.value)\n          }\n        />\n      </Grid.Column>\n    </React.Fragment>\n  );\n};\n\nexport default connect(null, { dispatchSelectable })(WithSelect);\n"]},"metadata":{},"sourceType":"module"}