{"ast":null,"code":"import React,{useEffect,useContext}from\"react\";import{Grid,Button,Header,Icon}from\"semantic-ui-react\";import Statistics from\"components/container/statistics\";import{LoginWithGoogle}from\"core/initApp\";import{UserContext}from\"core/store/ContextApi/Context\";import{history}from\"App\";export var Login=function Login(){// eslint-disable-next-line\nvar User=useContext(UserContext);useEffect(function(){if(User.isLoggedIn){history.push(\"/\");}// eslint-disable-next-line\n},[User.isLoggedIn]);return/*#__PURE__*/React.createElement(React.Fragment,null,/*#__PURE__*/React.createElement(Grid,{columns:1,relaxed:\"very\",stackable:true},/*#__PURE__*/React.createElement(Grid.Column,null,/*#__PURE__*/React.createElement(Header,{as:\"h1\",icon:true},/*#__PURE__*/React.createElement(Icon,{name:\"briefcase\"}),\"Armut Test Tool Kit\",/*#__PURE__*/React.createElement(Header.Subheader,null,\"Manage your test users\"),/*#__PURE__*/React.createElement(Header.Content,null,/*#__PURE__*/React.createElement(Button,{style:{marginTop:\"20px\"},onClick:function onClick(){return LoginWithGoogle(User.actions.setAuthState);}},\"Login\"))))),/*#__PURE__*/React.createElement(Statistics,null));};export default Login;","map":{"version":3,"sources":["/Users/berkakgun/Desktop/ttk/ttkui/src/components/display/Auth/Login.tsx"],"names":["React","useEffect","useContext","Grid","Button","Header","Icon","Statistics","LoginWithGoogle","UserContext","history","Login","User","isLoggedIn","push","marginTop","actions","setAuthState"],"mappings":"AAAA,MAAOA,CAAAA,KAAP,EAAgBC,SAAhB,CAA2BC,UAA3B,KAA6C,OAA7C,CACA,OAASC,IAAT,CAAeC,MAAf,CAAuBC,MAAvB,CAA+BC,IAA/B,KAA2C,mBAA3C,CACA,MAAOC,CAAAA,UAAP,KAAuB,iCAAvB,CACA,OAASC,eAAT,KAAgC,cAAhC,CACA,OAASC,WAAT,KAA4B,+BAA5B,CACA,OAASC,OAAT,KAAwB,KAAxB,CAEA,MAAO,IAAMC,CAAAA,KAAoB,CAAG,QAAvBA,CAAAA,KAAuB,EAAM,CACxC;AACA,GAAIC,CAAAA,IAAI,CAAGV,UAAU,CAACO,WAAD,CAArB,CAEAR,SAAS,CAAC,UAAM,CACd,GAAIW,IAAI,CAACC,UAAT,CAAqB,CACnBH,OAAO,CAACI,IAAR,CAAa,GAAb,EACD,CACD;AACD,CALQ,CAKN,CAACF,IAAI,CAACC,UAAN,CALM,CAAT,CAOA,mBACE,oBAAC,KAAD,CAAO,QAAP,mBACE,oBAAC,IAAD,EAAM,OAAO,CAAE,CAAf,CAAkB,OAAO,CAAC,MAA1B,CAAiC,SAAS,KAA1C,eACE,oBAAC,IAAD,CAAM,MAAN,mBACE,oBAAC,MAAD,EAAQ,EAAE,CAAC,IAAX,CAAgB,IAAI,KAApB,eACE,oBAAC,IAAD,EAAM,IAAI,CAAC,WAAX,EADF,oCAGE,oBAAC,MAAD,CAAQ,SAAR,+BAHF,cAIE,oBAAC,MAAD,CAAQ,OAAR,mBACE,oBAAC,MAAD,EACE,KAAK,CAAE,CAAEE,SAAS,CAAE,MAAb,CADT,CAEE,OAAO,CAAE,yBAAMP,CAAAA,eAAe,CAACI,IAAI,CAACI,OAAL,CAAaC,YAAd,CAArB,EAFX,UADF,CAJF,CADF,CADF,CADF,cAmBE,oBAAC,UAAD,MAnBF,CADF,CAuBD,CAlCM,CAoCP,cAAeN,CAAAA,KAAf","sourcesContent":["import React, { useEffect, useContext } from \"react\";\nimport { Grid, Button, Header, Icon } from \"semantic-ui-react\";\nimport Statistics from \"components/container/statistics\";\nimport { LoginWithGoogle } from \"core/initApp\";\nimport { UserContext } from \"core/store/ContextApi/Context\";\nimport { history } from \"App\";\n\nexport const Login: React.FC<any> = () => {\n  // eslint-disable-next-line\n  let User = useContext(UserContext);\n\n  useEffect(() => {\n    if (User.isLoggedIn) {\n      history.push(\"/\");\n    }\n    // eslint-disable-next-line\n  }, [User.isLoggedIn]);\n\n  return (\n    <React.Fragment>\n      <Grid columns={1} relaxed=\"very\" stackable>\n        <Grid.Column>\n          <Header as=\"h1\" icon>\n            <Icon name=\"briefcase\" />\n            Armut Test Tool Kit\n            <Header.Subheader>Manage your test users</Header.Subheader>\n            <Header.Content>\n              <Button\n                style={{ marginTop: \"20px\" }}\n                onClick={() => LoginWithGoogle(User.actions.setAuthState)}\n              >\n                Login\n              </Button>\n            </Header.Content>\n          </Header>\n        </Grid.Column>\n      </Grid>\n\n      <Statistics />\n    </React.Fragment>\n  );\n};\n\nexport default Login;\n"]},"metadata":{},"sourceType":"module"}