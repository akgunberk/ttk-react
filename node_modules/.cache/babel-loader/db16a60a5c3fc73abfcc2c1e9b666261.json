{"ast":null,"code":"var _jsxFileName = \"/Users/berkakgun/Desktop/ttk/ttkui/src/components/display/Login.tsx\";\nimport React, { useReducer } from \"react\";\nimport { Segment, Grid, Button, Dimmer, Loader } from \"semantic-ui-react\";\nimport WithMessage from \"../container/withMessage\";\nimport Statistics from \"components/container/statistics\";\nimport { reducer } from \"components/hooks/loginReducer\";\nimport WithModal from \"components/container/withModal\";\nimport { LogIn } from \"core/db\";\nexport const Login = () => {\n  const initialState = {\n    email: \"\",\n    password: \"\",\n    active: false,\n    error: \"\",\n    modal: false\n  };\n  const [state, dispatch] = useReducer(reducer, initialState);\n  return /*#__PURE__*/React.createElement(React.Fragment, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(WithModal, {\n    open: {\n      status: state.modal,\n      setStatus: dispatch\n    },\n    header: \"Email Confirmation\",\n    content: \" Please Confirm Your Email and Come Back\",\n    icon: \"mail\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"logo\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"img\", {\n    alt: \"armut-logo\",\n    title: \"armut-logo\",\n    src: \"https://cdn.armut.com/images/tr:h-70/armut-header-logo-colour@2x.png\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 9\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      position: \"absolute\",\n      top: \"20%\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(WithMessage, {\n    message: !state.error ? \"Log in or Sign up so that we can save your precious users\" : state.error,\n    header: !state.error ? \"Welcome to Armut Test Tool Kit\" : \"Upps! Error...\",\n    error: state.error ? true : false,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 9\n    }\n  })), /*#__PURE__*/React.createElement(Dimmer, {\n    active: state.active,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Loader, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 9\n    }\n  })), /*#__PURE__*/React.createElement(Segment, {\n    placeholder: true,\n    style: {\n      margin: \"0\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    columns: 1,\n    relaxed: \"very\",\n    stackable: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Grid.Column, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    type: \"submit\",\n    content: \"Login\",\n    icon: \"sign in\",\n    primary: true,\n    style: {\n      marginTop: \"10px\"\n    },\n    onClick: () => LogIn(),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 13\n    }\n  })))), /*#__PURE__*/React.createElement(Statistics, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 7\n    }\n  }));\n};\nexport default Login;","map":{"version":3,"sources":["/Users/berkakgun/Desktop/ttk/ttkui/src/components/display/Login.tsx"],"names":["React","useReducer","Segment","Grid","Button","Dimmer","Loader","WithMessage","Statistics","reducer","WithModal","LogIn","Login","initialState","email","password","active","error","modal","state","dispatch","status","setStatus","position","top","margin","marginTop"],"mappings":"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","sourcesContent":["import React, { useReducer } from \"react\";\nimport { Segment, Grid, Form, Button, Dimmer, Loader } from \"semantic-ui-react\";\nimport WithMessage from \"../container/withMessage\";\nimport Statistics from \"components/container/statistics\";\nimport { reducer } from \"components/hooks/loginReducer\";\nimport WithModal from \"components/container/withModal\";\nimport { LogIn } from \"core/db\";\n\nexport const Login: React.FC = () => {\n  const initialState = {\n    email: \"\",\n    password: \"\",\n    active: false,\n    error: \"\",\n    modal: false,\n  };\n  const [state, dispatch] = useReducer(reducer, initialState);\n\n  return (\n    <React.Fragment>\n      <WithModal\n        open={{ status: state.modal, setStatus: dispatch }}\n        header=\"Email Confirmation\"\n        content=\" Please Confirm Your Email and Come Back\"\n        icon=\"mail\"\n      />\n      <div className=\"logo\">\n        <img\n          alt=\"armut-logo\"\n          title=\"armut-logo\"\n          src=\"https://cdn.armut.com/images/tr:h-70/armut-header-logo-colour@2x.png\"\n        />\n      </div>\n      <div style={{ position: \"absolute\", top: \"20%\" }}>\n        <WithMessage\n          message={\n            !state.error\n              ? \"Log in or Sign up so that we can save your precious users\"\n              : state.error\n          }\n          header={\n            !state.error ? \"Welcome to Armut Test Tool Kit\" : \"Upps! Error...\"\n          }\n          error={state.error ? true : false}\n        />\n      </div>\n\n      <Dimmer active={state.active}>\n        <Loader />\n      </Dimmer>\n      <Segment placeholder style={{ margin: \"0\" }}>\n        <Grid columns={1} relaxed=\"very\" stackable>\n          <Grid.Column>\n            <Button\n              type=\"submit\"\n              content=\"Login\"\n              icon=\"sign in\"\n              primary\n              style={{ marginTop: \"10px\" }}\n              onClick={() => LogIn()}\n            />\n          </Grid.Column>\n        </Grid>\n      </Segment>\n\n      <Statistics />\n    </React.Fragment>\n  );\n};\n\nexport default Login;\n"]},"metadata":{},"sourceType":"module"}