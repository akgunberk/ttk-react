{"ast":null,"code":"var _jsxFileName = \"/Users/berkakgun/Desktop/ttk/ttkui/src/components/container/withClipboard.tsx\";\nimport React from \"react\";\nimport { Popup, Button, Icon } from \"semantic-ui-react\";\nimport CopyToClipboard from \"react-copy-to-clipboard\";\n\nfunction copyToClipboard(str) {\n  const el = document.createElement(\"textarea\");\n  el.value = str;\n  document.body.appendChild(el);\n  el.select();\n  document.execCommand(\"copy\");\n  document.body.removeChild(el);\n}\n\nconst handleClick = event => {\n  if (event.currentTarget.firstElementChild) {\n    copyToClipboard(event.currentTarget.firstElementChild.innerHTML);\n  }\n};\n\nconst triggerButton = name => /*#__PURE__*/React.createElement(CopyToClipboard, {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 22,\n    columnNumber: 3\n  }\n}, /*#__PURE__*/React.createElement(Button, {\n  basic: true,\n  type: \"button\",\n  style: {\n    width: \"125px\"\n  },\n  animated: \"fade\",\n  size: \"medium\",\n  onClick: e => handleClick(e),\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 23,\n    columnNumber: 5\n  }\n}, /*#__PURE__*/React.createElement(Button.Content, {\n  visible: true,\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 31,\n    columnNumber: 7\n  }\n}, name), /*#__PURE__*/React.createElement(Button.Content, {\n  hidden: true,\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 32,\n    columnNumber: 7\n  }\n}, \"Copy \", /*#__PURE__*/React.createElement(Icon, {\n  style: {\n    marginLeft: \"4px\"\n  },\n  name: \"clipboard\",\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 33,\n    columnNumber: 14\n  }\n}))));\n\nconst ClipBoardButton = ({\n  name\n}) => {\n  return /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      margin: \"5px\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Popup, {\n    trigger: triggerButton(name),\n    content: `Copied to clipboard.`,\n    on: \"click\",\n    position: \"right center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }\n  }));\n};\n\nexport default ClipBoardButton;","map":{"version":3,"sources":["/Users/berkakgun/Desktop/ttk/ttkui/src/components/container/withClipboard.tsx"],"names":["React","Popup","Button","Icon","CopyToClipboard","copyToClipboard","str","el","document","createElement","value","body","appendChild","select","execCommand","removeChild","handleClick","event","currentTarget","firstElementChild","innerHTML","triggerButton","name","width","e","marginLeft","ClipBoardButton","margin"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,KAAT,EAAgBC,MAAhB,EAAwBC,IAAxB,QAAoC,mBAApC;AACA,OAAOC,eAAP,MAA4B,yBAA5B;;AAEA,SAASC,eAAT,CAAyBC,GAAzB,EAAsC;AACpC,QAAMC,EAAE,GAAGC,QAAQ,CAACC,aAAT,CAAuB,UAAvB,CAAX;AACAF,EAAAA,EAAE,CAACG,KAAH,GAAWJ,GAAX;AACAE,EAAAA,QAAQ,CAACG,IAAT,CAAcC,WAAd,CAA0BL,EAA1B;AACAA,EAAAA,EAAE,CAACM,MAAH;AACAL,EAAAA,QAAQ,CAACM,WAAT,CAAqB,MAArB;AACAN,EAAAA,QAAQ,CAACG,IAAT,CAAcI,WAAd,CAA0BR,EAA1B;AACD;;AACD,MAAMS,WAAW,GACfC,KADkB,IAEf;AACH,MAAIA,KAAK,CAACC,aAAN,CAAoBC,iBAAxB,EAA2C;AACzCd,IAAAA,eAAe,CAACY,KAAK,CAACC,aAAN,CAAoBC,iBAApB,CAAsCC,SAAvC,CAAf;AACD;AACF,CAND;;AAQA,MAAMC,aAAa,GAAIC,IAAD,iBACpB,oBAAC,eAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBACE,oBAAC,MAAD;AACE,EAAA,KAAK,MADP;AAEE,EAAA,IAAI,EAAC,QAFP;AAGE,EAAA,KAAK,EAAE;AAAEC,IAAAA,KAAK,EAAE;AAAT,GAHT;AAIE,EAAA,QAAQ,EAAC,MAJX;AAKE,EAAA,IAAI,EAAC,QALP;AAME,EAAA,OAAO,EAAGC,CAAD,IAAOR,WAAW,CAACQ,CAAD,CAN7B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAQE,oBAAC,MAAD,CAAQ,OAAR;AAAgB,EAAA,OAAO,MAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAyBF,IAAzB,CARF,eASE,oBAAC,MAAD,CAAQ,OAAR;AAAgB,EAAA,MAAM,MAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,yBACO,oBAAC,IAAD;AAAM,EAAA,KAAK,EAAE;AAAEG,IAAAA,UAAU,EAAE;AAAd,GAAb;AAAoC,EAAA,IAAI,EAAC,WAAzC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EADP,CATF,CADF,CADF;;AAkBA,MAAMC,eAA2C,GAAG,CAAC;AAAEJ,EAAAA;AAAF,CAAD,KAAc;AAChE,sBACE;AAAK,IAAA,KAAK,EAAE;AAAEK,MAAAA,MAAM,EAAE;AAAV,KAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,KAAD;AACE,IAAA,OAAO,EAAEN,aAAa,CAACC,IAAD,CADxB;AAEE,IAAA,OAAO,EAAG,sBAFZ;AAGE,IAAA,EAAE,EAAC,OAHL;AAIE,IAAA,QAAQ,EAAC,cAJX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CADF;AAUD,CAXD;;AAaA,eAAeI,eAAf","sourcesContent":["import React from \"react\";\nimport { Popup, Button, Icon } from \"semantic-ui-react\";\nimport CopyToClipboard from \"react-copy-to-clipboard\";\n\nfunction copyToClipboard(str: string) {\n  const el = document.createElement(\"textarea\");\n  el.value = str;\n  document.body.appendChild(el);\n  el.select();\n  document.execCommand(\"copy\");\n  document.body.removeChild(el);\n}\nconst handleClick = (\n  event: React.MouseEvent<HTMLButtonElement, MouseEvent>\n) => {\n  if (event.currentTarget.firstElementChild) {\n    copyToClipboard(event.currentTarget.firstElementChild.innerHTML);\n  }\n};\n\nconst triggerButton = (name: string) => (\n  <CopyToClipboard>\n    <Button\n      basic\n      type=\"button\"\n      style={{ width: \"125px\" }}\n      animated=\"fade\"\n      size=\"medium\"\n      onClick={(e) => handleClick(e)}\n    >\n      <Button.Content visible>{name}</Button.Content>\n      <Button.Content hidden>\n        Copy <Icon style={{ marginLeft: \"4px\" }} name=\"clipboard\" />\n      </Button.Content>\n    </Button>\n  </CopyToClipboard>\n);\n\nconst ClipBoardButton: React.FC<{ name: string }> = ({ name }) => {\n  return (\n    <div style={{ margin: \"5px\" }}>\n      <Popup\n        trigger={triggerButton(name)}\n        content={`Copied to clipboard.`}\n        on=\"click\"\n        position=\"right center\"\n      />\n    </div>\n  );\n};\n\nexport default ClipBoardButton;\n"]},"metadata":{},"sourceType":"module"}