{"ast":null,"code":"import _slicedToArray from\"/Users/berkakgun/Desktop/ttk/ttkui/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import React,{useState,useEffect}from\"react\";import\"App.scss\";import{Router,Switch,Route,Link,Redirect}from\"react-router-dom\";import{Login}from\"components/display/Login\";import{Confirmation}from\"components/display/ConfirmEmail\";import Saved from\"components/display/SavedUsers\";import{Sidebar,Segment,Menu,Icon}from\"semantic-ui-react\";import Landing from\"components/display/Landing\";import{ErrorContext}from\"core/store/ContextApi/Context\";import{createBrowserHistory}from\"history\";import{ErrorHandler}from\"modules/errorHandler\";import{AuthGuard,useStitchAuth}from\"components/AuthGuard\";import{handleAuthRedirect}from\"realm-web\";export var history=createBrowserHistory();function App(){var _useState=useState(false),_useState2=_slicedToArray(_useState,2),visible=_useState2[0],setVisibility=_useState2[1];var _useState3=useState(false),_useState4=_slicedToArray(_useState3,2),error=_useState4[0],setError=_useState4[1];var _useStitchAuth=useStitchAuth(),isLoggedIn=_useStitchAuth.isLoggedIn,currentUser=_useStitchAuth.currentUser,handleLogout=_useStitchAuth.actions.handleLogout;useEffect(function(){if(window.location.href.indexOf(\"baas_ua\")!==-1){handleAuthRedirect();console.log(currentUser);}});return/*#__PURE__*/React.createElement(Router,{history:history},/*#__PURE__*/React.createElement(ErrorContext.Provider,{value:{error:error,setError:setError}},/*#__PURE__*/React.createElement(ErrorHandler,null),/*#__PURE__*/React.createElement(AuthGuard,null,/*#__PURE__*/React.createElement(Sidebar.Pushable,{as:Segment},/*#__PURE__*/React.createElement(Sidebar,{onMouseLeave:function onMouseLeave(){return setVisibility(false);},as:Menu,animation:\"overlay\",icon:\"labeled\",inverted:true,onHide:function onHide(){return setVisibility(false);},vertical:true,visible:visible,width:\"thin\"},/*#__PURE__*/React.createElement(Link,{to:\"/\"},/*#__PURE__*/React.createElement(Menu.Item,{as:\"div\"},/*#__PURE__*/React.createElement(Icon,{name:\"home\"}),\"Home\")),/*#__PURE__*/React.createElement(Link,{to:\"/test-user\"},/*#__PURE__*/React.createElement(Menu.Item,{as:\"div\"},/*#__PURE__*/React.createElement(Icon,{name:\"folder\"}),\"Test - Saved\")),/*#__PURE__*/React.createElement(Link,{to:\"/stage-user\"},/*#__PURE__*/React.createElement(Menu.Item,{as:\"div\"},/*#__PURE__*/React.createElement(Icon,{name:\"folder outline\"}),\"Stage - Saved\")),/*#__PURE__*/React.createElement(Link,{to:\"/login\"},/*#__PURE__*/React.createElement(Menu.Item,{as:\"div\",onClick:function onClick(){if(isLoggedIn)handleLogout();}},/*#__PURE__*/React.createElement(Icon,{name:!isLoggedIn?\"sign-in\":\"sign-out\"}),!isLoggedIn?\"Log In\":\"Log Out\"))),/*#__PURE__*/React.createElement(Sidebar.Pusher,{dimmed:visible},/*#__PURE__*/React.createElement(\"div\",{className:\"App\"},/*#__PURE__*/React.createElement(Switch,null,/*#__PURE__*/React.createElement(Route,{path:\"/login\"},/*#__PURE__*/React.createElement(Login,null)),/*#__PURE__*/React.createElement(Route,{path:\"/confirm\"},/*#__PURE__*/React.createElement(Confirmation,null)),!isLoggedIn&&/*#__PURE__*/React.createElement(Redirect,{push:true,to:\"/login\"}),/*#__PURE__*/React.createElement(Route,{path:\"/test-user\"},/*#__PURE__*/React.createElement(Saved,{env:\"Test\"})),/*#__PURE__*/React.createElement(Route,{path:\"/stage-user\"},/*#__PURE__*/React.createElement(Saved,{env:\"Stage\"})),/*#__PURE__*/React.createElement(Route,{path:\"/\"},/*#__PURE__*/React.createElement(Landing,null)))))),/*#__PURE__*/React.createElement(\"div\",{style:{position:\"absolute\",left:\"0\",top:\"0\",width:\"3%\",height:\"100%\"},onMouseEnter:function onMouseEnter(){return setVisibility(true);}}))));}export default App;","map":{"version":3,"sources":["/Users/berkakgun/Desktop/ttk/ttkui/src/App.tsx"],"names":["React","useState","useEffect","Router","Switch","Route","Link","Redirect","Login","Confirmation","Saved","Sidebar","Segment","Menu","Icon","Landing","ErrorContext","createBrowserHistory","ErrorHandler","AuthGuard","useStitchAuth","handleAuthRedirect","history","App","visible","setVisibility","error","setError","isLoggedIn","currentUser","handleLogout","actions","window","location","href","indexOf","console","log","position","left","top","width","height"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport \"App.scss\";\nimport { Router, Switch, Route, Link, Redirect } from \"react-router-dom\";\nimport { Login } from \"components/display/Login\";\nimport { Confirmation } from \"components/display/ConfirmEmail\";\nimport Saved from \"components/display/SavedUsers\";\nimport { Sidebar, Segment, Menu, Icon } from \"semantic-ui-react\";\nimport Landing from \"components/display/Landing\";\nimport { ErrorContext } from \"core/store/ContextApi/Context\";\nimport { createBrowserHistory } from \"history\";\nimport { ErrorHandler } from \"modules/errorHandler\";\nimport { AuthGuard, useStitchAuth } from \"components/AuthGuard\";\nimport { handleAuthRedirect } from \"realm-web\";\n\nexport const history = createBrowserHistory();\n\nfunction App() {\n  const [visible, setVisibility] = useState(false);\n  const [error, setError] = useState(false);\n  let {\n    isLoggedIn,\n    currentUser,\n    actions: { handleLogout },\n  } = useStitchAuth();\n\n  useEffect(() => {\n    if (window.location.href.indexOf(\"baas_ua\") !== -1) {\n      handleAuthRedirect();\n      console.log(currentUser);\n    }\n  });\n  return (\n    <Router history={history}>\n      <ErrorContext.Provider value={{ error, setError }}>\n        <ErrorHandler></ErrorHandler>\n        <AuthGuard>\n          <Sidebar.Pushable as={Segment}>\n            <Sidebar\n              onMouseLeave={() => setVisibility(false)}\n              as={Menu}\n              animation=\"overlay\"\n              icon=\"labeled\"\n              inverted\n              onHide={() => setVisibility(false)}\n              vertical\n              visible={visible}\n              width=\"thin\"\n            >\n              <Link to=\"/\">\n                <Menu.Item as=\"div\">\n                  <Icon name=\"home\" />\n                  Home\n                </Menu.Item>\n              </Link>\n              <Link to=\"/test-user\">\n                <Menu.Item as=\"div\">\n                  <Icon name=\"folder\" />\n                  Test - Saved\n                </Menu.Item>\n              </Link>\n              <Link to=\"/stage-user\">\n                <Menu.Item as=\"div\">\n                  <Icon name=\"folder outline\" />\n                  Stage - Saved\n                </Menu.Item>\n              </Link>\n              <Link to=\"/login\">\n                <Menu.Item\n                  as=\"div\"\n                  onClick={() => {\n                    if (isLoggedIn) handleLogout();\n                  }}\n                >\n                  <Icon name={!isLoggedIn ? \"sign-in\" : \"sign-out\"} />\n                  {!isLoggedIn ? \"Log In\" : \"Log Out\"}\n                </Menu.Item>\n              </Link>\n            </Sidebar>\n            <Sidebar.Pusher dimmed={visible}>\n              <div className=\"App\">\n                <Switch>\n                  <Route path=\"/login\">\n                    <Login />\n                  </Route>\n\n                  <Route path=\"/confirm\">\n                    <Confirmation />\n                  </Route>\n                  {!isLoggedIn && <Redirect push to=\"/login\" />}\n                  <Route path=\"/test-user\">\n                    <Saved env=\"Test\" />\n                  </Route>\n                  <Route path=\"/stage-user\">\n                    <Saved env=\"Stage\" />\n                  </Route>\n                  <Route path=\"/\">\n                    <Landing />\n                  </Route>\n                </Switch>\n              </div>\n            </Sidebar.Pusher>\n          </Sidebar.Pushable>\n          <div\n            style={{\n              position: \"absolute\",\n              left: \"0\",\n              top: \"0\",\n              width: \"3%\",\n              height: \"100%\",\n            }}\n            onMouseEnter={() => setVisibility(true)}\n          />\n        </AuthGuard>\n      </ErrorContext.Provider>\n    </Router>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}