{"ast":null,"code":"import _slicedToArray from\"/Users/berkakgun/Desktop/ttk/ttkui/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import React,{useState}from\"react\";import{Button,Icon,Popup}from\"semantic-ui-react\";var ClipBoardButton=function ClipBoardButton(_ref){var name=_ref.name,copy=_ref.copy;var _useState=useState(false),_useState2=_slicedToArray(_useState,2),pop=_useState2[0],setPop=_useState2[1];var handleOpen=function handleOpen(){setPop(true);setTimeout(function(){setPop(false);},3000);};var copyToClipboard=function copyToClipboard(){var el=document.createElement(\"textarea\");el.value=copy;document.body.appendChild(el);el.select();document.execCommand(\"copy\");document.body.removeChild(el);};return/*#__PURE__*/React.createElement(\"div\",{style:{margin:\"5px\"}},/*#__PURE__*/React.createElement(Popup,{on:\"click\",open:pop,onOpen:handleOpen,content:\"Copied To Clipboard\",position:\"top center\",trigger:/*#__PURE__*/React.createElement(Button,{basic:true,type:\"button\",style:{width:\"125px\"},animated:\"fade\",size:\"medium\",onClick:function onClick(){return copyToClipboard();}},/*#__PURE__*/React.createElement(Button.Content,{visible:true},name),/*#__PURE__*/React.createElement(Button.Content,{hidden:true},\"Copy\",/*#__PURE__*/React.createElement(Icon,{style:{marginLeft:\"4px\"},name:\"clipboard\"})))}));};export default ClipBoardButton;","map":{"version":3,"sources":["/Users/berkakgun/Desktop/ttk/ttkui/src/components/container/withClipboard.tsx"],"names":["React","useState","Button","Icon","Popup","ClipBoardButton","name","copy","pop","setPop","handleOpen","setTimeout","copyToClipboard","el","document","createElement","value","body","appendChild","select","execCommand","removeChild","margin","width","marginLeft"],"mappings":"yJAAA,MAAOA,CAAAA,KAAP,EAAgBC,QAAhB,KAAgC,OAAhC,CACA,OAASC,MAAT,CAAiBC,IAAjB,CAAuBC,KAAvB,KAAoC,mBAApC,CAEA,GAAMC,CAAAA,eAAyD,CAAG,QAA5DA,CAAAA,eAA4D,MAG5D,IAFJC,CAAAA,IAEI,MAFJA,IAEI,CADJC,IACI,MADJA,IACI,eACkBN,QAAQ,CAAC,KAAD,CAD1B,wCACGO,GADH,eACQC,MADR,eAEJ,GAAMC,CAAAA,UAAU,CAAG,QAAbA,CAAAA,UAAa,EAAM,CACvBD,MAAM,CAAC,IAAD,CAAN,CACAE,UAAU,CAAC,UAAM,CACfF,MAAM,CAAC,KAAD,CAAN,CACD,CAFS,CAEP,IAFO,CAAV,CAGD,CALD,CAMA,GAAMG,CAAAA,eAAe,CAAG,QAAlBA,CAAAA,eAAkB,EAAM,CAC5B,GAAMC,CAAAA,EAAE,CAAGC,QAAQ,CAACC,aAAT,CAAuB,UAAvB,CAAX,CACAF,EAAE,CAACG,KAAH,CAAWT,IAAX,CACAO,QAAQ,CAACG,IAAT,CAAcC,WAAd,CAA0BL,EAA1B,EACAA,EAAE,CAACM,MAAH,GACAL,QAAQ,CAACM,WAAT,CAAqB,MAArB,EACAN,QAAQ,CAACG,IAAT,CAAcI,WAAd,CAA0BR,EAA1B,EACD,CAPD,CASA,mBACE,2BAAK,KAAK,CAAE,CAAES,MAAM,CAAE,KAAV,CAAZ,eACE,oBAAC,KAAD,EACE,EAAE,CAAC,OADL,CAEE,IAAI,CAAEd,GAFR,CAGE,MAAM,CAAEE,UAHV,CAIE,OAAO,CAAC,qBAJV,CAKE,QAAQ,CAAC,YALX,CAME,OAAO,cACL,oBAAC,MAAD,EACE,KAAK,KADP,CAEE,IAAI,CAAC,QAFP,CAGE,KAAK,CAAE,CAAEa,KAAK,CAAE,OAAT,CAHT,CAIE,QAAQ,CAAC,MAJX,CAKE,IAAI,CAAC,QALP,CAME,OAAO,CAAE,yBAAMX,CAAAA,eAAe,EAArB,EANX,eAQE,oBAAC,MAAD,CAAQ,OAAR,EAAgB,OAAO,KAAvB,EAAyBN,IAAzB,CARF,cASE,oBAAC,MAAD,CAAQ,OAAR,EAAgB,MAAM,KAAtB,sBAEE,oBAAC,IAAD,EAAM,KAAK,CAAE,CAAEkB,UAAU,CAAE,KAAd,CAAb,CAAoC,IAAI,CAAC,WAAzC,EAFF,CATF,CAPJ,EADF,CADF,CA2BD,CA/CD,CAiDA,cAAenB,CAAAA,eAAf","sourcesContent":["import React, { useState } from \"react\";\nimport { Button, Icon, Popup } from \"semantic-ui-react\";\n\nconst ClipBoardButton: React.FC<{ name: string; copy: string }> = ({\n  name,\n  copy,\n}) => {\n  const [pop, setPop] = useState(false);\n  const handleOpen = () => {\n    setPop(true);\n    setTimeout(() => {\n      setPop(false);\n    }, 3000);\n  };\n  const copyToClipboard = () => {\n    const el = document.createElement(\"textarea\");\n    el.value = copy;\n    document.body.appendChild(el);\n    el.select();\n    document.execCommand(\"copy\");\n    document.body.removeChild(el);\n  };\n\n  return (\n    <div style={{ margin: \"5px\" }}>\n      <Popup\n        on=\"click\"\n        open={pop}\n        onOpen={handleOpen}\n        content=\"Copied To Clipboard\"\n        position=\"top center\"\n        trigger={\n          <Button\n            basic\n            type=\"button\"\n            style={{ width: \"125px\" }}\n            animated=\"fade\"\n            size=\"medium\"\n            onClick={() => copyToClipboard()}\n          >\n            <Button.Content visible>{name}</Button.Content>\n            <Button.Content hidden>\n              Copy\n              <Icon style={{ marginLeft: \"4px\" }} name=\"clipboard\" />\n            </Button.Content>\n          </Button>\n        }\n      />\n    </div>\n  );\n};\n\nexport default ClipBoardButton;\n"]},"metadata":{},"sourceType":"module"}