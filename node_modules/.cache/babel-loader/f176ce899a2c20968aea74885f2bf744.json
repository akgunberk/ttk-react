{"ast":null,"code":"var _jsxFileName = \"/Users/berkakgun/Desktop/ttk/ttkui/src/components/container/withClipboard.tsx\";\nimport React, { useRef } from \"react\";\nimport { Popup, Button, Icon } from \"semantic-ui-react\";\nimport CopyToClipboard from \"react-copy-to-clipboard\";\n\nconst TriggerButton = ({\n  name,\n  copy\n}) => {\n  const ref = useRef(null);\n  return /*#__PURE__*/React.createElement(CopyToClipboard, {\n    text: copy,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 11,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    ref: ref,\n    basic: true,\n    type: \"button\",\n    style: {\n      width: \"125px\"\n    },\n    animated: \"fade\",\n    size: \"medium\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 12,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Button.Content, {\n    visible: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 9\n    }\n  }, name), /*#__PURE__*/React.createElement(Button.Content, {\n    hidden: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 9\n    }\n  }, \"Copy \", /*#__PURE__*/React.createElement(Icon, {\n    style: {\n      marginLeft: \"4px\"\n    },\n    name: \"clipboard\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 16\n    }\n  }))));\n};\n\nconst ClipBoardButton = ({\n  name,\n  copy\n}) => {\n  let ref = useRef(null);\n  return /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      margin: \"5px\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Popup, {\n    triggerRef: ref,\n    content: `Copied to clipboard.`,\n    pinned: true,\n    position: \"right center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(TriggerButton, {\n    name: name,\n    copy: copy,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }\n  }));\n};\n\nexport default ClipBoardButton;","map":{"version":3,"sources":["/Users/berkakgun/Desktop/ttk/ttkui/src/components/container/withClipboard.tsx"],"names":["React","useRef","Popup","Button","Icon","CopyToClipboard","TriggerButton","name","copy","ref","width","marginLeft","ClipBoardButton","margin"],"mappings":";AAAA,OAAOA,KAAP,IAA0BC,MAA1B,QAA0D,OAA1D;AACA,SAASC,KAAT,EAAgBC,MAAhB,EAAwBC,IAAxB,QAAoC,mBAApC;AACA,OAAOC,eAAP,MAA4B,yBAA5B;;AAEA,MAAMC,aAGJ,GAAG,CAAC;AAAEC,EAAAA,IAAF;AAAQC,EAAAA;AAAR,CAAD,KAAoB;AACvB,QAAMC,GAAG,GAAGR,MAAM,CAAC,IAAD,CAAlB;AACA,sBACE,oBAAC,eAAD;AAAiB,IAAA,IAAI,EAAEO,IAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,MAAD;AACE,IAAA,GAAG,EAAEC,GADP;AAEE,IAAA,KAAK,MAFP;AAGE,IAAA,IAAI,EAAC,QAHP;AAIE,IAAA,KAAK,EAAE;AAAEC,MAAAA,KAAK,EAAE;AAAT,KAJT;AAKE,IAAA,QAAQ,EAAC,MALX;AAME,IAAA,IAAI,EAAC,QANP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAQE,oBAAC,MAAD,CAAQ,OAAR;AAAgB,IAAA,OAAO,MAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAyBH,IAAzB,CARF,eASE,oBAAC,MAAD,CAAQ,OAAR;AAAgB,IAAA,MAAM,MAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,2BACO,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAE;AAAEI,MAAAA,UAAU,EAAE;AAAd,KAAb;AAAoC,IAAA,IAAI,EAAC,WAAzC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADP,CATF,CADF,CADF;AAiBD,CAtBD;;AAwBA,MAAMC,eAAyD,GAAG,CAAC;AACjEL,EAAAA,IADiE;AAEjEC,EAAAA;AAFiE,CAAD,KAG5D;AACJ,MAAIC,GAAG,GAAGR,MAAM,CAAC,IAAD,CAAhB;AACA,sBACE;AAAK,IAAA,KAAK,EAAE;AAAEY,MAAAA,MAAM,EAAE;AAAV,KAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,KAAD;AACE,IAAA,UAAU,EAAEJ,GADd;AAEE,IAAA,OAAO,EAAG,sBAFZ;AAGE,IAAA,MAAM,MAHR;AAIE,IAAA,QAAQ,EAAC,cAJX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,eAOE,oBAAC,aAAD;AAAe,IAAA,IAAI,EAAEF,IAArB;AAA2B,IAAA,IAAI,EAAEC,IAAjC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAPF,CADF;AAWD,CAhBD;;AAkBA,eAAeI,eAAf","sourcesContent":["import React, { useState, useRef, MutableRefObject } from \"react\";\nimport { Popup, Button, Icon } from \"semantic-ui-react\";\nimport CopyToClipboard from \"react-copy-to-clipboard\";\n\nconst TriggerButton: React.FC<{\n  name: string;\n  copy: string;\n}> = ({ name, copy }) => {\n  const ref = useRef(null);\n  return (\n    <CopyToClipboard text={copy}>\n      <Button\n        ref={ref}\n        basic\n        type=\"button\"\n        style={{ width: \"125px\" }}\n        animated=\"fade\"\n        size=\"medium\"\n      >\n        <Button.Content visible>{name}</Button.Content>\n        <Button.Content hidden>\n          Copy <Icon style={{ marginLeft: \"4px\" }} name=\"clipboard\" />\n        </Button.Content>\n      </Button>\n    </CopyToClipboard>\n  );\n};\n\nconst ClipBoardButton: React.FC<{ name: string; copy: string }> = ({\n  name,\n  copy,\n}) => {\n  let ref = useRef(null);\n  return (\n    <div style={{ margin: \"5px\" }}>\n      <Popup\n        triggerRef={ref}\n        content={`Copied to clipboard.`}\n        pinned\n        position=\"right center\"\n      />\n      <TriggerButton name={name} copy={copy} />\n    </div>\n  );\n};\n\nexport default ClipBoardButton;\n"]},"metadata":{},"sourceType":"module"}