{"ast":null,"code":"import _toConsumableArray from \"/Users/berkakgun/Desktop/ttk/ttkui/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";\nimport _defineProperty from \"/Users/berkakgun/Desktop/ttk/ttkui/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport _possibleConstructorReturn from \"/Users/berkakgun/Desktop/ttk/ttkui/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _inherits from \"/Users/berkakgun/Desktop/ttk/ttkui/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _createSuper from \"/Users/berkakgun/Desktop/ttk/ttkui/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createSuper\";\nimport _wrapNativeSuper from \"/Users/berkakgun/Desktop/ttk/ttkui/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/wrapNativeSuper\";\nimport _objectWithoutProperties from \"/Users/berkakgun/Desktop/ttk/ttkui/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport _objectSpread from \"/Users/berkakgun/Desktop/ttk/ttkui/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";\nimport _regeneratorRuntime from \"/Users/berkakgun/Desktop/ttk/ttkui/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"/Users/berkakgun/Desktop/ttk/ttkui/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _classCallCheck from \"/Users/berkakgun/Desktop/ttk/ttkui/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/berkakgun/Desktop/ttk/ttkui/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _slicedToArray from \"/Users/berkakgun/Desktop/ttk/ttkui/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nimport _createForOfIteratorHelper from \"/Users/berkakgun/Desktop/ttk/ttkui/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createForOfIteratorHelper\";\n\nvar _DATA_MAPPING;\n\nimport { EJSON } from 'bson'; ////////////////////////////////////////////////////////////////////////////\n\n/**\n * Serialize an object containing BSON types into extended-JSON.\n *\n * @param obj The object containing BSON types.\n * @returns The document in extended-JSON format.\n */\n\nfunction serialize(obj) {\n  return EJSON.serialize(obj);\n}\n/**\n * De-serialize an object or an array of object from extended-JSON into an object or an array of object with BSON types.\n *\n * @param obj The object or array of objects in extended-JSON format.\n * @returns The object or array of objects with inflated BSON types.\n */\n\n\nfunction deserialize(obj) {\n  if (Array.isArray(obj)) {\n    return obj.map(function (doc) {\n      return EJSON.deserialize(doc);\n    });\n  } else {\n    return EJSON.deserialize(obj);\n  }\n} ////////////////////////////////////////////////////////////////////////////\n\n/**\n * A list of names that functions cannot have to be callable through the functions proxy.\n */\n\n\nvar RESERVED_NAMES = [\"inspect\", \"callFunction\"];\n/**\n * Remove the key for any fields with undefined values.\n *\n * @param args The arguments to clean.\n * @returns The cleaned arguments.\n */\n\nfunction cleanArgs(args) {\n  var _iterator = _createForOfIteratorHelper(args),\n      _step;\n\n  try {\n    for (_iterator.s(); !(_step = _iterator.n()).done;) {\n      var arg = _step.value;\n\n      if (typeof arg === \"object\") {\n        for (var _i = 0, _Object$entries = Object.entries(arg); _i < _Object$entries.length; _i++) {\n          var _Object$entries$_i = _slicedToArray(_Object$entries[_i], 2),\n              key = _Object$entries$_i[0],\n              value = _Object$entries$_i[1];\n\n          if (value === undefined) {\n            delete arg[key];\n          }\n        }\n      }\n    }\n  } catch (err) {\n    _iterator.e(err);\n  } finally {\n    _iterator.f();\n  }\n\n  return args;\n}\n/**\n * Remove keys for any undefined values and serialize to EJSON.\n *\n * @param args The arguments to clean and serialize.\n * @returns The cleaned and serialized arguments.\n */\n\n\nfunction cleanArgsAndSerialize(args) {\n  var cleaned = cleanArgs(args);\n  return cleaned.map(function (arg) {\n    return typeof arg === \"object\" ? serialize(arg) : arg;\n  });\n}\n/**\n * Defines how functions are called.\n */\n\n\nvar FunctionsFactory = /*#__PURE__*/function () {\n  /**\n   * Construct a functions factory.\n   *\n   * @param transport The underlying transport to use when sending requests.\n   * @param config Additional configuration parameters.\n   */\n  function FunctionsFactory(transport) {\n    var config = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n\n    _classCallCheck(this, FunctionsFactory);\n\n    this.transport = transport;\n    this.serviceName = config.serviceName;\n    this.argsTransformation = config.argsTransformation || cleanArgsAndSerialize;\n    this.responseTransformation = config.responseTransformation || deserialize;\n  }\n  /**\n   * Create a factory of functions, wrapped in a Proxy that returns bound copies of `callFunction` on any property.\n   *\n   * @param transport The underlying transport to use when requesting.\n   * @param config Additional configuration parameters.\n   * @returns The newly created factory of functions.\n   */\n\n\n  _createClass(FunctionsFactory, [{\n    key: \"callFunction\",\n\n    /**\n     * Call a remote function by it's name.\n     *\n     * @param name Name of the remote function.\n     * @param args Arguments to pass to the remote function.\n     * @returns A promise of the value returned when executing the remote function.\n     */\n    value: function () {\n      var _callFunction = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(name) {\n        var _len,\n            args,\n            _key,\n            body,\n            response,\n            _args = arguments;\n\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                for (_len = _args.length, args = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {\n                  args[_key - 1] = _args[_key];\n                }\n\n                // See https://github.com/mongodb/stitch-js-sdk/blob/master/packages/core/sdk/src/services/internal/CoreStitchServiceClientImpl.ts\n                body = {\n                  name: name,\n                  arguments: this.argsTransformation ? this.argsTransformation(args) : args\n                };\n\n                if (this.serviceName) {\n                  body.service = this.serviceName;\n                }\n\n                _context.next = 5;\n                return this.transport.fetch({\n                  method: \"POST\",\n                  path: \"/functions/call\",\n                  body: body\n                });\n\n              case 5:\n                response = _context.sent;\n\n                if (!this.responseTransformation) {\n                  _context.next = 10;\n                  break;\n                }\n\n                return _context.abrupt(\"return\", this.responseTransformation(response));\n\n              case 10:\n                return _context.abrupt(\"return\", response);\n\n              case 11:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, this);\n      }));\n\n      function callFunction(_x) {\n        return _callFunction.apply(this, arguments);\n      }\n\n      return callFunction;\n    }()\n  }], [{\n    key: \"create\",\n    value: function create(transport) {\n      var config = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n      // Create a proxy, wrapping a simple object returning methods that calls functions\n      // TODO: Lazily fetch available functions and return these from the ownKeys() trap\n      var factory = new FunctionsFactory(transport, config); // Wrap the factory in a proxy that calls the internal call method\n\n      return new Proxy(factory, {\n        get: function get(target, p, receiver) {\n          if (typeof p === \"string\" && RESERVED_NAMES.indexOf(p) === -1) {\n            return target.callFunction.bind(target, p);\n          } else {\n            var prop = Reflect.get(target, p, receiver);\n            return typeof prop === \"function\" ? prop.bind(target) : prop;\n          }\n        }\n      });\n    }\n  }]);\n\n  return FunctionsFactory;\n}();\n\nvar commonjsGlobal = typeof globalThis !== 'undefined' ? globalThis : typeof window !== 'undefined' ? window : typeof global !== 'undefined' ? global : typeof self !== 'undefined' ? self : {};\n\nfunction createCommonjsModule(fn, basedir, module) {\n  return module = {\n    path: basedir,\n    exports: {},\n    require: function require(path, base) {\n      return commonjsRequire(path, base === undefined || base === null ? module.path : base);\n    }\n  }, fn(module, module.exports), module.exports;\n}\n\nfunction commonjsRequire() {\n  throw new Error('Dynamic requires are not currently supported by @rollup/plugin-commonjs');\n}\n\nvar base64 = createCommonjsModule(function (module, exports) {\n  (function (global, factory) {\n    module.exports = factory(global);\n  })(typeof self !== 'undefined' ? self : typeof window !== 'undefined' ? window : typeof commonjsGlobal !== 'undefined' ? commonjsGlobal : commonjsGlobal, function (global) {\n    // existing version for noConflict()\n    global = global || {};\n    var _Base64 = global.Base64;\n    var version = \"2.6.3\"; // constants\n\n    var b64chars = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/';\n\n    var b64tab = function (bin) {\n      var t = {};\n\n      for (var i = 0, l = bin.length; i < l; i++) {\n        t[bin.charAt(i)] = i;\n      }\n\n      return t;\n    }(b64chars);\n\n    var fromCharCode = String.fromCharCode; // encoder stuff\n\n    var cb_utob = function cb_utob(c) {\n      if (c.length < 2) {\n        var cc = c.charCodeAt(0);\n        return cc < 0x80 ? c : cc < 0x800 ? fromCharCode(0xc0 | cc >>> 6) + fromCharCode(0x80 | cc & 0x3f) : fromCharCode(0xe0 | cc >>> 12 & 0x0f) + fromCharCode(0x80 | cc >>> 6 & 0x3f) + fromCharCode(0x80 | cc & 0x3f);\n      } else {\n        var cc = 0x10000 + (c.charCodeAt(0) - 0xD800) * 0x400 + (c.charCodeAt(1) - 0xDC00);\n        return fromCharCode(0xf0 | cc >>> 18 & 0x07) + fromCharCode(0x80 | cc >>> 12 & 0x3f) + fromCharCode(0x80 | cc >>> 6 & 0x3f) + fromCharCode(0x80 | cc & 0x3f);\n      }\n    };\n\n    var re_utob = /[\\uD800-\\uDBFF][\\uDC00-\\uDFFFF]|[^\\x00-\\x7F]/g;\n\n    var utob = function utob(u) {\n      return u.replace(re_utob, cb_utob);\n    };\n\n    var cb_encode = function cb_encode(ccc) {\n      var padlen = [0, 2, 1][ccc.length % 3],\n          ord = ccc.charCodeAt(0) << 16 | (ccc.length > 1 ? ccc.charCodeAt(1) : 0) << 8 | (ccc.length > 2 ? ccc.charCodeAt(2) : 0),\n          chars = [b64chars.charAt(ord >>> 18), b64chars.charAt(ord >>> 12 & 63), padlen >= 2 ? '=' : b64chars.charAt(ord >>> 6 & 63), padlen >= 1 ? '=' : b64chars.charAt(ord & 63)];\n      return chars.join('');\n    };\n\n    var btoa = global.btoa && typeof global.btoa == 'function' ? function (b) {\n      return global.btoa(b);\n    } : function (b) {\n      if (b.match(/[^\\x00-\\xFF]/)) throw new RangeError('The string contains invalid characters.');\n      return b.replace(/[\\s\\S]{1,3}/g, cb_encode);\n    };\n\n    var _encode = function _encode(u) {\n      return btoa(utob(String(u)));\n    };\n\n    var mkUriSafe = function mkUriSafe(b64) {\n      return b64.replace(/[+\\/]/g, function (m0) {\n        return m0 == '+' ? '-' : '_';\n      }).replace(/=/g, '');\n    };\n\n    var encode = function encode(u, urisafe) {\n      return urisafe ? mkUriSafe(_encode(u)) : _encode(u);\n    };\n\n    var encodeURI = function encodeURI(u) {\n      return encode(u, true);\n    };\n\n    var fromUint8Array;\n    if (global.Uint8Array) fromUint8Array = function fromUint8Array(a, urisafe) {\n      // return btoa(fromCharCode.apply(null, a));\n      var b64 = '';\n\n      for (var i = 0, l = a.length; i < l; i += 3) {\n        var a0 = a[i],\n            a1 = a[i + 1],\n            a2 = a[i + 2];\n        var ord = a0 << 16 | a1 << 8 | a2;\n        b64 += b64chars.charAt(ord >>> 18) + b64chars.charAt(ord >>> 12 & 63) + (typeof a1 != 'undefined' ? b64chars.charAt(ord >>> 6 & 63) : '=') + (typeof a2 != 'undefined' ? b64chars.charAt(ord & 63) : '=');\n      }\n\n      return urisafe ? mkUriSafe(b64) : b64;\n    }; // decoder stuff\n\n    var re_btou = /[\\xC0-\\xDF][\\x80-\\xBF]|[\\xE0-\\xEF][\\x80-\\xBF]{2}|[\\xF0-\\xF7][\\x80-\\xBF]{3}/g;\n\n    var cb_btou = function cb_btou(cccc) {\n      switch (cccc.length) {\n        case 4:\n          var cp = (0x07 & cccc.charCodeAt(0)) << 18 | (0x3f & cccc.charCodeAt(1)) << 12 | (0x3f & cccc.charCodeAt(2)) << 6 | 0x3f & cccc.charCodeAt(3),\n              offset = cp - 0x10000;\n          return fromCharCode((offset >>> 10) + 0xD800) + fromCharCode((offset & 0x3FF) + 0xDC00);\n\n        case 3:\n          return fromCharCode((0x0f & cccc.charCodeAt(0)) << 12 | (0x3f & cccc.charCodeAt(1)) << 6 | 0x3f & cccc.charCodeAt(2));\n\n        default:\n          return fromCharCode((0x1f & cccc.charCodeAt(0)) << 6 | 0x3f & cccc.charCodeAt(1));\n      }\n    };\n\n    var btou = function btou(b) {\n      return b.replace(re_btou, cb_btou);\n    };\n\n    var cb_decode = function cb_decode(cccc) {\n      var len = cccc.length,\n          padlen = len % 4,\n          n = (len > 0 ? b64tab[cccc.charAt(0)] << 18 : 0) | (len > 1 ? b64tab[cccc.charAt(1)] << 12 : 0) | (len > 2 ? b64tab[cccc.charAt(2)] << 6 : 0) | (len > 3 ? b64tab[cccc.charAt(3)] : 0),\n          chars = [fromCharCode(n >>> 16), fromCharCode(n >>> 8 & 0xff), fromCharCode(n & 0xff)];\n      chars.length -= [0, 0, 2, 1][padlen];\n      return chars.join('');\n    };\n\n    var _atob = global.atob && typeof global.atob == 'function' ? function (a) {\n      return global.atob(a);\n    } : function (a) {\n      return a.replace(/\\S{1,4}/g, cb_decode);\n    };\n\n    var atob = function atob(a) {\n      return _atob(String(a).replace(/[^A-Za-z0-9\\+\\/]/g, ''));\n    };\n\n    var _decode = function _decode(a) {\n      return btou(_atob(a));\n    };\n\n    var _fromURI = function _fromURI(a) {\n      return String(a).replace(/[-_]/g, function (m0) {\n        return m0 == '-' ? '+' : '/';\n      }).replace(/[^A-Za-z0-9\\+\\/]/g, '');\n    };\n\n    var decode = function decode(a) {\n      return _decode(_fromURI(a));\n    };\n\n    var toUint8Array;\n    if (global.Uint8Array) toUint8Array = function toUint8Array(a) {\n      return Uint8Array.from(atob(_fromURI(a)), function (c) {\n        return c.charCodeAt(0);\n      });\n    };\n\n    var noConflict = function noConflict() {\n      var Base64 = global.Base64;\n      global.Base64 = _Base64;\n      return Base64;\n    }; // export Base64\n\n\n    global.Base64 = {\n      VERSION: version,\n      atob: atob,\n      btoa: btoa,\n      fromBase64: decode,\n      toBase64: encode,\n      utob: utob,\n      encode: encode,\n      encodeURI: encodeURI,\n      btou: btou,\n      decode: decode,\n      noConflict: noConflict,\n      fromUint8Array: fromUint8Array,\n      toUint8Array: toUint8Array\n    }; // if ES5 is available, make Base64.extendString() available\n\n    if (typeof Object.defineProperty === 'function') {\n      var noEnum = function noEnum(v) {\n        return {\n          value: v,\n          enumerable: false,\n          writable: true,\n          configurable: true\n        };\n      };\n\n      global.Base64.extendString = function () {\n        Object.defineProperty(String.prototype, 'fromBase64', noEnum(function () {\n          return decode(this);\n        }));\n        Object.defineProperty(String.prototype, 'toBase64', noEnum(function (urisafe) {\n          return encode(this, urisafe);\n        }));\n        Object.defineProperty(String.prototype, 'toBase64URI', noEnum(function () {\n          return encode(this, true);\n        }));\n      };\n    } //\n    // export Base64 to the namespace\n    //\n\n\n    if (global['Meteor']) {\n      // Meteor.js\n      Base64 = global.Base64;\n    } // module.exports and AMD are mutually exclusive.\n    // module.exports has precedence.\n\n\n    if (module.exports) {\n      module.exports.Base64 = global.Base64;\n    } // that's it!\n\n\n    return {\n      Base64: global.Base64\n    };\n  });\n}); ////////////////////////////////////////////////////////////////////////////\n//\n// Copyright 2020 Realm Inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n// http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n//\n////////////////////////////////////////////////////////////////////////////\n\n/**\n * Prefixes all request with a path prefix.\n */\n\nvar PrefixedTransport = /*#__PURE__*/function () {\n  /**\n   * Constructs a transport that prefix the path of all requests performed.\n   *\n   * @param transport The underlying transport used to issue requests.\n   * @param pathPrefix The path being prefixed onto requests.\n   */\n  function PrefixedTransport(transport, pathPrefix) {\n    _classCallCheck(this, PrefixedTransport);\n\n    this.transport = transport;\n    this.pathPrefix = pathPrefix;\n  }\n  /** @inheritdoc */\n\n\n  _createClass(PrefixedTransport, [{\n    key: \"fetch\",\n    value: function fetch(request) {\n      var prefixedRequest = _objectSpread(_objectSpread({}, request), {}, {\n        path: \"\".concat(this.pathPrefix).concat(request.path || \"\")\n      });\n\n      return this.transport.fetch(prefixedRequest);\n    }\n    /** @inheritdoc */\n\n  }, {\n    key: \"prefix\",\n    value: function prefix(pathPrefix) {\n      return new PrefixedTransport(this, pathPrefix);\n    }\n  }]);\n\n  return PrefixedTransport;\n}(); ////////////////////////////////////////////////////////////////////////////\n\n/**\n * A transport prefixing request paths with the path of the App id and ensuring the correct location is hit.\n */\n\n\nvar AppTransport = /*#__PURE__*/function () {\n  /**\n   * Construct a transport that will prefix the app id to paths and determine location base URL.\n   *\n   * @param transport The base transport used to issue requests.\n   * @param appId The id of the app.\n   */\n  function AppTransport(transport, appId) {\n    _classCallCheck(this, AppTransport);\n\n    this.transport = transport;\n    this.appId = appId;\n  }\n  /** @inheritdoc */\n\n\n  _createClass(AppTransport, [{\n    key: \"fetch\",\n    value: function () {\n      var _fetch = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee2(request) {\n        var path, restOfRequest;\n        return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n          while (1) {\n            switch (_context2.prev = _context2.next) {\n              case 0:\n                path = request.path, restOfRequest = _objectWithoutProperties(request, [\"path\"]);\n                return _context2.abrupt(\"return\", this.transport.fetch(_objectSpread(_objectSpread({}, restOfRequest), {}, {\n                  path: \"/app/\".concat(this.appId).concat(path)\n                })));\n\n              case 2:\n              case \"end\":\n                return _context2.stop();\n            }\n          }\n        }, _callee2, this);\n      }));\n\n      function fetch(_x2) {\n        return _fetch.apply(this, arguments);\n      }\n\n      return fetch;\n    }()\n    /** @inheritdoc */\n\n  }, {\n    key: \"prefix\",\n    value: function prefix(pathPrefix) {\n      return new PrefixedTransport(this, pathPrefix);\n    }\n  }]);\n\n  return AppTransport;\n}(); ////////////////////////////////////////////////////////////////////////////\n//\n// Copyright 2020 Realm Inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n// http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n//\n////////////////////////////////////////////////////////////////////////////\n\n/**\n * TODO: Determine if the shape of an error response is specific to each service or widely used\n */\n\n\nvar MongoDBRealmError = /*#__PURE__*/function (_Error) {\n  _inherits(MongoDBRealmError, _Error);\n\n  var _super = _createSuper(MongoDBRealmError);\n\n  function MongoDBRealmError(method, url, statusCode, statusText, response) {\n    var _this;\n\n    _classCallCheck(this, MongoDBRealmError);\n\n    if (typeof response === \"object\" && typeof response.error === \"string\") {\n      var statusSummary = statusText ? \"status \".concat(statusCode, \" \").concat(statusText) : \"status \".concat(statusCode);\n      _this = _super.call(this, \"Request failed (\".concat(method, \" \").concat(url, \"): \").concat(response.error, \" (\").concat(statusSummary, \")\"));\n      _this.method = method;\n      _this.url = url;\n      _this.statusText = statusText;\n      _this.statusCode = statusCode;\n      _this.errorCode = response.error_code;\n      _this.link = response.link;\n    } else {\n      throw new Error(\"Unexpected error response format\");\n    }\n\n    return _possibleConstructorReturn(_this);\n  }\n\n  return MongoDBRealmError;\n}( /*#__PURE__*/_wrapNativeSuper(Error)); ////////////////////////////////////////////////////////////////////////////\n\n\nvar DefaultNetworkTransport = /*#__PURE__*/function () {\n  function DefaultNetworkTransport() {\n    _classCallCheck(this, DefaultNetworkTransport);\n\n    if (!DefaultNetworkTransport.fetch) {\n      throw new Error(\"DefaultNetworkTransport.fetch must be set before it's used\");\n    }\n\n    if (!DefaultNetworkTransport.AbortController) {\n      throw new Error(\"DefaultNetworkTransport.AbortController must be set before it's used\");\n    }\n  }\n\n  _createClass(DefaultNetworkTransport, [{\n    key: \"fetchAndParse\",\n    value: function () {\n      var _fetchAndParse = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee3(request) {\n        var response, contentType;\n        return _regeneratorRuntime.wrap(function _callee3$(_context3) {\n          while (1) {\n            switch (_context3.prev = _context3.next) {\n              case 0:\n                _context3.prev = 0;\n                _context3.next = 3;\n                return this.fetch(request);\n\n              case 3:\n                response = _context3.sent;\n                contentType = response.headers.get(\"content-type\");\n\n                if (!response.ok) {\n                  _context3.next = 19;\n                  break;\n                }\n\n                if (!(contentType === null)) {\n                  _context3.next = 10;\n                  break;\n                }\n\n                return _context3.abrupt(\"return\", null);\n\n              case 10:\n                if (!contentType.startsWith(\"application/json\")) {\n                  _context3.next = 16;\n                  break;\n                }\n\n                _context3.next = 13;\n                return response.json();\n\n              case 13:\n                return _context3.abrupt(\"return\", _context3.sent);\n\n              case 16:\n                throw new Error(\"Expected an empty or a JSON response\");\n\n              case 17:\n                _context3.next = 32;\n                break;\n\n              case 19:\n                if (!(contentType && contentType.startsWith(\"application/json\"))) {\n                  _context3.next = 31;\n                  break;\n                }\n\n                _context3.t0 = MongoDBRealmError;\n                _context3.t1 = request.method;\n                _context3.t2 = request.url;\n                _context3.t3 = response.status;\n                _context3.t4 = response.statusText;\n                _context3.next = 27;\n                return response.json();\n\n              case 27:\n                _context3.t5 = _context3.sent;\n                throw new _context3.t0(_context3.t1, _context3.t2, _context3.t3, _context3.t4, _context3.t5);\n\n              case 31:\n                throw new Error(\"Unexpected status code (\".concat(response.status, \" \").concat(response.statusText, \")\"));\n\n              case 32:\n                _context3.next = 41;\n                break;\n\n              case 34:\n                _context3.prev = 34;\n                _context3.t6 = _context3[\"catch\"](0);\n\n                if (!(_context3.t6 instanceof MongoDBRealmError)) {\n                  _context3.next = 40;\n                  break;\n                }\n\n                throw _context3.t6;\n\n              case 40:\n                throw new Error(\"Request failed (\".concat(request.method, \" \").concat(request.url, \"): \").concat(_context3.t6.message));\n\n              case 41:\n              case \"end\":\n                return _context3.stop();\n            }\n          }\n        }, _callee3, this, [[0, 34]]);\n      }));\n\n      function fetchAndParse(_x3) {\n        return _fetchAndParse.apply(this, arguments);\n      }\n\n      return fetchAndParse;\n    }()\n  }, {\n    key: \"fetchWithCallbacks\",\n    value: function fetchWithCallbacks(request, handler) {\n      // tslint:disable-next-line: no-console\n      this.fetch(request).then( /*#__PURE__*/function () {\n        var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee4(response) {\n          var decodedBody, responseHeaders;\n          return _regeneratorRuntime.wrap(function _callee4$(_context4) {\n            while (1) {\n              switch (_context4.prev = _context4.next) {\n                case 0:\n                  _context4.next = 2;\n                  return response.text();\n\n                case 2:\n                  decodedBody = _context4.sent;\n                  // Pull out the headers of the response\n                  responseHeaders = {};\n                  response.headers.forEach(function (value, key) {\n                    responseHeaders[key] = value;\n                  });\n                  return _context4.abrupt(\"return\", {\n                    statusCode: response.status,\n                    headers: responseHeaders,\n                    body: decodedBody\n                  });\n\n                case 6:\n                case \"end\":\n                  return _context4.stop();\n              }\n            }\n          }, _callee4);\n        }));\n\n        return function (_x4) {\n          return _ref.apply(this, arguments);\n        };\n      }()).then(function (r) {\n        return handler.onSuccess(r);\n      }).catch(function (e) {\n        return handler.onError(e);\n      });\n    }\n  }, {\n    key: \"fetch\",\n    value: function () {\n      var _fetch2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee5(request) {\n        var method, url, body, timeoutMs, _request$headers, headers, _this$createTimeoutSi, signal, cancelTimeout;\n\n        return _regeneratorRuntime.wrap(function _callee5$(_context5) {\n          while (1) {\n            switch (_context5.prev = _context5.next) {\n              case 0:\n                method = request.method, url = request.url, body = request.body, timeoutMs = request.timeoutMs, _request$headers = request.headers, headers = _request$headers === void 0 ? DefaultNetworkTransport.DEFAULT_HEADERS : _request$headers;\n                _this$createTimeoutSi = this.createTimeoutSignal(timeoutMs), signal = _this$createTimeoutSi.signal, cancelTimeout = _this$createTimeoutSi.cancelTimeout;\n                _context5.prev = 2;\n                _context5.next = 5;\n                return DefaultNetworkTransport.fetch(url, {\n                  method: method,\n                  headers: headers,\n                  body: typeof body === \"string\" ? body : JSON.stringify(body),\n                  signal: signal\n                });\n\n              case 5:\n                return _context5.abrupt(\"return\", _context5.sent);\n\n              case 6:\n                _context5.prev = 6;\n                // Whatever happens, cancel any timeout\n                cancelTimeout();\n                return _context5.finish(6);\n\n              case 9:\n              case \"end\":\n                return _context5.stop();\n            }\n          }\n        }, _callee5, this, [[2,, 6, 9]]);\n      }));\n\n      function fetch(_x5) {\n        return _fetch2.apply(this, arguments);\n      }\n\n      return fetch;\n    }()\n  }, {\n    key: \"createTimeoutSignal\",\n    value: function createTimeoutSignal(timeoutMs) {\n      if (typeof timeoutMs === \"number\") {\n        var controller = new DefaultNetworkTransport.AbortController(); // Call abort after a specific number of milliseconds\n\n        var timeout = setTimeout(function () {\n          controller.abort();\n        }, timeoutMs);\n        return {\n          signal: controller.signal,\n          cancelTimeout: function cancelTimeout() {\n            clearTimeout(timeout);\n          }\n        };\n      } else {\n        return {\n          signal: undefined,\n          cancelTimeout: function cancelTimeout() {\n            /* No-op */\n          }\n        };\n      }\n    }\n  }]);\n\n  return DefaultNetworkTransport;\n}();\n\nDefaultNetworkTransport.DEFAULT_HEADERS = {\n  Accept: \"application/json\",\n  \"Content-Type\": \"application/json\"\n}; ////////////////////////////////////////////////////////////////////////////\n\nDefaultNetworkTransport.fetch = window.fetch.bind(window);\nDefaultNetworkTransport.AbortController = window.AbortController; ////////////////////////////////////////////////////////////////////////////\n\n/**\n * A basic transport, wrapping a NetworkTransport from the \"realm-network-transport\" package, injecting a baseUrl.\n */\n\nvar BaseTransport = /*#__PURE__*/function () {\n  /**\n   * Constructs a base transport, which takes paths (prepended by a base URL) instead of absolute urls.\n   *\n   * @param networkTransport The underlying network transport.\n   * @param baseUrl The base URL to prepend to paths.\n   * @param locationContext Optional object used to determine the actual base URL of the app.\n   * @param baseRoute Optional base route to prepend to the base URL.\n   */\n  function BaseTransport() {\n    var networkTransport = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : new DefaultNetworkTransport();\n    var baseUrl = arguments.length > 1 ? arguments[1] : undefined;\n    var locationContext = arguments.length > 2 ? arguments[2] : undefined;\n    var baseRoute = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : BaseTransport.DEFAULT_BASE_ROUTE;\n\n    _classCallCheck(this, BaseTransport);\n\n    this.networkTransport = networkTransport;\n    this.baseUrl = baseUrl;\n    this.locationContext = locationContext;\n    this.baseRoute = baseRoute;\n  }\n  /** @inheritdoc */\n\n\n  _createClass(BaseTransport, [{\n    key: \"fetch\",\n    value: function () {\n      var _fetch3 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee6(request) {\n        var path, headers, _request$ignoreLocati, ignoreLocation, restOfRequest, baseUrl;\n\n        return _regeneratorRuntime.wrap(function _callee6$(_context6) {\n          while (1) {\n            switch (_context6.prev = _context6.next) {\n              case 0:\n                path = request.path, headers = request.headers, _request$ignoreLocati = request.ignoreLocation, ignoreLocation = _request$ignoreLocati === void 0 ? false : _request$ignoreLocati, restOfRequest = _objectWithoutProperties(request, [\"path\", \"headers\", \"ignoreLocation\"]); // Determine the base url\n\n                _context6.next = 3;\n                return this.determineBaseUrl(ignoreLocation);\n\n              case 3:\n                baseUrl = _context6.sent;\n                return _context6.abrupt(\"return\", this.networkTransport.fetchAndParse(_objectSpread(_objectSpread({}, restOfRequest), {}, {\n                  url: baseUrl + path,\n                  headers: _objectSpread(_objectSpread({}, BaseTransport.DEFAULT_HEADERS), headers)\n                })));\n\n              case 5:\n              case \"end\":\n                return _context6.stop();\n            }\n          }\n        }, _callee6, this);\n      }));\n\n      function fetch(_x6) {\n        return _fetch3.apply(this, arguments);\n      }\n\n      return fetch;\n    }()\n    /** @inheritdoc */\n\n  }, {\n    key: \"prefix\",\n    value: function prefix(pathPrefix) {\n      return new PrefixedTransport(this, pathPrefix);\n    }\n    /**\n     * Determines the base URL from the configuration or from the location context.\n     *\n     * @param ignoreLocation Ignore the location context.\n     */\n\n  }, {\n    key: \"determineBaseUrl\",\n    value: function () {\n      var _determineBaseUrl = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee7(ignoreLocation) {\n        var location;\n        return _regeneratorRuntime.wrap(function _callee7$(_context7) {\n          while (1) {\n            switch (_context7.prev = _context7.next) {\n              case 0:\n                if (!(ignoreLocation || !this.locationContext)) {\n                  _context7.next = 4;\n                  break;\n                }\n\n                return _context7.abrupt(\"return\", this.baseUrl + this.baseRoute);\n\n              case 4:\n                _context7.next = 6;\n                return this.locationContext.location;\n\n              case 6:\n                location = _context7.sent;\n                return _context7.abrupt(\"return\", location.hostname + this.baseRoute);\n\n              case 8:\n              case \"end\":\n                return _context7.stop();\n            }\n          }\n        }, _callee7, this);\n      }));\n\n      function determineBaseUrl(_x7) {\n        return _determineBaseUrl.apply(this, arguments);\n      }\n\n      return determineBaseUrl;\n    }()\n  }]);\n\n  return BaseTransport;\n}();\n/**\n * This base route will be prefixed requests issued through by the base transport.\n */\n\n\nBaseTransport.DEFAULT_BASE_ROUTE = \"/api/client/v2.0\";\n/**\n * Default headers that will always be sat on requests.\n */\n\nBaseTransport.DEFAULT_HEADERS = {\n  Accept: \"application/json\",\n  \"Content-Type\": \"application/json\"\n}; ////////////////////////////////////////////////////////////////////////////\n\n/**\n * Fetches resources as a particular user.\n */\n\nvar AuthenticatedTransport = /*#__PURE__*/function () {\n  /**\n   * Constructs a transport that injects authorization headers to requests.\n   *\n   * @param transport The underlying transport.\n   * @param userContext The context controlling what user is authenticated.\n   */\n  function AuthenticatedTransport(transport, userContext) {\n    _classCallCheck(this, AuthenticatedTransport);\n\n    this.transport = transport;\n    this.userContext = userContext;\n  }\n  /**\n   * Fetch a network resource as an authenticated user.\n   *\n   * @param request The request to issue towards the server.\n   * @param user The user used when fetching, defaults to the `app.currentUser`.\n   *             If `null`, the fetch will be unauthenticated.\n   * @param retries How many times was this request retried?\n   * @returns A response from requesting with authentication.\n   */\n\n\n  _createClass(AuthenticatedTransport, [{\n    key: \"fetch\",\n    value: function () {\n      var _fetch4 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee8(request) {\n        var user,\n            retries,\n            _request$tokenType,\n            tokenType,\n            rest,\n            _args8 = arguments;\n\n        return _regeneratorRuntime.wrap(function _callee8$(_context8) {\n          while (1) {\n            switch (_context8.prev = _context8.next) {\n              case 0:\n                user = _args8.length > 1 && _args8[1] !== undefined ? _args8[1] : this.userContext.currentUser;\n                retries = _args8.length > 2 && _args8[2] !== undefined ? _args8[2] : 0;\n                _context8.prev = 2;\n                _request$tokenType = request.tokenType, tokenType = _request$tokenType === void 0 ? \"access\" : _request$tokenType, rest = _objectWithoutProperties(request, [\"tokenType\"]); // Awaiting to intercept errors being thrown\n\n                _context8.next = 6;\n                return this.transport.fetch(_objectSpread(_objectSpread({}, rest), {}, {\n                  headers: _objectSpread(_objectSpread({}, this.buildAuthorizationHeader(user, tokenType)), request.headers)\n                }));\n\n              case 6:\n                return _context8.abrupt(\"return\", _context8.sent);\n\n              case 9:\n                _context8.prev = 9;\n                _context8.t0 = _context8[\"catch\"](2);\n\n                if (!(user && retries === 0 && _context8.t0 instanceof MongoDBRealmError && _context8.t0.statusCode === 401)) {\n                  _context8.next = 15;\n                  break;\n                }\n\n                _context8.next = 14;\n                return user.refreshAccessToken();\n\n              case 14:\n                return _context8.abrupt(\"return\", this.fetch(request, user, retries + 1));\n\n              case 15:\n                throw _context8.t0;\n\n              case 16:\n              case \"end\":\n                return _context8.stop();\n            }\n          }\n        }, _callee8, this, [[2, 9]]);\n      }));\n\n      function fetch(_x8) {\n        return _fetch4.apply(this, arguments);\n      }\n\n      return fetch;\n    }()\n    /** @inheritdoc */\n\n  }, {\n    key: \"prefix\",\n    value: function prefix(pathPrefix) {\n      var prefixedTransport = this.transport.prefix(pathPrefix);\n      return new AuthenticatedTransport(prefixedTransport, this.userContext);\n    }\n    /**\n     * Generate an object with an authorization header to issue requests as a specific user.\n     *\n     * @param user An optional user to generate the header for.\n     * @param tokenType The type of token (access or refresh).\n     * @returns An object containing with the users access token as authorization header or undefined if no user is given.\n     */\n\n  }, {\n    key: \"buildAuthorizationHeader\",\n    value: function buildAuthorizationHeader(user, tokenType) {\n      if (user && tokenType === \"access\") {\n        return {\n          Authorization: \"Bearer \".concat(user.accessToken)\n        };\n      } else if (user && tokenType === \"refresh\") {\n        return {\n          Authorization: \"Bearer \".concat(user.refreshToken)\n        };\n      }\n    }\n  }]);\n\n  return AuthenticatedTransport;\n}(); ////////////////////////////////////////////////////////////////////////////\n//\n// Copyright 2020 Realm Inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n// http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n//\n////////////////////////////////////////////////////////////////////////////\n\n/**\n * The type of a user.\n */\n\n\nvar UserType;\n\n(function (UserType) {\n  /**\n   * A normal end-user created this user.\n   */\n  UserType[\"Normal\"] = \"normal\";\n  /**\n   * The user was created by the server.\n   */\n\n  UserType[\"Server\"] = \"server\";\n})(UserType || (UserType = {}));\n/** @ignore */\n\n\nvar DataKey;\n\n(function (DataKey) {\n  /** @ignore */\n  DataKey[\"NAME\"] = \"name\";\n  /** @ignore */\n\n  DataKey[\"EMAIL\"] = \"email\";\n  /** @ignore */\n\n  DataKey[\"PICTURE\"] = \"picture\";\n  /** @ignore */\n\n  DataKey[\"FIRST_NAME\"] = \"first_name\";\n  /** @ignore */\n\n  DataKey[\"LAST_NAME\"] = \"last_name\";\n  /** @ignore */\n\n  DataKey[\"GENDER\"] = \"gender\";\n  /** @ignore */\n\n  DataKey[\"BIRTHDAY\"] = \"birthday\";\n  /** @ignore */\n\n  DataKey[\"MIN_AGE\"] = \"min_age\";\n  /** @ignore */\n\n  DataKey[\"MAX_AGE\"] = \"max_age\";\n})(DataKey || (DataKey = {}));\n\nvar DATA_MAPPING = (_DATA_MAPPING = {}, _defineProperty(_DATA_MAPPING, DataKey.NAME, \"name\"), _defineProperty(_DATA_MAPPING, DataKey.EMAIL, \"email\"), _defineProperty(_DATA_MAPPING, DataKey.PICTURE, \"pictureUrl\"), _defineProperty(_DATA_MAPPING, DataKey.FIRST_NAME, \"firstName\"), _defineProperty(_DATA_MAPPING, DataKey.LAST_NAME, \"lastName\"), _defineProperty(_DATA_MAPPING, DataKey.GENDER, \"gender\"), _defineProperty(_DATA_MAPPING, DataKey.BIRTHDAY, \"birthday\"), _defineProperty(_DATA_MAPPING, DataKey.MIN_AGE, \"minAge\"), _defineProperty(_DATA_MAPPING, DataKey.MAX_AGE, \"maxAge\"), _DATA_MAPPING);\n/** @inheritdoc */\n\nvar UserProfile =\n/**\n * Construct a user profile from the body of a response.\n *\n * @param response The response of a call fetching the users profile.\n */\nfunction UserProfile(response) {\n  _classCallCheck(this, UserProfile);\n\n  /** @inheritdoc */\n  this.type = UserType.Normal;\n  /** @inheritdoc */\n\n  this.identities = [];\n\n  if (response) {\n    if (typeof response.type === \"string\") {\n      this.type = response.type;\n    } else {\n      throw new Error(\"Expected 'type' in the response body\");\n    }\n\n    if (Array.isArray(response.identities)) {\n      this.identities = response.identities.map(function (identity) {\n        return {\n          id: identity.id,\n          providerId: identity[\"provider_id\"],\n          providerType: identity[\"provider_type\"]\n        };\n      });\n    } else {\n      throw new Error(\"Expected 'identities' in the response body\");\n    }\n\n    var data = response.data;\n\n    if (typeof data === \"object\") {\n      for (var key in DATA_MAPPING) {\n        var value = data[key];\n        var propertyName = DATA_MAPPING[key];\n\n        if (typeof value === \"string\" && propertyName !== \"identities\" && propertyName !== \"type\") {\n          this[propertyName] = value;\n        }\n      }\n    } else {\n      throw new Error(\"Expected 'data' in the response body\");\n    }\n  }\n}; ////////////////////////////////////////////////////////////////////////////\n//\n// Copyright 2020 Realm Inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n// http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n//\n////////////////////////////////////////////////////////////////////////////\n\n/**\n * A `Storage` which will prefix a key part to every operation.\n */\n\n\nvar PrefixedStorage = /*#__PURE__*/function () {\n  /**\n   * Construct a `Storage` which will prefix a key part to every operation.\n   *\n   * @param storage The underlying storage to use for operations.\n   * @param keyPart The part of the key to prefix when performing operations.\n   */\n  function PrefixedStorage(storage, keyPart) {\n    _classCallCheck(this, PrefixedStorage);\n\n    this.storage = storage;\n    this.keyPart = keyPart;\n  }\n  /** @inheritdoc */\n\n\n  _createClass(PrefixedStorage, [{\n    key: \"get\",\n    value: function get(key) {\n      return this.storage.get(this.keyPart + PrefixedStorage.PART_SEPARATOR + key);\n    }\n    /** @inheritdoc */\n\n  }, {\n    key: \"set\",\n    value: function set(key, value) {\n      return this.storage.set(this.keyPart + PrefixedStorage.PART_SEPARATOR + key, value);\n    }\n    /** @inheritdoc */\n\n  }, {\n    key: \"remove\",\n    value: function remove(key) {\n      return this.storage.remove(this.keyPart + PrefixedStorage.PART_SEPARATOR + key);\n    }\n    /** @inheritdoc */\n\n  }, {\n    key: \"prefix\",\n    value: function prefix(keyPart) {\n      return new PrefixedStorage(this, keyPart);\n    }\n    /** @inheritdoc */\n\n  }, {\n    key: \"clear\",\n    value: function clear() {\n      var prefix = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : \"\";\n      return this.storage.clear(this.keyPart + PrefixedStorage.PART_SEPARATOR + prefix);\n    }\n    /** @inheritdoc */\n\n  }, {\n    key: \"addListener\",\n    value: function addListener(listener) {\n      return this.storage.addListener(listener);\n    }\n    /** @inheritdoc */\n\n  }, {\n    key: \"removeListener\",\n    value: function removeListener(listener) {\n      return this.storage.addListener(listener);\n    }\n  }]);\n\n  return PrefixedStorage;\n}();\n/**\n * The string separating two parts.\n */\n\n\nPrefixedStorage.PART_SEPARATOR = \":\"; ////////////////////////////////////////////////////////////////////////////\n\nvar ACCESS_TOKEN_STORAGE_KEY = \"accessToken\";\nvar REFRESH_TOKEN_STORAGE_KEY = \"refreshToken\";\nvar PROFILE_STORAGE_KEY = \"profile\";\n/**\n * Storage specific to the app.\n */\n\nvar UserStorage = /*#__PURE__*/function (_PrefixedStorage) {\n  _inherits(UserStorage, _PrefixedStorage);\n\n  var _super2 = _createSuper(UserStorage);\n\n  /**\n   * Construct a storage for a `User`.\n   *\n   * @param storage The underlying storage to wrap.\n   * @param userId The id of the user.\n   */\n  function UserStorage(storage, userId) {\n    _classCallCheck(this, UserStorage);\n\n    return _super2.call(this, storage, \"user(\".concat(userId, \")\"));\n  }\n  /**\n   * Get the access token from storage.\n   *\n   * @returns Access token (null if unknown).\n   */\n\n\n  _createClass(UserStorage, [{\n    key: \"accessToken\",\n    get: function get() {\n      return this.get(ACCESS_TOKEN_STORAGE_KEY);\n    }\n    /**\n     * Set the access token in storage.\n     *\n     * @param value Access token (null if unknown).\n     */\n    ,\n    set: function set(value) {\n      if (value === null) {\n        this.remove(ACCESS_TOKEN_STORAGE_KEY);\n      } else {\n        this.set(ACCESS_TOKEN_STORAGE_KEY, value);\n      }\n    }\n    /**\n     * Get the refresh token from storage.\n     *\n     * @returns Refresh token (null if unknown and user is logged out).\n     */\n\n  }, {\n    key: \"refreshToken\",\n    get: function get() {\n      return this.get(REFRESH_TOKEN_STORAGE_KEY);\n    }\n    /**\n     * Set the refresh token in storage.\n     *\n     * @param value Refresh token (null if unknown and user is logged out).\n     */\n    ,\n    set: function set(value) {\n      if (value === null) {\n        this.remove(REFRESH_TOKEN_STORAGE_KEY);\n      } else {\n        this.set(REFRESH_TOKEN_STORAGE_KEY, value);\n      }\n    }\n    /**\n     * Get the user profile from storage.\n     *\n     * @returns User profile (undefined if its unknown).\n     */\n\n  }, {\n    key: \"profile\",\n    get: function get() {\n      var value = this.get(PROFILE_STORAGE_KEY);\n\n      if (value) {\n        var profile = new UserProfile(); // Patch in the values\n\n        Object.assign(profile, JSON.parse(value));\n        return profile;\n      }\n    }\n    /**\n     * Set the user profile in storage.\n     *\n     * @param value User profile (undefined if its unknown).\n     */\n    ,\n    set: function set(value) {\n      if (!value) {\n        this.remove(PROFILE_STORAGE_KEY);\n      } else {\n        this.set(PROFILE_STORAGE_KEY, JSON.stringify(value));\n      }\n    }\n  }]);\n\n  return UserStorage;\n}(PrefixedStorage); ////////////////////////////////////////////////////////////////////////////\n//\n// Copyright 2020 Realm Inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n// http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n//\n////////////////////////////////////////////////////////////////////////////\n\n/** @inheritdoc */\n\n\nvar EmailPasswordAuth = /*#__PURE__*/function () {\n  /**\n   * Construct an interface to the email / password authentication provider.\n   *\n   * @param transport The underlying transport used to request the services.\n   * @param providerName Optional custom name of the authentication provider.\n   */\n  function EmailPasswordAuth(transport) {\n    var providerName = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : \"local-userpass\";\n\n    _classCallCheck(this, EmailPasswordAuth);\n\n    this.transport = transport.prefix(\"/auth/providers/\".concat(providerName));\n  }\n  /** @inheritdoc */\n\n\n  _createClass(EmailPasswordAuth, [{\n    key: \"registerUser\",\n    value: function registerUser(email, password) {\n      return this.transport.fetch({\n        method: \"POST\",\n        path: \"/register\",\n        body: {\n          email: email,\n          password: password\n        }\n      });\n    }\n    /** @inheritdoc */\n\n  }, {\n    key: \"confirmUser\",\n    value: function confirmUser(token, tokenId) {\n      return this.transport.fetch({\n        method: \"POST\",\n        path: \"/confirm\",\n        body: {\n          token: token,\n          tokenId: tokenId\n        }\n      });\n    }\n    /** @inheritdoc */\n\n  }, {\n    key: \"resendConfirmationEmail\",\n    value: function resendConfirmationEmail(email) {\n      return this.transport.fetch({\n        method: \"POST\",\n        path: \"/confirm/send\",\n        body: {\n          email: email\n        }\n      });\n    }\n    /** @inheritdoc */\n\n  }, {\n    key: \"resetPassword\",\n    value: function resetPassword(token, tokenId, password) {\n      return this.transport.fetch({\n        method: \"POST\",\n        path: \"/reset\",\n        body: {\n          token: token,\n          tokenId: tokenId,\n          password: password\n        }\n      });\n    }\n    /** @inheritdoc */\n\n  }, {\n    key: \"sendResetPasswordEmail\",\n    value: function sendResetPasswordEmail(email) {\n      return this.transport.fetch({\n        method: \"POST\",\n        path: \"/reset/send\",\n        body: {\n          email: email\n        }\n      });\n    }\n    /** @inheritdoc */\n\n  }, {\n    key: \"callResetPasswordFunction\",\n    value: function callResetPasswordFunction(email, password) {\n      for (var _len2 = arguments.length, args = new Array(_len2 > 2 ? _len2 - 2 : 0), _key2 = 2; _key2 < _len2; _key2++) {\n        args[_key2 - 2] = arguments[_key2];\n      }\n\n      return this.transport.fetch({\n        method: \"POST\",\n        path: \"/reset/call\",\n        body: {\n          email: email,\n          password: password,\n          arguments: args\n        }\n      });\n    }\n  }]);\n\n  return EmailPasswordAuth;\n}(); ////////////////////////////////////////////////////////////////////////////\n\n/** @inheritdoc */\n\n\nvar ApiKeyAuth = /*#__PURE__*/function () {\n  /**\n   * Construct an interface to the API-key authentication provider.\n   *\n   * @param transport The transport used to send requests to services.\n   * @param providerName Optional custom name of the authentication provider.\n   */\n  function ApiKeyAuth(transport) {\n    var providerName = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : \"api-key\";\n\n    _classCallCheck(this, ApiKeyAuth);\n\n    this.transport = transport.prefix(\"/auth/api_keys\");\n  }\n  /** @inheritdoc */\n\n\n  _createClass(ApiKeyAuth, [{\n    key: \"create\",\n    value: function create(name) {\n      return this.transport.fetch({\n        method: \"POST\",\n        body: {\n          name: name\n        },\n        tokenType: \"refresh\"\n      }).then(deserialize);\n    }\n    /** @inheritdoc */\n\n  }, {\n    key: \"fetch\",\n    value: function fetch(keyId) {\n      return this.transport.fetch({\n        method: \"GET\",\n        path: \"/\".concat(keyId),\n        tokenType: \"refresh\"\n      }).then(deserialize);\n    }\n    /** @inheritdoc */\n\n  }, {\n    key: \"fetchAll\",\n    value: function fetchAll() {\n      return this.transport.fetch({\n        method: \"GET\",\n        tokenType: \"refresh\"\n      }).then(deserialize);\n    }\n    /** @inheritdoc */\n\n  }, {\n    key: \"delete\",\n    value: function _delete(keyId) {\n      return this.transport.fetch({\n        method: \"DELETE\",\n        path: \"/\".concat(keyId),\n        tokenType: \"refresh\"\n      }).then(deserialize);\n    }\n    /** @inheritdoc */\n\n  }, {\n    key: \"enable\",\n    value: function enable(keyId) {\n      return this.transport.fetch({\n        method: \"PUT\",\n        path: \"/\".concat(keyId, \"/enable\"),\n        tokenType: \"refresh\"\n      }).then(deserialize);\n    }\n    /** @inheritdoc */\n\n  }, {\n    key: \"disable\",\n    value: function disable(keyId) {\n      return this.transport.fetch({\n        method: \"PUT\",\n        path: \"/\".concat(keyId, \"/disable\"),\n        tokenType: \"refresh\"\n      }).then(deserialize);\n    }\n  }]);\n\n  return ApiKeyAuth;\n}(); ////////////////////////////////////////////////////////////////////////////\n\n\nvar UserState;\n\n(function (UserState) {\n  UserState[\"Active\"] = \"active\";\n  UserState[\"LoggedOut\"] = \"logged-out\";\n  UserState[\"Removed\"] = \"removed\";\n})(UserState || (UserState = {}));\n\nvar UserType$1;\n\n(function (UserType) {\n  UserType[\"Normal\"] = \"normal\";\n  UserType[\"Server\"] = \"server\";\n})(UserType$1 || (UserType$1 = {}));\n\nfunction _performLogIn2(_x9, _x10) {\n  return _performLogIn.apply(this, arguments);\n}\n/**\n * Representation of an authenticated user of an app.\n */\n\n\nfunction _performLogIn() {\n  _performLogIn = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee22(app, credentials) {\n    var response, id, accessToken, refreshToken;\n    return _regeneratorRuntime.wrap(function _callee22$(_context22) {\n      while (1) {\n        switch (_context22.prev = _context22.next) {\n          case 0:\n            _context22.next = 2;\n            return app.appTransport.fetch({\n              method: \"POST\",\n              path: \"/auth/providers/\".concat(credentials.providerName, \"/login\"),\n              body: credentials.payload\n            });\n\n          case 2:\n            response = _context22.sent;\n            // Spread out values from the response and ensure they're valid\n            id = response.user_id, accessToken = response.access_token, refreshToken = response.refresh_token;\n\n            if (!(typeof id !== \"string\")) {\n              _context22.next = 6;\n              break;\n            }\n\n            throw new Error(\"Expected a user id in the response\");\n\n          case 6:\n            if (!(typeof accessToken !== \"string\")) {\n              _context22.next = 8;\n              break;\n            }\n\n            throw new Error(\"Expected an access token in the response\");\n\n          case 8:\n            if (!(typeof refreshToken !== \"string\")) {\n              _context22.next = 10;\n              break;\n            }\n\n            throw new Error(\"Expected a refresh token in the response\");\n\n          case 10:\n            return _context22.abrupt(\"return\", {\n              id: id,\n              accessToken: accessToken,\n              refreshToken: refreshToken\n            });\n\n          case 11:\n          case \"end\":\n            return _context22.stop();\n        }\n      }\n    }, _callee22);\n  }));\n  return _performLogIn.apply(this, arguments);\n}\n\nvar User = /*#__PURE__*/function () {\n  function User(_ref2) {\n    var app = _ref2.app,\n        id = _ref2.id,\n        accessToken = _ref2.accessToken,\n        refreshToken = _ref2.refreshToken;\n\n    _classCallCheck(this, User);\n\n    this.app = app;\n    this._id = id;\n    this._accessToken = accessToken;\n    this._refreshToken = refreshToken;\n    this.transport = new AuthenticatedTransport(app.baseTransport, {\n      currentUser: this\n    });\n    var appTransport = new AppTransport(this.transport, app.id);\n    this.apiKeys = new ApiKeyAuth(this.transport);\n    this.functions = FunctionsFactory.create(appTransport);\n    this.storage = new UserStorage(app.storage, id); // Store tokens in storage for later hydration\n\n    if (accessToken) {\n      this.storage.accessToken = accessToken;\n    }\n\n    if (refreshToken) {\n      this.storage.refreshToken = refreshToken;\n    }\n  }\n  /**\n   * Creates a user from the data stored in the storage of an `App` instance.\n   *\n   * @param app The app that the user was logged into.\n   * @param userId The id of the user to restore.\n   * @returns The user created from values retrieved from storage.\n   */\n\n\n  _createClass(User, [{\n    key: \"refreshProfile\",\n    value: function () {\n      var _refreshProfile = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee9() {\n        var response;\n        return _regeneratorRuntime.wrap(function _callee9$(_context9) {\n          while (1) {\n            switch (_context9.prev = _context9.next) {\n              case 0:\n                _context9.next = 2;\n                return this.transport.fetch({\n                  method: \"GET\",\n                  path: \"/auth/profile\"\n                });\n\n              case 2:\n                response = _context9.sent;\n                // Create a profile instance\n                this._profile = new UserProfile(response); // Store this for later hydration\n\n                this.storage.profile = this._profile;\n\n              case 5:\n              case \"end\":\n                return _context9.stop();\n            }\n          }\n        }, _callee9, this);\n      }));\n\n      function refreshProfile() {\n        return _refreshProfile.apply(this, arguments);\n      }\n\n      return refreshProfile;\n    }()\n  }, {\n    key: \"logOut\",\n    value: function () {\n      var _logOut = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee10() {\n        return _regeneratorRuntime.wrap(function _callee10$(_context10) {\n          while (1) {\n            switch (_context10.prev = _context10.next) {\n              case 0:\n                if (!(this._refreshToken !== null)) {\n                  _context10.next = 3;\n                  break;\n                }\n\n                _context10.next = 3;\n                return this.app.baseTransport.fetch({\n                  method: \"DELETE\",\n                  path: \"/auth/session\",\n                  headers: {\n                    Authorization: \"Bearer \".concat(this._refreshToken)\n                  }\n                });\n\n              case 3:\n                // Forget the access and refresh token\n                this.accessToken = null;\n                this.refreshToken = null;\n\n              case 5:\n              case \"end\":\n                return _context10.stop();\n            }\n          }\n        }, _callee10, this);\n      }));\n\n      function logOut() {\n        return _logOut.apply(this, arguments);\n      }\n\n      return logOut;\n    }()\n    /**\n     * Authenticate and retrieve the access and refresh tokens.\n     *\n     * @param credentials Credentials to use when logging in.\n     */\n\n  }, {\n    key: \"logIn\",\n    value: function () {\n      var _logIn = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee11(credentials) {\n        var _yield$performLogIn, id, accessToken, refreshToken;\n\n        return _regeneratorRuntime.wrap(function _callee11$(_context11) {\n          while (1) {\n            switch (_context11.prev = _context11.next) {\n              case 0:\n                _context11.next = 2;\n                return _performLogIn2(this.app, credentials);\n\n              case 2:\n                _yield$performLogIn = _context11.sent;\n                id = _yield$performLogIn.id;\n                accessToken = _yield$performLogIn.accessToken;\n                refreshToken = _yield$performLogIn.refreshToken;\n\n                if (!(id !== this.id)) {\n                  _context11.next = 8;\n                  break;\n                }\n\n                throw new Error(\"Logged into a different user\");\n\n              case 8:\n                // Store the access and refresh token\n                this.accessToken = accessToken;\n                this.refreshToken = refreshToken;\n\n              case 10:\n              case \"end\":\n                return _context11.stop();\n            }\n          }\n        }, _callee11, this);\n      }));\n\n      function logIn(_x11) {\n        return _logIn.apply(this, arguments);\n      }\n\n      return logIn;\n    }()\n    /** @inheritdoc */\n\n  }, {\n    key: \"linkCredentials\",\n    value: function () {\n      var _linkCredentials = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee12(credentials) {\n        return _regeneratorRuntime.wrap(function _callee12$(_context12) {\n          while (1) {\n            switch (_context12.prev = _context12.next) {\n              case 0:\n                throw new Error(\"Not yet implemented\");\n\n              case 1:\n              case \"end\":\n                return _context12.stop();\n            }\n          }\n        }, _callee12);\n      }));\n\n      function linkCredentials(_x12) {\n        return _linkCredentials.apply(this, arguments);\n      }\n\n      return linkCredentials;\n    }()\n  }, {\n    key: \"refreshAccessToken\",\n    value: function () {\n      var _refreshAccessToken = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee13() {\n        var response, accessToken;\n        return _regeneratorRuntime.wrap(function _callee13$(_context13) {\n          while (1) {\n            switch (_context13.prev = _context13.next) {\n              case 0:\n                _context13.next = 2;\n                return this.app.baseTransport.fetch({\n                  method: \"POST\",\n                  path: \"/auth/session\",\n                  headers: {\n                    Authorization: \"Bearer \".concat(this.refreshToken)\n                  }\n                });\n\n              case 2:\n                response = _context13.sent;\n                accessToken = response.access_token;\n\n                if (!(typeof accessToken === \"string\")) {\n                  _context13.next = 8;\n                  break;\n                }\n\n                this.accessToken = accessToken;\n                _context13.next = 9;\n                break;\n\n              case 8:\n                throw new Error(\"Expected an 'access_token' in the response\");\n\n              case 9:\n              case \"end\":\n                return _context13.stop();\n            }\n          }\n        }, _callee13, this);\n      }));\n\n      function refreshAccessToken() {\n        return _refreshAccessToken.apply(this, arguments);\n      }\n\n      return refreshAccessToken;\n    }()\n  }, {\n    key: \"refreshCustomData\",\n    value: function () {\n      var _refreshCustomData = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee14() {\n        return _regeneratorRuntime.wrap(function _callee14$(_context14) {\n          while (1) {\n            switch (_context14.prev = _context14.next) {\n              case 0:\n                _context14.next = 2;\n                return this.refreshAccessToken();\n\n              case 2:\n                return _context14.abrupt(\"return\", this.customData);\n\n              case 3:\n              case \"end\":\n                return _context14.stop();\n            }\n          }\n        }, _callee14, this);\n      }));\n\n      function refreshCustomData() {\n        return _refreshCustomData.apply(this, arguments);\n      }\n\n      return refreshCustomData;\n    }()\n  }, {\n    key: \"callFunction\",\n    value: function callFunction(name) {\n      var _this$functions;\n\n      for (var _len3 = arguments.length, args = new Array(_len3 > 1 ? _len3 - 1 : 0), _key3 = 1; _key3 < _len3; _key3++) {\n        args[_key3 - 1] = arguments[_key3];\n      }\n\n      return (_this$functions = this.functions).callFunction.apply(_this$functions, [name].concat(args));\n    }\n    /**\n     * Restore a user from the data stored in the storage of an `App` instance.\n     */\n\n  }, {\n    key: \"hydrate\",\n    value: function hydrate() {\n      // Hydrate tokens\n      var accessToken = this.storage.accessToken;\n      var refreshToken = this.storage.refreshToken;\n      var profile = this.storage.profile;\n\n      if (typeof accessToken === \"string\") {\n        this.accessToken = accessToken;\n      }\n\n      if (typeof refreshToken === \"string\") {\n        this.refreshToken = refreshToken;\n      }\n\n      if (typeof profile === \"object\") {\n        this._profile = profile;\n      }\n    }\n  }, {\n    key: \"push\",\n    value: function push() {\n      var serviceName = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : \"\";\n      throw new Error(\"Not yet implemented\");\n    }\n  }, {\n    key: \"decodeAccessToken\",\n    value: function decodeAccessToken() {\n      if (this.accessToken) {\n        // Decode and spread the token\n        var parts = this.accessToken.split(\".\");\n\n        if (parts.length !== 3) {\n          throw new Error(\"Expected three parts\");\n        } // Decode the payload\n\n\n        var encodedPayload = parts[1];\n        var decodedPayload = base64.Base64.decode(encodedPayload);\n        var parsedPayload = JSON.parse(decodedPayload);\n        var expires = parsedPayload.exp,\n            issuedAt = parsedPayload.iat,\n            _parsedPayload$user_d = parsedPayload.user_data,\n            userData = _parsedPayload$user_d === void 0 ? {} : _parsedPayload$user_d; // Validate the types\n\n        if (typeof expires !== \"number\") {\n          throw new Error(\"Failed to decode access token 'exp'\");\n        } else if (typeof issuedAt !== \"number\") {\n          throw new Error(\"Failed to decode access token 'iat'\");\n        }\n\n        return {\n          expires: expires,\n          issuedAt: issuedAt,\n          userData: userData\n        };\n      } else {\n        throw new Error(\"Missing an access token\");\n      }\n    }\n  }, {\n    key: \"id\",\n\n    /**\n     * The automatically-generated internal id of the user.\n     *\n     * @returns The id of the user in the MongoDB Realm database.\n     */\n    get: function get() {\n      return this._id;\n    }\n    /**\n     * @returns The access token used to authenticate the user towards MongoDB Realm.\n     */\n\n  }, {\n    key: \"accessToken\",\n    get: function get() {\n      return this._accessToken;\n    }\n    /**\n     * @param token The new access token.\n     */\n    ,\n    set: function set(token) {\n      this._accessToken = token;\n      this.storage.accessToken = token;\n    }\n    /**\n     * @returns The refresh token used to issue new access tokens.\n     */\n\n  }, {\n    key: \"refreshToken\",\n    get: function get() {\n      return this._refreshToken;\n    }\n    /**\n     * @param token The new refresh token.\n     */\n    ,\n    set: function set(token) {\n      this._refreshToken = token;\n      this.storage.refreshToken = token;\n    }\n    /**\n     * The state of the user is one of:\n     * - \"active\" The user is logged in and ready.\n     * - \"logged-out\" The user was logged in, but is no longer logged in.\n     * - \"removed\" The user was logged in, but removed entirely from the app again.\n     *\n     * @returns The current state of the user.\n     */\n\n  }, {\n    key: \"state\",\n    get: function get() {\n      if (this.app.allUsers.indexOf(this) === -1) {\n        return UserState.Removed;\n      } else {\n        return this.refreshToken === null ? UserState.LoggedOut : UserState.Active;\n      }\n    }\n  }, {\n    key: \"customData\",\n    get: function get() {\n      if (this.accessToken) {\n        var decodedToken = this.decodeAccessToken();\n        return decodedToken.userData;\n      } else {\n        throw new Error(\"Cannot read custom data without an access token\");\n      }\n    }\n    /**\n     * @returns Profile containing detailed information about the user.\n     */\n\n  }, {\n    key: \"profile\",\n    get: function get() {\n      if (this._profile) {\n        return this._profile;\n      } else {\n        throw new Error(\"A profile was never fetched for this user\");\n      }\n    }\n  }], [{\n    key: \"hydrate\",\n    value: function hydrate(app, userId) {\n      var user = new User({\n        app: app,\n        id: userId,\n        accessToken: null,\n        refreshToken: null\n      });\n      user.hydrate();\n      return user;\n    }\n  }]);\n\n  return User;\n}(); ////////////////////////////////////////////////////////////////////////////\n//\n// Copyright 2020 Realm Inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n// http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n//\n////////////////////////////////////////////////////////////////////////////\n// TODO: Ensure the static interface of the Credentials class implements the static interface of Realm.Credentials\n// See https://stackoverflow.com/a/43484801\n\n/**\n * Instances of this class can be passed to the `app.logIn` method to authenticate an end-user.\n */\n\n\nvar Credentials = /*#__PURE__*/function () {\n  /**\n   * Constructs an instance of credentials.\n   *\n   * @param providerName The name of the authentication provider used when authenticating.\n   * @param providerType The type of the authentication provider used when authenticating.\n   * @param payload The data being sent to the service when authenticating.\n   */\n  function Credentials(providerName, providerType, payload) {\n    _classCallCheck(this, Credentials);\n\n    this.providerName = providerName;\n    this.providerType = providerType;\n    this.payload = payload;\n  }\n  /**\n   * Creates credentials that logs in using the [Anonymous Provider](https://docs.mongodb.com/realm/authentication/anonymous/).\n   *\n   * @returns The credentials instance, which can be passed to `app.logIn`.\n   */\n\n\n  _createClass(Credentials, null, [{\n    key: \"anonymous\",\n    value: function anonymous() {\n      return new Credentials(\"anon-user\", \"anon-user\", {});\n    }\n    /**\n     * Creates credentials that logs in using the [API Key Provider](https://docs.mongodb.com/realm/authentication/api-key/).\n     *\n     * @deprecated Use `Credentials.apiKey`.\n     *\n     * @param key The secret content of the API key.\n     * @returns The credentials instance, which can be passed to `app.logIn`.\n     */\n\n  }, {\n    key: \"userApiKey\",\n    value: function userApiKey(key) {\n      return new Credentials(\"api-key\", \"api-key\", {\n        key: key\n      });\n    }\n    /**\n     * Creates credentials that logs in using the [API Key Provider](https://docs.mongodb.com/realm/authentication/api-key/).\n     *\n     * @deprecated Use `Credentials.apiKey`.\n     *\n     * @param key The secret content of the API key.\n     * @returns The credentials instance, which can be passed to `app.logIn`.\n     */\n\n  }, {\n    key: \"serverApiKey\",\n    value: function serverApiKey(key) {\n      return new Credentials(\"api-key\", \"api-key\", {\n        key: key\n      });\n    }\n    /**\n     * Creates credentials that logs in using the [API Key Provider](https://docs.mongodb.com/realm/authentication/api-key/).\n     *\n     * @param key The secret content of the API key.\n     * @returns The credentials instance, which can be passed to `app.logIn`.\n     */\n\n  }, {\n    key: \"apiKey\",\n    value: function apiKey(key) {\n      return new Credentials(\"api-key\", \"api-key\", {\n        key: key\n      });\n    }\n    /**\n     * Creates credentials that logs in using the [Email/Password Provider](https://docs.mongodb.com/realm/authentication/email-password/).\n     * Note: This was formerly known as the \"Username/Password\" provider.\n     *\n     * @param email The end-users email address.\n     * @param password The end-users password.\n     * @returns The credentials instance, which can be passed to `app.logIn`.\n     */\n\n  }, {\n    key: \"emailPassword\",\n    value: function emailPassword(email, password) {\n      return new Credentials(\"local-userpass\", \"local-userpass\", {\n        username: email,\n        password: password\n      });\n    }\n    /**\n     * Creates credentials that logs in using the [Custom Function Provider](https://docs.mongodb.com/realm/authentication/custom-function/).\n     *\n     * @param payload The custom payload as expected by the server.\n     * @returns The credentials instance, which can be passed to `app.logIn`.\n     */\n\n  }, {\n    key: \"function\",\n    value: function _function(payload) {\n      return new Credentials(\"custom-function\", \"custom-function\", payload);\n    }\n    /**\n     * Creates credentials that logs in using the [Custom JWT Provider](https://docs.mongodb.com/realm/authentication/custom-jwt/).\n     *\n     * @param token The JSON Web Token (JWT).\n     * @returns The credentials instance, which can be passed to `app.logIn`.\n     */\n\n  }, {\n    key: \"jwt\",\n    value: function jwt(token) {\n      return new Credentials(\"custom-token\", \"custom-token\", {\n        token: token\n      });\n    }\n    /**\n     * Creates credentials that logs in using the [Google Provider](https://docs.mongodb.com/realm/authentication/google/).\n     *\n     * @param redirectUrlOrAuthCode The URL that users should be redirected to or the auth code returned from Google.\n     * @returns The credentials instance, which can be passed to `app.logIn`.\n     */\n\n  }, {\n    key: \"google\",\n    value: function google(redirectUrlOrAuthCode) {\n      return new Credentials(\"oauth2-google\", \"oauth2-google\", redirectUrlOrAuthCode.includes(\"://\") ? {\n        redirectUrl: redirectUrlOrAuthCode\n      } : {\n        authCode: redirectUrlOrAuthCode\n      });\n    }\n    /**\n     * Creates credentials that logs in using the [Facebook Provider](https://docs.mongodb.com/realm/authentication/facebook/).\n     *\n     * @param redirectUrlOrAccessToken The URL that users should be redirected to or the auth code returned from Facebook.\n     * @returns The credentials instance, which can be passed to `app.logIn`.\n     */\n\n  }, {\n    key: \"facebook\",\n    value: function facebook(redirectUrlOrAccessToken) {\n      return new Credentials(\"oauth2-facebook\", \"oauth2-facebook\", redirectUrlOrAccessToken.includes(\"://\") ? {\n        redirectUrl: redirectUrlOrAccessToken\n      } : {\n        accessToken: redirectUrlOrAccessToken\n      });\n    }\n    /**\n     * Creates credentials that logs in using the [Apple ID Provider](https://docs.mongodb.com/realm/authentication/apple/).\n     *\n     * @param redirectUrlOrIdToken The URL that users should be redirected to or the id_token returned from Apple.\n     * @returns The credentials instance, which can be passed to `app.logIn`.\n     */\n\n  }, {\n    key: \"apple\",\n    value: function apple(redirectUrlOrIdToken) {\n      return new Credentials(\"oauth2-apple\", \"oauth2-apple\", redirectUrlOrIdToken.includes(\"://\") ? {\n        redirectUrl: redirectUrlOrIdToken\n      } : {\n        // eslint-disable-next-line @typescript-eslint/camelcase\n        id_token: redirectUrlOrIdToken\n      });\n    }\n  }]);\n\n  return Credentials;\n}(); ////////////////////////////////////////////////////////////////////////////\n\n/**\n * A remote collection of documents.\n */\n\n\nvar MongoDBCollection = /*#__PURE__*/function () {\n  /**\n   * Construct a remote collection of documents.\n   *\n   * @param transport The transport to use when requesting the service.\n   * @param serviceName The name of the remote service.\n   * @param databaseName The name of the database.\n   * @param collectionName The name of the remote collection.\n   */\n  function MongoDBCollection(transport, serviceName, databaseName, collectionName) {\n    _classCallCheck(this, MongoDBCollection);\n\n    this.functions = FunctionsFactory.create(transport, {\n      serviceName: serviceName\n    });\n    this.databaseName = databaseName;\n    this.collectionName = collectionName;\n  }\n  /** @inheritdoc */\n\n\n  _createClass(MongoDBCollection, [{\n    key: \"find\",\n    value: function find() {\n      var filter = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n      var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n      return this.functions.find({\n        database: this.databaseName,\n        collection: this.collectionName,\n        query: filter,\n        project: options.projection,\n        sort: options.sort,\n        limit: options.limit\n      });\n    }\n    /** @inheritdoc */\n\n  }, {\n    key: \"findOne\",\n    value: function findOne() {\n      var filter = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n      var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n      return this.functions.findOne({\n        database: this.databaseName,\n        collection: this.collectionName,\n        query: filter,\n        project: options.projection,\n        sort: options.sort\n      });\n    }\n    /** @inheritdoc */\n\n  }, {\n    key: \"findOneAndUpdate\",\n    value: function findOneAndUpdate() {\n      var filter = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n      var update = arguments.length > 1 ? arguments[1] : undefined;\n      var options = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n      return this.functions.findOneAndUpdate({\n        database: this.databaseName,\n        collection: this.collectionName,\n        filter: filter,\n        update: update,\n        sort: options.sort,\n        projection: options.projection,\n        upsert: options.upsert,\n        returnNewDocument: options.returnNewDocument\n      });\n    }\n    /** @inheritdoc */\n\n  }, {\n    key: \"findOneAndReplace\",\n    value: function findOneAndReplace() {\n      var filter = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n      var replacement = arguments.length > 1 ? arguments[1] : undefined;\n      var options = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n      return this.functions.findOneAndReplace({\n        database: this.databaseName,\n        collection: this.collectionName,\n        filter: filter,\n        update: replacement,\n        sort: options.sort,\n        projection: options.projection,\n        upsert: options.upsert,\n        returnNewDocument: options.returnNewDocument\n      });\n    }\n    /** @inheritdoc */\n\n  }, {\n    key: \"findOneAndDelete\",\n    value: function findOneAndDelete() {\n      var filter = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n      var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n      return this.functions.findOneAndReplace({\n        database: this.databaseName,\n        collection: this.collectionName,\n        filter: filter,\n        sort: options.sort,\n        projection: options.projection\n      });\n    }\n    /** @inheritdoc */\n\n  }, {\n    key: \"aggregate\",\n    value: function aggregate(pipeline) {\n      return this.functions.aggregate({\n        database: this.databaseName,\n        collection: this.collectionName,\n        pipeline: pipeline\n      });\n    }\n    /** @inheritdoc */\n\n  }, {\n    key: \"count\",\n    value: function count() {\n      var filter = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n      var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n      return this.functions.count({\n        database: this.databaseName,\n        collection: this.collectionName,\n        query: filter,\n        limit: options.limit\n      });\n    }\n    /** @inheritdoc */\n\n  }, {\n    key: \"insertOne\",\n    value: function insertOne(document) {\n      return this.functions.insertOne({\n        database: this.databaseName,\n        collection: this.collectionName,\n        document: document\n      });\n    }\n    /** @inheritdoc */\n\n  }, {\n    key: \"insertMany\",\n    value: function insertMany(documents) {\n      return this.functions.insertMany({\n        database: this.databaseName,\n        collection: this.collectionName,\n        documents: documents\n      });\n    }\n    /** @inheritdoc */\n\n  }, {\n    key: \"deleteOne\",\n    value: function deleteOne() {\n      var filter = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n      return this.functions.deleteOne({\n        database: this.databaseName,\n        collection: this.collectionName,\n        query: filter\n      });\n    }\n    /** @inheritdoc */\n\n  }, {\n    key: \"deleteMany\",\n    value: function deleteMany() {\n      var filter = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n      return this.functions.deleteMany({\n        database: this.databaseName,\n        collection: this.collectionName,\n        query: filter\n      });\n    }\n    /** @inheritdoc */\n\n  }, {\n    key: \"updateOne\",\n    value: function updateOne(filter, update) {\n      var options = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n      return this.functions.updateOne({\n        database: this.databaseName,\n        collection: this.collectionName,\n        query: filter,\n        update: update,\n        upsert: options.upsert\n      });\n    }\n    /** @inheritdoc */\n\n  }, {\n    key: \"updateMany\",\n    value: function updateMany(filter, update) {\n      var options = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n      return this.functions.updateMany({\n        database: this.databaseName,\n        collection: this.collectionName,\n        query: filter,\n        update: update,\n        upsert: options.upsert\n      });\n    }\n    /** @inheritdoc */\n\n  }, {\n    key: \"watch\",\n    value: function watch() {\n      throw new Error(\"Not yet implemented\");\n    }\n  }]);\n\n  return MongoDBCollection;\n}();\n/**\n * Creates an Remote MongoDB Collection.\n * Note: This method exists to enable function binding.\n *\n * @param transport The underlying transport.\n * @param serviceName A service name.\n * @param databaseName A database name.\n * @param collectionName A collection name.\n * @returns The collection.\n */\n\n\nfunction createCollection(transport, serviceName, databaseName, collectionName) {\n  return new MongoDBCollection(transport, serviceName, databaseName, collectionName);\n}\n/**\n * Creates a Remote MongoDB Database.\n * Note: This method exists to enable function binding.\n *\n * @param transport The underlying transport\n * @param serviceName A service name\n * @param databaseName A database name\n * @returns The database.\n */\n\n\nfunction createDatabase(transport, serviceName, databaseName) {\n  return {\n    collection: createCollection.bind(null, transport, serviceName, databaseName)\n  };\n}\n/**\n * Creates a Remote MongoDB Service.\n * Note: This method exists to enable function binding.\n *\n * @param transport The underlying transport.\n * @param serviceName An optional service name.\n * @returns The service.\n */\n\n\nfunction createService(transport) {\n  var serviceName = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : \"mongo-db\";\n  return {\n    db: createDatabase.bind(null, transport, serviceName)\n  };\n} ////////////////////////////////////////////////////////////////////////////\n// @see https://github.com/mongodb/stitch-js-sdk/blob/master/packages/core/services/http/src/internal/CoreHttpServiceClient.ts\n\n/**\n * The Stitch HTTP Service is a generic interface that enables you to communicate with any service that is available over HTTP.\n *\n * @see https://docs.mongodb.com/stitch/services/http/\n */\n\n\nvar HTTPService = /*#__PURE__*/function () {\n  /**\n   * Construct an HTTP Service.\n   *\n   * @param transport The underlying transport.\n   * @param serviceName An optional service name.\n   */\n  function HTTPService(transport) {\n    var serviceName = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : \"http\";\n\n    _classCallCheck(this, HTTPService);\n\n    this.functions = FunctionsFactory.create(transport, {\n      serviceName: serviceName\n    });\n  }\n  /**\n   * Sends an HTTP GET request to the specified URL.\n   *\n   * @param url The URL to send the request to.\n   * @param options Options related to the request.\n   * @returns The response.\n   */\n\n\n  _createClass(HTTPService, [{\n    key: \"get\",\n    value: function get(url) {\n      var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n      return this.functions.get(_objectSpread({\n        url: url\n      }, options));\n    }\n    /**\n     * Sends an HTTP POST request to the specified URL.\n     *\n     * @param url The URL to send the request to.\n     * @param options Options related to the request.\n     * @returns The response.\n     */\n\n  }, {\n    key: \"post\",\n    value: function post(url) {\n      var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n      return this.functions.post(_objectSpread({\n        url: url\n      }, options));\n    }\n    /**\n     * Sends an HTTP PUT request to the specified URL.\n     *\n     * @param url The URL to send the request to.\n     * @param options Options related to the request.\n     * @returns The response.\n     */\n\n  }, {\n    key: \"put\",\n    value: function put(url) {\n      var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n      return this.functions.put(_objectSpread({\n        url: url\n      }, options));\n    }\n    /**\n     * Sends an HTTP DELETE request to the specified URL.\n     *\n     * @param url The URL to send the request to.\n     * @param options Options related to the request.\n     * @returns The response.\n     */\n\n  }, {\n    key: \"delete\",\n    value: function _delete(url) {\n      var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n      return this.functions.delete(_objectSpread({\n        url: url\n      }, options));\n    }\n    /**\n     * Sends an HTTP HEAD request to the specified URL.\n     *\n     * @param url The URL to send the request to.\n     * @param options Options related to the request.\n     * @returns The response.\n     */\n\n  }, {\n    key: \"head\",\n    value: function head(url) {\n      var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n      return this.functions.head(_objectSpread({\n        url: url\n      }, options));\n    }\n    /**\n     * Sends an HTTP PATCH request to the specified URL.\n     *\n     * @param url The URL to send the request to.\n     * @param options Options related to the request.\n     * @returns The response.\n     */\n\n  }, {\n    key: \"patch\",\n    value: function patch(url) {\n      var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n      return this.functions.patch(_objectSpread({\n        url: url\n      }, options));\n    }\n  }]);\n\n  return HTTPService;\n}();\n/**\n * Creates an HTTP Service.\n * Note: This method exists to enable function binding.\n *\n * @param transport The underlying transport.\n * @param serviceName An optional service name.\n * @returns The new HTTP Service.\n */\n\n\nfunction createService$1(transport) {\n  var serviceName = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : \"http\";\n  return new HTTPService(transport, serviceName);\n} ////////////////////////////////////////////////////////////////////////////\n\n/**\n * Create all services for a particular app.\n *\n * @param transport The transport to use when senting requests to the services.\n * @returns An object containing functions that create the individual services.\n */\n\n\nfunction create(transport) {\n  return {\n    mongodb: createService.bind(null, transport),\n    http: createService$1.bind(null, transport)\n  };\n} ////////////////////////////////////////////////////////////////////////////\n\n\nvar USER_IDS_STORAGE_KEY = \"userIds\";\n/**\n * Storage specific to the app.\n */\n\nvar AppStorage = /*#__PURE__*/function (_PrefixedStorage2) {\n  _inherits(AppStorage, _PrefixedStorage2);\n\n  var _super3 = _createSuper(AppStorage);\n\n  /**\n   * Construct a storage for an `App`\n   *\n   * @param storage The underlying storage to wrap.\n   * @param appId The id of the app.\n   */\n  function AppStorage(storage, appId) {\n    _classCallCheck(this, AppStorage);\n\n    return _super3.call(this, storage, \"app(\".concat(appId, \")\"));\n  }\n  /**\n   * Reads out the list of user ids from storage.\n   *\n   * @returns A list of user ids.\n   */\n\n\n  _createClass(AppStorage, [{\n    key: \"getUserIds\",\n    value: function getUserIds() {\n      try {\n        var userIdsString = this.get(USER_IDS_STORAGE_KEY);\n        var userIds = userIdsString ? JSON.parse(userIdsString) : [];\n\n        if (Array.isArray(userIds)) {\n          // Remove any duplicates that might have been added\n          // The Set preserves insertion order\n          return _toConsumableArray(new Set(userIds));\n        } else {\n          throw new Error(\"Expected an array\");\n        }\n      } catch (err) {\n        // The storage was corrupted\n        this.remove(USER_IDS_STORAGE_KEY);\n        throw err;\n      }\n    }\n    /**\n     * Sets the list of ids in storage.\n     * Optionally merging with existing ids stored in the storage, by prepending these while voiding duplicates.\n     *\n     * @param userIds The list of ids to store.\n     * @param mergeWithExisting Prepend existing ids to avoid data-races with other apps using this storage.\n     */\n\n  }, {\n    key: \"setUserIds\",\n    value: function setUserIds(userIds, mergeWithExisting) {\n      if (mergeWithExisting) {\n        // Add any existing user id to the end of this list, avoiding duplicates\n        var existingIds = this.getUserIds();\n\n        var _iterator2 = _createForOfIteratorHelper(existingIds),\n            _step2;\n\n        try {\n          for (_iterator2.s(); !(_step2 = _iterator2.n()).done;) {\n            var id = _step2.value;\n\n            if (userIds.indexOf(id) === -1) {\n              userIds.push(id);\n            }\n          }\n        } catch (err) {\n          _iterator2.e(err);\n        } finally {\n          _iterator2.f();\n        }\n      } // Store the list of ids\n\n\n      this.set(USER_IDS_STORAGE_KEY, JSON.stringify(userIds));\n    }\n    /**\n     * Remove an id from the list of ids.\n     *\n     * @param userId The id of a User to be removed.\n     */\n\n  }, {\n    key: \"removeUserId\",\n    value: function removeUserId(userId) {\n      var existingIds = this.getUserIds();\n      var userIds = existingIds.filter(function (id) {\n        return id !== userId;\n      }); // Store the list of ids\n\n      this.setUserIds(userIds, false);\n    }\n  }]);\n\n  return AppStorage;\n}(PrefixedStorage); ////////////////////////////////////////////////////////////////////////////\n//\n// Copyright 2020 Realm Inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n// http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n//\n////////////////////////////////////////////////////////////////////////////\n\n/**\n * Generate a random sequence of characters.\n *\n * @param length The length of the string.\n * @param alphabet The alphabet of characters to pick from.\n * @returns A string of characters picked randomly from `alphabet`.\n */\n\n\nfunction generateRandomString(length, alphabet) {\n  var result = \"\";\n\n  for (var i = 0; i < length; i++) {\n    result += alphabet[Math.floor(Math.random() * alphabet.length)];\n  }\n\n  return result;\n}\n/**\n * Encode an object mapping from string to string, into a query string to be appended a URL.\n *\n * @param params The parameters to include in the string.\n * @returns A URL encoded representation of the parameters.\n */\n\n\nfunction encodeQueryString(params) {\n  return Object.entries(params).map(function (_ref3) {\n    var _ref4 = _slicedToArray(_ref3, 2),\n        k = _ref4[0],\n        v = _ref4[1];\n\n    return [k, encodeURIComponent(v)];\n  }).map(function (_ref5) {\n    var _ref6 = _slicedToArray(_ref5, 2),\n        k = _ref6[0],\n        v = _ref6[1];\n\n    return \"\".concat(k, \"=\").concat(v);\n  }).join(\"&\");\n}\n/**\n * Decodes a query string into an object.\n *\n * @param str The query string to decode.\n * @returns The decoded query string.\n */\n\n\nfunction decodeQueryString(str) {\n  return Object.fromEntries(str.split(\"&\").map(function (kvp) {\n    return kvp.split(\"=\");\n  }).map(function (_ref7) {\n    var _ref8 = _slicedToArray(_ref7, 2),\n        k = _ref8[0],\n        v = _ref8[1];\n\n    return [k, decodeURIComponent(v)];\n  }));\n} ////////////////////////////////////////////////////////////////////////////\n//\n// Copyright 2020 Realm Inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n// http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n//\n////////////////////////////////////////////////////////////////////////////\n\n\nvar environment = null;\n/**\n * Set the environment of execution.\n * Note: This should be called as the first thing before executing any code which calls getEnvironment()\n *\n * @param e An object containing environment specific implementations.\n */\n\nfunction setEnvironment(e) {\n  environment = e;\n}\n/**\n * Get the environment of execution.\n *\n * @returns An object containing environment specific implementations.\n */\n\n\nfunction getEnvironment() {\n  if (environment) {\n    return environment;\n  } else {\n    throw new Error(\"Cannot get environment before it's set\");\n  }\n} ////////////////////////////////////////////////////////////////////////////\n//\n// Copyright 2020 Realm Inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n// http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n//\n////////////////////////////////////////////////////////////////////////////\n\n\nvar LOWERCASE_LETTERS = \"abcdefghijklmnopqrstuvwxyz\";\nvar CLOSE_CHECK_INTERVAL = 100; // 10 times per second\n\n/* eslint-disable @typescript-eslint/camelcase */\n\nvar REDIRECT_HASH_TO_RESULT = {\n  _stitch_client_app_id: \"appId\",\n  _baas_client_app_id: \"appId\",\n  _stitch_ua: \"userAuth\",\n  _baas_ua: \"userAuth\",\n  _stitch_link: \"link\",\n  _baas_link: \"link\",\n  _stitch_error: \"error\",\n  _baas_error: \"error\",\n  _stitch_state: \"state\",\n  _baas_state: \"state\"\n};\n/* eslint-enable @typescript-eslint/camelcase */\n\n/**\n * A collection of methods helping implement the OAuth2 flow.\n */\n\nvar OAuth2Helper = /*#__PURE__*/function () {\n  /**\n   * Construct a helper implementing the OAuth2 flow.\n   *\n   * @param storage The underlying storage to use when storing and retriving secrets.\n   * @param getAppUrl Call this to determine the app url.\n   * @param openWindow An optional function called when a browser window needs to open.\n   */\n  function OAuth2Helper(storage, getAppUrl) {\n    var openWindow = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : getEnvironment().openWindow;\n\n    _classCallCheck(this, OAuth2Helper);\n\n    this.storage = storage.prefix(\"oauth2\");\n    this.getAppUrl = getAppUrl;\n    this.openWindow = openWindow;\n  }\n  /**\n   * Parses the query string from the final step of the OAuth flow.\n   *\n   * @param queryString The query string passed through in location.hash.\n   * @returns The result of the OAuth flow.\n   */\n\n\n  _createClass(OAuth2Helper, [{\n    key: \"initiate\",\n\n    /**\n     * Initiates the flow by opening a browser window.\n     *\n     * @param credentials A set of OAuth2 credentials with a redirectUrl in its payload.\n     * @returns The secret.\n     */\n    value: function () {\n      var _initiate = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee15(credentials) {\n        var _this2 = this;\n\n        var state, stateStorage, url;\n        return _regeneratorRuntime.wrap(function _callee15$(_context15) {\n          while (1) {\n            switch (_context15.prev = _context15.next) {\n              case 0:\n                // TODO: Implement a timeout and an option to cancel.\n                state = this.generateState();\n                stateStorage = this.getStateStorage(state);\n                _context15.next = 4;\n                return this.generateOAuth2Url(credentials, state);\n\n              case 4:\n                url = _context15.sent;\n                return _context15.abrupt(\"return\", new Promise(function (resolve, reject) {\n                  var redirectWindow = null; // We're declaring the interval now to enable referencing before its initialized\n\n                  var windowClosedInterval; // eslint-disable-line prefer-const\n\n                  var handleStorageUpdate = function handleStorageUpdate() {\n                    // Trying to get the secret from storage\n                    var result = stateStorage.get(\"result\");\n\n                    if (result) {\n                      var parsedResult = JSON.parse(result); // The secret got updated!\n\n                      stateStorage.removeListener(handleStorageUpdate); // Clear the storage to prevent others from reading this\n\n                      stateStorage.clear(); // Try closing the newly created window\n\n                      try {\n                        if (redirectWindow) {\n                          // Stop checking if the window closed\n                          clearInterval(windowClosedInterval);\n                          redirectWindow.close();\n                        }\n                      } catch (err) {\n                        console.warn(\"Failed closing redirect window: \".concat(err));\n                      } finally {\n                        resolve(parsedResult);\n                      }\n                    }\n                  }; // Add a listener to the state storage, awaiting an update to the secret\n\n\n                  stateStorage.addListener(handleStorageUpdate); // Open up a window\n\n                  redirectWindow = _this2.openWindow(url); // No using a const, because we need the two listeners to reference each other when removing the other.\n\n                  windowClosedInterval = setInterval(function () {\n                    if (redirectWindow && redirectWindow.closed) {\n                      clearInterval(windowClosedInterval); // Stop listening for changes to the storage\n\n                      stateStorage.removeListener(handleStorageUpdate); // Reject the promise\n\n                      var _err = new Error(\"Window closed\");\n\n                      reject(_err);\n                    }\n                  }, CLOSE_CHECK_INTERVAL);\n                }));\n\n              case 6:\n              case \"end\":\n                return _context15.stop();\n            }\n          }\n        }, _callee15, this);\n      }));\n\n      function initiate(_x13) {\n        return _initiate.apply(this, arguments);\n      }\n\n      return initiate;\n    }()\n    /**\n     * Generate the URL to which the user should be redirected to initiate the OAuth2 flow.\n     *\n     * @param credentials A set of OAuth2 credentials with a redirectUrl in its payload.\n     * @param state A random state, used to track the request throughout the flow, avoiding CSRF attacks.\n     * @returns A URL to redirect the user to.\n     */\n\n  }, {\n    key: \"generateOAuth2Url\",\n    value: function () {\n      var _generateOAuth2Url = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee16(credentials, state) {\n        var redirectUrl, appUrl, qs;\n        return _regeneratorRuntime.wrap(function _callee16$(_context16) {\n          while (1) {\n            switch (_context16.prev = _context16.next) {\n              case 0:\n                redirectUrl = credentials.payload.redirectUrl;\n                _context16.next = 3;\n                return this.getAppUrl();\n\n              case 3:\n                appUrl = _context16.sent;\n                qs = encodeQueryString({\n                  redirect: redirectUrl,\n                  state: state\n                });\n                return _context16.abrupt(\"return\", \"\".concat(appUrl, \"/auth/providers/\").concat(credentials.providerName, \"/login?\").concat(qs));\n\n              case 6:\n              case \"end\":\n                return _context16.stop();\n            }\n          }\n        }, _callee16, this);\n      }));\n\n      function generateOAuth2Url(_x14, _x15) {\n        return _generateOAuth2Url.apply(this, arguments);\n      }\n\n      return generateOAuth2Url;\n    }()\n    /**\n     * Handle a redirect.\n     *\n     * @param result The result from parsing the OAuth 2.0 redirect URL.\n     */\n\n  }, {\n    key: \"handleRedirect\",\n    value: function handleRedirect(result) {\n      var state = result.state,\n          error = result.error;\n\n      if (typeof state === \"string\") {\n        var storage = this.getStateStorage(state);\n        storage.set(\"result\", JSON.stringify(result));\n      } else if (error) {\n        throw new Error(\"Failed to handle OAuth 2.0 redirect: \".concat(error));\n      } else {\n        throw new Error(\"Failed to handle OAuth 2.0 redirect.\");\n      }\n    }\n    /**\n     * Generate a random state string.\n     *\n     * @returns The random state string.\n     */\n\n  }, {\n    key: \"generateState\",\n    value: function generateState() {\n      return generateRandomString(12, LOWERCASE_LETTERS);\n    }\n    /**\n     * Get the storage key associated of an secret associated with a state.\n     *\n     * @param state The random state.\n     * @returns The storage associated with a particular state.\n     */\n\n  }, {\n    key: \"getStateStorage\",\n    value: function getStateStorage(state) {\n      return this.storage.prefix(\"state(\".concat(state, \")\"));\n    }\n  }], [{\n    key: \"parseRedirectLocation\",\n    value: function parseRedirectLocation(queryString) {\n      var params = decodeQueryString(queryString);\n      var result = {};\n\n      for (var _i2 = 0, _Object$entries2 = Object.entries(REDIRECT_HASH_TO_RESULT); _i2 < _Object$entries2.length; _i2++) {\n        var _Object$entries2$_i = _slicedToArray(_Object$entries2[_i2], 2),\n            p = _Object$entries2$_i[0],\n            r = _Object$entries2$_i[1];\n\n        var value = params[p];\n\n        if (value) {\n          result[r] = value;\n        }\n      }\n\n      return result;\n    }\n    /**\n     * Handle the redirect querystring by parsing it and storing it for others to consume.\n     *\n     * @param queryString The query string containing the encoded result from the OAuth provider.\n     * @param storage The underlying storage used to persist the result.\n     */\n\n  }, {\n    key: \"handleRedirect\",\n    value: function handleRedirect(queryString) {\n      var storage = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : getEnvironment().defaultStorage;\n      var helper = new OAuth2Helper(storage, /*#__PURE__*/_asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee17() {\n        return _regeneratorRuntime.wrap(function _callee17$(_context17) {\n          while (1) {\n            switch (_context17.prev = _context17.next) {\n              case 0:\n                throw new Error(\"This instance cannot be used to initiate a flow\");\n\n              case 1:\n              case \"end\":\n                return _context17.stop();\n            }\n          }\n        }, _callee17);\n      })));\n      var result = OAuth2Helper.parseRedirectLocation(queryString);\n      helper.handleRedirect(result);\n    }\n    /**\n     * Decodes the authInfo string into its seperate parts.\n     *\n     * @param authInfo An authInfo string returned from the server.\n     * @returns An object containing the separate parts of the authInfo string.\n     */\n\n  }, {\n    key: \"decodeAuthInfo\",\n    value: function decodeAuthInfo(authInfo) {\n      var parts = (authInfo || \"\").split(\"$\");\n\n      if (parts.length === 4) {\n        var _parts = _slicedToArray(parts, 4),\n            accessToken = _parts[0],\n            refreshToken = _parts[1],\n            userId = _parts[2],\n            deviceId = _parts[3];\n\n        return {\n          accessToken: accessToken,\n          refreshToken: refreshToken,\n          userId: userId,\n          deviceId: deviceId\n        };\n      } else {\n        throw new Error(\"Failed to decode 'authInfo' into ids and tokens\");\n      }\n    }\n  }]);\n\n  return OAuth2Helper;\n}(); ////////////////////////////////////////////////////////////////////////////\n\n/**\n * MongoDB Realm App\n */\n\n\nvar App = /*#__PURE__*/function () {\n  /**\n   * Construct a Realm App, either from the Realm App id visible from the MongoDB Realm UI or a configuration.\n   *\n   * @param idOrConfiguration The Realm App id or a configuration to use for this app.\n   */\n  function App(idOrConfiguration) {\n    var _this3 = this;\n\n    _classCallCheck(this, App);\n\n    /**\n     * An array of active and logged-out users.\n     * Elements in the beginning of the array is considered more recent than the later elements.\n     */\n    this.users = []; // If the argument is a string, convert it to a simple configuration object.\n\n    var configuration = typeof idOrConfiguration === \"string\" ? {\n      id: idOrConfiguration\n    } : idOrConfiguration; // Initialize properties from the configuration\n\n    if (typeof configuration === \"object\" && typeof configuration.id === \"string\") {\n      this.id = configuration.id;\n    } else {\n      throw new Error(\"Missing a MongoDB Realm app-id\");\n    }\n\n    var transport = configuration.transport,\n        storage = configuration.storage,\n        baseUrl = configuration.baseUrl,\n        _configuration$fetchL = configuration.fetchLocation,\n        fetchLocation = _configuration$fetchL === void 0 ? true : _configuration$fetchL; // Construct the various transports\n\n    this.baseTransport = new BaseTransport(transport, baseUrl || App.DEFAULT_BASE_URL, fetchLocation ? this : undefined);\n    this.appTransport = this.baseTransport.prefix(\"/app/\".concat(this.id));\n    var authTransport = new AuthenticatedTransport(this.appTransport, this); // Construct the functions factory\n\n    this.functions = FunctionsFactory.create(authTransport); // Construct the services factory\n\n    this.services = create(authTransport); // Construct the auth providers\n\n    this.emailPasswordAuth = new EmailPasswordAuth(authTransport); // Construct the storage\n\n    var baseStorage = storage || getEnvironment().defaultStorage;\n    this.storage = new AppStorage(baseStorage, this.id); // Constructing the oauth2 helper, passing in the baseStorage to avoid an app scope.\n\n    this.oauth2 = new OAuth2Helper(baseStorage, /*#__PURE__*/_asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee18() {\n      var baseUrl;\n      return _regeneratorRuntime.wrap(function _callee18$(_context18) {\n        while (1) {\n          switch (_context18.prev = _context18.next) {\n            case 0:\n              _context18.next = 2;\n              return _this3.baseTransport.determineBaseUrl(false);\n\n            case 2:\n              baseUrl = _context18.sent;\n              return _context18.abrupt(\"return\", \"\".concat(baseUrl, \"/app/\").concat(_this3.id));\n\n            case 4:\n            case \"end\":\n              return _context18.stop();\n          }\n        }\n      }, _callee18);\n    }))); // Hydrate the app state from storage\n\n    this.hydrate();\n  }\n  /**\n   * Switch user\n   *\n   * @param nextUser The user or id of the user to switch to\n   */\n\n\n  _createClass(App, [{\n    key: \"switchUser\",\n    value: function switchUser(nextUser) {\n      var index = this.users.findIndex(function (u) {\n        return u === nextUser;\n      });\n\n      if (index === -1) {\n        throw new Error(\"The user was never logged into this app\");\n      } // Remove the user from the stack\n\n\n      var _this$users$splice = this.users.splice(index, 1),\n          _this$users$splice2 = _slicedToArray(_this$users$splice, 1),\n          user = _this$users$splice2[0]; // Insert the user in the beginning of the stack\n\n\n      this.users.unshift(user);\n    }\n    /**\n     * Log in a user\n     *\n     * @param credentials Credentials to use when logging in\n     * @param fetchProfile Should the users profile be fetched? (default: true)\n     */\n\n  }, {\n    key: \"logIn\",\n    value: function () {\n      var _logIn2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee19(credentials) {\n        var fetchProfile,\n            user,\n            _args19 = arguments;\n        return _regeneratorRuntime.wrap(function _callee19$(_context19) {\n          while (1) {\n            switch (_context19.prev = _context19.next) {\n              case 0:\n                fetchProfile = _args19.length > 1 && _args19[1] !== undefined ? _args19[1] : true;\n                _context19.next = 3;\n                return this.performLogIn(credentials);\n\n              case 3:\n                user = _context19.sent;\n                // Let's ensure this will be the current user, in case the user object was reused.\n                this.switchUser(user); // If neeeded, fetch and set the profile on the user\n\n                if (!fetchProfile) {\n                  _context19.next = 8;\n                  break;\n                }\n\n                _context19.next = 8;\n                return user.refreshProfile();\n\n              case 8:\n                // Persist the user id in the storage,\n                // merging to avoid overriding logins from other apps using the same underlying storage\n                this.storage.setUserIds(this.users.map(function (u) {\n                  return u.id;\n                }), true); // Return the user\n\n                return _context19.abrupt(\"return\", user);\n\n              case 10:\n              case \"end\":\n                return _context19.stop();\n            }\n          }\n        }, _callee19, this);\n      }));\n\n      function logIn(_x16) {\n        return _logIn2.apply(this, arguments);\n      }\n\n      return logIn;\n    }()\n    /**\n     * @inheritdoc\n     */\n\n  }, {\n    key: \"removeUser\",\n    value: function () {\n      var _removeUser = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee20(user) {\n        var index;\n        return _regeneratorRuntime.wrap(function _callee20$(_context20) {\n          while (1) {\n            switch (_context20.prev = _context20.next) {\n              case 0:\n                // Remove the user from the list of users\n                index = this.users.findIndex(function (u) {\n                  return u === user;\n                });\n\n                if (!(index === -1)) {\n                  _context20.next = 3;\n                  break;\n                }\n\n                throw new Error(\"The user was never logged into this app\");\n\n              case 3:\n                this.users.splice(index, 1); // Log out the user - this removes access and refresh tokens from storage\n\n                _context20.next = 6;\n                return user.logOut();\n\n              case 6:\n                // Remove the users profile from storage\n                this.storage.remove(\"user(\".concat(user.id, \"):profile\")); // Remove the user from the storage\n\n                this.storage.removeUserId(user.id);\n\n              case 8:\n              case \"end\":\n                return _context20.stop();\n            }\n          }\n        }, _callee20, this);\n      }));\n\n      function removeUser(_x17) {\n        return _removeUser.apply(this, arguments);\n      }\n\n      return removeUser;\n    }()\n    /**\n     * The currently active user (or null if no active users exists)\n     *\n     * @returns the currently active user or null.\n     */\n\n  }, {\n    key: \"performLogIn\",\n\n    /**\n     * Perform the actual login, based on the credentials.\n     * Either it decodes the credentials and instantiates a user directly or it calls User.logIn to perform a fetch.\n     *\n     * @param credentials Credentials to use when logging in\n     */\n    value: function () {\n      var _performLogIn3 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee21(credentials) {\n        var result, _OAuth2Helper$decodeA, userId, accessToken, refreshToken, _yield$_performLogIn, id, _accessToken, _refreshToken;\n\n        return _regeneratorRuntime.wrap(function _callee21$(_context21) {\n          while (1) {\n            switch (_context21.prev = _context21.next) {\n              case 0:\n                if (!(credentials.providerType.startsWith(\"oauth2\") && typeof credentials.payload.redirectUrl === \"string\")) {\n                  _context21.next = 8;\n                  break;\n                }\n\n                _context21.next = 3;\n                return this.oauth2.initiate(credentials);\n\n              case 3:\n                result = _context21.sent;\n                _OAuth2Helper$decodeA = OAuth2Helper.decodeAuthInfo(result.userAuth), userId = _OAuth2Helper$decodeA.userId, accessToken = _OAuth2Helper$decodeA.accessToken, refreshToken = _OAuth2Helper$decodeA.refreshToken;\n                return _context21.abrupt(\"return\", this.createOrUpdateUser(userId, accessToken, refreshToken));\n\n              case 8:\n                _context21.next = 10;\n                return _performLogIn2(this, credentials);\n\n              case 10:\n                _yield$_performLogIn = _context21.sent;\n                id = _yield$_performLogIn.id;\n                _accessToken = _yield$_performLogIn.accessToken;\n                _refreshToken = _yield$_performLogIn.refreshToken;\n                return _context21.abrupt(\"return\", this.createOrUpdateUser(id, _accessToken, _refreshToken));\n\n              case 15:\n              case \"end\":\n                return _context21.stop();\n            }\n          }\n        }, _callee21, this);\n      }));\n\n      function performLogIn(_x18) {\n        return _performLogIn3.apply(this, arguments);\n      }\n\n      return performLogIn;\n    }()\n    /**\n     * Create (and store) a new user or update an existing user's access and refresh tokens.\n     * This helps de-duplicating users in the list of users known to the app.\n     *\n     * @param userId The id of the user.\n     * @param accessToken The new access token of the user.\n     * @param refreshToken The new refresh token of the user.\n     * @returns A new or an existing user.\n     */\n\n  }, {\n    key: \"createOrUpdateUser\",\n    value: function createOrUpdateUser(userId, accessToken, refreshToken) {\n      var existingUser = this.users.find(function (u) {\n        return u.id === userId;\n      });\n\n      if (existingUser) {\n        // Update the users access and refresh tokens\n        existingUser.accessToken = accessToken;\n        existingUser.refreshToken = refreshToken;\n        return existingUser;\n      } else {\n        // Create and store a new user\n        var user = new User({\n          app: this,\n          id: userId,\n          accessToken: accessToken,\n          refreshToken: refreshToken\n        });\n        this.users.unshift(user);\n        return user;\n      }\n    }\n    /**\n     * Restores the state of the app (active and logged-out users) from the storage\n     */\n\n  }, {\n    key: \"hydrate\",\n    value: function hydrate() {\n      var _this4 = this;\n\n      try {\n        var userIds = this.storage.getUserIds();\n        this.users = userIds.map(function (id) {\n          return User.hydrate(_this4, id);\n        });\n      } catch (err) {\n        // The storage was corrupted\n        this.storage.clear();\n        throw err;\n      }\n    }\n  }, {\n    key: \"currentUser\",\n    get: function get() {\n      var activeUsers = this.users.filter(function (user) {\n        return user.state === UserState.Active;\n      });\n\n      if (activeUsers.length === 0) {\n        return null;\n      } else {\n        // Current user is the top of the stack\n        return activeUsers[0];\n      }\n    }\n    /**\n     * All active and logged-out users:\n     *  - First in the list are active users (ordered by most recent call to switchUser or login)\n     *  - Followed by logged out users (also ordered by most recent call to switchUser or login).\n     *\n     * @returns An array of users active or loggedout users (current user being the first).\n     */\n\n  }, {\n    key: \"allUsers\",\n    get: function get() {\n      // We need to peek into refresh tokens to avoid cyclic code\n      var activeUsers = this.users.filter(function (user) {\n        return user.refreshToken !== null;\n      });\n      var loggedOutUsers = this.users.filter(function (user) {\n        return user.refreshToken === null;\n      }); // Returning a freezed copy of the list of users to prevent outside changes\n\n      return Object.freeze([].concat(_toConsumableArray(activeUsers), _toConsumableArray(loggedOutUsers)));\n    }\n    /**\n     * Get the location metadata of an app.\n     *\n     * @returns A promise of the app's location metadata.\n     */\n\n  }, {\n    key: \"location\",\n    get: function get() {\n      // Initiate the fetch of the location metadata only once per app instance.\n      if (!this._location) {\n        this._location = this.baseTransport.fetch({\n          method: \"GET\",\n          path: \"/app/\".concat(this.id, \"/location\"),\n          ignoreLocation: true\n        });\n      }\n\n      return this._location;\n    }\n  }]);\n\n  return App;\n}();\n/**\n * Instances of this class can be passed to the `app.logIn` method to authenticate an end-user.\n */\n\n\nApp.Credentials = Credentials;\n/**\n * Default base url to prefix all requests if no baseUrl is specified in the configuration.\n */\n\nApp.DEFAULT_BASE_URL = \"https://stitch.mongodb.com\"; ////////////////////////////////////////////////////////////////////////////\n\nvar appCache = {};\n/**\n * Get or create a singleton Realm App from an id.\n *\n * @param id The Realm App id visible from the MongoDB Realm UI or a configuration.\n * @returns The Realm App instance. Calling this function multiple times with the same id will return the same instance.\n */\n\nfunction getApp(id) {\n  if (id in appCache) {\n    return appCache[id];\n  } else {\n    var instance = new App(id);\n    appCache[id] = instance;\n    return instance;\n  }\n} ////////////////////////////////////////////////////////////////////////////\n\n/**\n * In-memory storage that will not be persisted.\n */\n\n\nvar LocalStorage = /*#__PURE__*/function () {\n  /**\n   * Constructs a LocalStorage using the global window.\n   */\n  function LocalStorage() {\n    _classCallCheck(this, LocalStorage);\n\n    if (typeof window === \"object\") {\n      this.window = window;\n    } else {\n      throw new Error(\"Cannot use LocalStorage without a global window object\");\n    }\n  }\n  /** @inheritdoc */\n\n\n  _createClass(LocalStorage, [{\n    key: \"get\",\n    value: function get(key) {\n      return this.window.localStorage.getItem(key);\n    }\n    /** @inheritdoc */\n\n  }, {\n    key: \"set\",\n    value: function set(key, value) {\n      return this.window.localStorage.setItem(key, value);\n    }\n    /** @inheritdoc */\n\n  }, {\n    key: \"remove\",\n    value: function remove(key) {\n      return this.window.localStorage.removeItem(key);\n    }\n    /** @inheritdoc */\n\n  }, {\n    key: \"prefix\",\n    value: function prefix(keyPart) {\n      return new PrefixedStorage(this, keyPart);\n    }\n    /** @inheritdoc */\n\n  }, {\n    key: \"clear\",\n    value: function clear(prefix) {\n      var keys = []; // Iterate all keys to find the once have a matching prefix.\n\n      for (var i = 0; i < this.window.localStorage.length; i++) {\n        var key = this.window.localStorage.key(i);\n\n        if (key && (!prefix || key.startsWith(prefix))) {\n          keys.push(key);\n        }\n      } // Remove the items in a seperate loop to avoid updating while iterating.\n\n\n      for (var _i3 = 0, _keys = keys; _i3 < _keys.length; _i3++) {\n        var _key4 = _keys[_i3];\n        this.window.localStorage.removeItem(_key4);\n      }\n    }\n    /** @inheritdoc */\n\n  }, {\n    key: \"addListener\",\n    value: function addListener(listener) {\n      return this.window.addEventListener(\"storage\", listener);\n    }\n    /** @inheritdoc */\n\n  }, {\n    key: \"removeListener\",\n    value: function removeListener(listener) {\n      return this.window.removeEventListener(\"storage\", listener);\n    }\n  }]);\n\n  return LocalStorage;\n}(); ////////////////////////////////////////////////////////////////////////////\n\n\nvar environment$1 = {\n  defaultStorage: new LocalStorage().prefix(\"realm-web\"),\n  openWindow: function openWindow(url) {\n    return window.open(url);\n  }\n};\nsetEnvironment(environment$1);\n/**\n * Handle an OAuth 2.0 redirect.\n *\n * @param location An optional location to use (defaults to the windows current location).\n * @param storage Optional storage used to save any results from the location.\n */\n\nfunction handleAuthRedirect() {\n  var location = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : window.location;\n  var storage = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : environment$1.defaultStorage;\n\n  try {\n    var queryString = location.hash.substr(1); // Strip the initial # from the hash\n\n    OAuth2Helper.handleRedirect(queryString, storage);\n  } catch (err) {\n    // Ensure calling this never throws: It should not interrupt a users flow.\n    console.warn(err);\n  }\n}\n\nexport { App, Credentials, LocalStorage, MongoDBRealmError, User, UserState, UserType$1 as UserType, getApp, getEnvironment, handleAuthRedirect, _performLogIn2 as performLogIn, setEnvironment };","map":{"version":3,"sources":["/Users/berkakgun/Desktop/ttk/ttkui/node_modules/realm-web/dist/bundle.dom.es.js"],"names":["EJSON","serialize","obj","deserialize","Array","isArray","map","doc","RESERVED_NAMES","cleanArgs","args","arg","Object","entries","key","value","undefined","cleanArgsAndSerialize","cleaned","FunctionsFactory","transport","config","serviceName","argsTransformation","responseTransformation","name","body","arguments","service","fetch","method","path","response","factory","Proxy","get","target","p","receiver","indexOf","callFunction","bind","prop","Reflect","commonjsGlobal","globalThis","window","global","self","createCommonjsModule","fn","basedir","module","exports","require","base","commonjsRequire","Error","base64","_Base64","Base64","version","b64chars","b64tab","bin","t","i","l","length","charAt","fromCharCode","String","cb_utob","c","cc","charCodeAt","re_utob","utob","u","replace","cb_encode","ccc","padlen","ord","chars","join","btoa","b","match","RangeError","_encode","mkUriSafe","b64","m0","encode","urisafe","encodeURI","fromUint8Array","Uint8Array","a","a0","a1","a2","re_btou","cb_btou","cccc","cp","offset","btou","cb_decode","len","n","_atob","atob","_decode","_fromURI","decode","toUint8Array","from","noConflict","VERSION","fromBase64","toBase64","defineProperty","noEnum","v","enumerable","writable","configurable","extendString","prototype","PrefixedTransport","pathPrefix","request","prefixedRequest","AppTransport","appId","restOfRequest","MongoDBRealmError","url","statusCode","statusText","error","statusSummary","errorCode","error_code","link","DefaultNetworkTransport","AbortController","contentType","headers","ok","startsWith","json","status","message","handler","then","text","decodedBody","responseHeaders","forEach","r","onSuccess","catch","e","onError","timeoutMs","DEFAULT_HEADERS","createTimeoutSignal","signal","cancelTimeout","JSON","stringify","controller","timeout","setTimeout","abort","clearTimeout","Accept","BaseTransport","networkTransport","baseUrl","locationContext","baseRoute","DEFAULT_BASE_ROUTE","ignoreLocation","determineBaseUrl","fetchAndParse","location","hostname","AuthenticatedTransport","userContext","user","currentUser","retries","tokenType","rest","buildAuthorizationHeader","refreshAccessToken","prefixedTransport","prefix","Authorization","accessToken","refreshToken","UserType","DataKey","DATA_MAPPING","NAME","EMAIL","PICTURE","FIRST_NAME","LAST_NAME","GENDER","BIRTHDAY","MIN_AGE","MAX_AGE","UserProfile","type","Normal","identities","identity","id","providerId","providerType","data","propertyName","PrefixedStorage","storage","keyPart","PART_SEPARATOR","set","remove","clear","listener","addListener","ACCESS_TOKEN_STORAGE_KEY","REFRESH_TOKEN_STORAGE_KEY","PROFILE_STORAGE_KEY","UserStorage","userId","profile","assign","parse","EmailPasswordAuth","providerName","email","password","token","tokenId","ApiKeyAuth","keyId","UserState","UserType$1","performLogIn","app","credentials","appTransport","payload","user_id","access_token","refresh_token","User","_id","_accessToken","_refreshToken","baseTransport","apiKeys","functions","create","_profile","customData","parts","split","encodedPayload","decodedPayload","parsedPayload","expires","exp","issuedAt","iat","user_data","userData","allUsers","Removed","LoggedOut","Active","decodedToken","decodeAccessToken","hydrate","Credentials","username","redirectUrlOrAuthCode","includes","redirectUrl","authCode","redirectUrlOrAccessToken","redirectUrlOrIdToken","id_token","MongoDBCollection","databaseName","collectionName","filter","options","find","database","collection","query","project","projection","sort","limit","findOne","update","findOneAndUpdate","upsert","returnNewDocument","replacement","findOneAndReplace","pipeline","aggregate","count","document","insertOne","documents","insertMany","deleteOne","deleteMany","updateOne","updateMany","createCollection","createDatabase","createService","db","HTTPService","post","put","delete","head","patch","createService$1","mongodb","http","USER_IDS_STORAGE_KEY","AppStorage","userIdsString","userIds","Set","err","mergeWithExisting","existingIds","getUserIds","push","setUserIds","generateRandomString","alphabet","result","Math","floor","random","encodeQueryString","params","k","encodeURIComponent","decodeQueryString","str","fromEntries","kvp","decodeURIComponent","environment","setEnvironment","getEnvironment","LOWERCASE_LETTERS","CLOSE_CHECK_INTERVAL","REDIRECT_HASH_TO_RESULT","_stitch_client_app_id","_baas_client_app_id","_stitch_ua","_baas_ua","_stitch_link","_baas_link","_stitch_error","_baas_error","_stitch_state","_baas_state","OAuth2Helper","getAppUrl","openWindow","state","generateState","stateStorage","getStateStorage","generateOAuth2Url","Promise","resolve","reject","redirectWindow","windowClosedInterval","handleStorageUpdate","parsedResult","removeListener","clearInterval","close","console","warn","setInterval","closed","appUrl","qs","redirect","queryString","defaultStorage","helper","parseRedirectLocation","handleRedirect","authInfo","deviceId","App","idOrConfiguration","users","configuration","fetchLocation","DEFAULT_BASE_URL","authTransport","services","emailPasswordAuth","baseStorage","oauth2","nextUser","index","findIndex","splice","unshift","fetchProfile","switchUser","refreshProfile","logOut","removeUserId","initiate","decodeAuthInfo","userAuth","createOrUpdateUser","existingUser","activeUsers","loggedOutUsers","freeze","_location","appCache","getApp","instance","LocalStorage","localStorage","getItem","setItem","removeItem","keys","addEventListener","removeEventListener","environment$1","open","handleAuthRedirect","hash","substr"],"mappings":";;;;;;;;;;;;;;;;;AAAA,SAASA,KAAT,QAAsB,MAAtB,C,CAEA;;AACA;;;;;;;AAMA,SAASC,SAAT,CAAmBC,GAAnB,EAAwB;AACpB,SAAOF,KAAK,CAACC,SAAN,CAAgBC,GAAhB,CAAP;AACH;AACD;;;;;;;;AAMA,SAASC,WAAT,CAAqBD,GAArB,EAA0B;AACtB,MAAIE,KAAK,CAACC,OAAN,CAAcH,GAAd,CAAJ,EAAwB;AACpB,WAAOA,GAAG,CAACI,GAAJ,CAAQ,UAAAC,GAAG;AAAA,aAAIP,KAAK,CAACG,WAAN,CAAkBI,GAAlB,CAAJ;AAAA,KAAX,CAAP;AACH,GAFD,MAGK;AACD,WAAOP,KAAK,CAACG,WAAN,CAAkBD,GAAlB,CAAP;AACH;AACJ,C,CAED;;AACA;;;;;AAGA,IAAMM,cAAc,GAAG,CAAC,SAAD,EAAY,cAAZ,CAAvB;AACA;;;;;;;AAMA,SAASC,SAAT,CAAmBC,IAAnB,EAAyB;AAAA,6CACHA,IADG;AAAA;;AAAA;AACrB,wDAAwB;AAAA,UAAbC,GAAa;;AACpB,UAAI,OAAOA,GAAP,KAAe,QAAnB,EAA6B;AACzB,2CAA2BC,MAAM,CAACC,OAAP,CAAeF,GAAf,CAA3B,qCAAgD;AAAA;AAAA,cAApCG,GAAoC;AAAA,cAA/BC,KAA+B;;AAC5C,cAAIA,KAAK,KAAKC,SAAd,EAAyB;AACrB,mBAAOL,GAAG,CAACG,GAAD,CAAV;AACH;AACJ;AACJ;AACJ;AAToB;AAAA;AAAA;AAAA;AAAA;;AAUrB,SAAOJ,IAAP;AACH;AACD;;;;;;;;AAMA,SAASO,qBAAT,CAA+BP,IAA/B,EAAqC;AACjC,MAAMQ,OAAO,GAAGT,SAAS,CAACC,IAAD,CAAzB;AACA,SAAOQ,OAAO,CAACZ,GAAR,CAAY,UAAAK,GAAG;AAAA,WAAK,OAAOA,GAAP,KAAe,QAAf,GAA0BV,SAAS,CAACU,GAAD,CAAnC,GAA2CA,GAAhD;AAAA,GAAf,CAAP;AACH;AACD;;;;;IAGMQ,gB;AACF;;;;;;AAMA,4BAAYC,SAAZ,EAAoC;AAAA,QAAbC,MAAa,uEAAJ,EAAI;;AAAA;;AAChC,SAAKD,SAAL,GAAiBA,SAAjB;AACA,SAAKE,WAAL,GAAmBD,MAAM,CAACC,WAA1B;AACA,SAAKC,kBAAL,GACIF,MAAM,CAACE,kBAAP,IAA6BN,qBADjC;AAEA,SAAKO,sBAAL,GACIH,MAAM,CAACG,sBAAP,IAAiCrB,WADrC;AAEH;AACD;;;;;;;;;;;;AA0BA;;;;;;;;oGAOmBsB,I;;;;;;;;;;;;0CAASf,I;AAAAA,kBAAAA,I;;;AACxB;AACMgB,gBAAAA,I,GAAO;AACTD,kBAAAA,IAAI,EAAJA,IADS;AAETE,kBAAAA,SAAS,EAAE,KAAKJ,kBAAL,GACL,KAAKA,kBAAL,CAAwBb,IAAxB,CADK,GAELA;AAJG,iB;;AAMb,oBAAI,KAAKY,WAAT,EAAsB;AAClBI,kBAAAA,IAAI,CAACE,OAAL,GAAe,KAAKN,WAApB;AACH;;;uBACsB,KAAKF,SAAL,CAAeS,KAAf,CAAqB;AACxCC,kBAAAA,MAAM,EAAE,MADgC;AAExCC,kBAAAA,IAAI,EAAE,iBAFkC;AAGxCL,kBAAAA,IAAI,EAAJA;AAHwC,iBAArB,C;;;AAAjBM,gBAAAA,Q;;qBAMF,KAAKR,sB;;;;;iDACE,KAAKA,sBAAL,CAA4BQ,QAA5B,C;;;iDAGAA,Q;;;;;;;;;;;;;;;;;;2BA/CDZ,S,EAAwB;AAAA,UAAbC,MAAa,uEAAJ,EAAI;AAClC;AACA;AACA,UAAMY,OAAO,GAAG,IAAId,gBAAJ,CAAqBC,SAArB,EAAgCC,MAAhC,CAAhB,CAHkC,CAIlC;;AACA,aAAO,IAAIa,KAAJ,CAAUD,OAAV,EAAmB;AACtBE,QAAAA,GADsB,eAClBC,MADkB,EACVC,CADU,EACPC,QADO,EACG;AACrB,cAAI,OAAOD,CAAP,KAAa,QAAb,IAAyB7B,cAAc,CAAC+B,OAAf,CAAuBF,CAAvB,MAA8B,CAAC,CAA5D,EAA+D;AAC3D,mBAAOD,MAAM,CAACI,YAAP,CAAoBC,IAApB,CAAyBL,MAAzB,EAAiCC,CAAjC,CAAP;AACH,WAFD,MAGK;AACD,gBAAMK,IAAI,GAAGC,OAAO,CAACR,GAAR,CAAYC,MAAZ,EAAoBC,CAApB,EAAuBC,QAAvB,CAAb;AACA,mBAAO,OAAOI,IAAP,KAAgB,UAAhB,GACDA,IAAI,CAACD,IAAL,CAAUL,MAAV,CADC,GAEDM,IAFN;AAGH;AACJ;AAXqB,OAAnB,CAAP;AAaH;;;;;;AAkCL,IAAIE,cAAc,GAAG,OAAOC,UAAP,KAAsB,WAAtB,GAAoCA,UAApC,GAAiD,OAAOC,MAAP,KAAkB,WAAlB,GAAgCA,MAAhC,GAAyC,OAAOC,MAAP,KAAkB,WAAlB,GAAgCA,MAAhC,GAAyC,OAAOC,IAAP,KAAgB,WAAhB,GAA8BA,IAA9B,GAAqC,EAA7L;;AAEA,SAASC,oBAAT,CAA8BC,EAA9B,EAAkCC,OAAlC,EAA2CC,MAA3C,EAAmD;AAClD,SAAOA,MAAM,GAAG;AACdrB,IAAAA,IAAI,EAAEoB,OADQ;AAEdE,IAAAA,OAAO,EAAE,EAFK;AAGdC,IAAAA,OAAO,EAAE,iBAAUvB,IAAV,EAAgBwB,IAAhB,EAAsB;AAC5B,aAAOC,eAAe,CAACzB,IAAD,EAAQwB,IAAI,KAAKvC,SAAT,IAAsBuC,IAAI,KAAK,IAAhC,GAAwCH,MAAM,CAACrB,IAA/C,GAAsDwB,IAA7D,CAAtB;AACD;AALY,GAAT,EAMJL,EAAE,CAACE,MAAD,EAASA,MAAM,CAACC,OAAhB,CANE,EAMwBD,MAAM,CAACC,OANtC;AAOA;;AAED,SAASG,eAAT,GAA4B;AAC3B,QAAM,IAAIC,KAAJ,CAAU,yEAAV,CAAN;AACA;;AAED,IAAIC,MAAM,GAAGT,oBAAoB,CAAC,UAAUG,MAAV,EAAkBC,OAAlB,EAA2B;AAC5D,aAAUN,MAAV,EAAkBd,OAAlB,EAA2B;AACvBmB,IAAAA,MAAM,CAACC,OAAP,GAAiBpB,OAAO,CAACc,MAAD,CAAxB;AAEJ,GAHA,EAIG,OAAOC,IAAP,KAAgB,WAAhB,GAA8BA,IAA9B,GACM,OAAOF,MAAP,KAAkB,WAAlB,GAAgCA,MAAhC,GACA,OAAOF,cAAP,KAA0B,WAA1B,GAAwCA,cAAxC,GACRA,cAPD,EAQE,UAASG,MAAT,EAAiB;AAChB;AACAA,IAAAA,MAAM,GAAGA,MAAM,IAAI,EAAnB;AACA,QAAIY,OAAO,GAAGZ,MAAM,CAACa,MAArB;AACA,QAAIC,OAAO,GAAG,OAAd,CAJgB,CAKhB;;AACA,QAAIC,QAAQ,GACN,kEADN;;AAEA,QAAIC,MAAM,GAAG,UAASC,GAAT,EAAc;AACvB,UAAIC,CAAC,GAAG,EAAR;;AACA,WAAK,IAAIC,CAAC,GAAG,CAAR,EAAWC,CAAC,GAAGH,GAAG,CAACI,MAAxB,EAAgCF,CAAC,GAAGC,CAApC,EAAuCD,CAAC,EAAxC;AAA4CD,QAAAA,CAAC,CAACD,GAAG,CAACK,MAAJ,CAAWH,CAAX,CAAD,CAAD,GAAmBA,CAAnB;AAA5C;;AACA,aAAOD,CAAP;AACH,KAJY,CAIXH,QAJW,CAAb;;AAKA,QAAIQ,YAAY,GAAGC,MAAM,CAACD,YAA1B,CAbgB,CAchB;;AACA,QAAIE,OAAO,GAAG,SAAVA,OAAU,CAASC,CAAT,EAAY;AACtB,UAAIA,CAAC,CAACL,MAAF,GAAW,CAAf,EAAkB;AACd,YAAIM,EAAE,GAAGD,CAAC,CAACE,UAAF,CAAa,CAAb,CAAT;AACA,eAAOD,EAAE,GAAG,IAAL,GAAYD,CAAZ,GACDC,EAAE,GAAG,KAAL,GAAcJ,YAAY,CAAC,OAAQI,EAAE,KAAK,CAAhB,CAAZ,GACEJ,YAAY,CAAC,OAAQI,EAAE,GAAG,IAAd,CAD5B,GAECJ,YAAY,CAAC,OAASI,EAAE,KAAK,EAAR,GAAc,IAAvB,CAAZ,GACGJ,YAAY,CAAC,OAASI,EAAE,KAAM,CAAT,GAAc,IAAvB,CADf,GAEGJ,YAAY,CAAC,OAASI,EAAE,GAAW,IAAvB,CALtB;AAMH,OARD,MAQO;AACH,YAAIA,EAAE,GAAG,UACH,CAACD,CAAC,CAACE,UAAF,CAAa,CAAb,IAAkB,MAAnB,IAA6B,KAD1B,IAEFF,CAAC,CAACE,UAAF,CAAa,CAAb,IAAkB,MAFhB,CAAT;AAGA,eAAQL,YAAY,CAAC,OAASI,EAAE,KAAK,EAAR,GAAc,IAAvB,CAAZ,GACEJ,YAAY,CAAC,OAASI,EAAE,KAAK,EAAR,GAAc,IAAvB,CADd,GAEEJ,YAAY,CAAC,OAASI,EAAE,KAAM,CAAT,GAAc,IAAvB,CAFd,GAGEJ,YAAY,CAAC,OAASI,EAAE,GAAW,IAAvB,CAHtB;AAIH;AACJ,KAlBD;;AAmBA,QAAIE,OAAO,GAAG,+CAAd;;AACA,QAAIC,IAAI,GAAG,SAAPA,IAAO,CAASC,CAAT,EAAY;AACnB,aAAOA,CAAC,CAACC,OAAF,CAAUH,OAAV,EAAmBJ,OAAnB,CAAP;AACH,KAFD;;AAGA,QAAIQ,SAAS,GAAG,SAAZA,SAAY,CAASC,GAAT,EAAc;AAC1B,UAAIC,MAAM,GAAG,CAAC,CAAD,EAAI,CAAJ,EAAO,CAAP,EAAUD,GAAG,CAACb,MAAJ,GAAa,CAAvB,CAAb;AAAA,UACAe,GAAG,GAAGF,GAAG,CAACN,UAAJ,CAAe,CAAf,KAAqB,EAArB,GACC,CAACM,GAAG,CAACb,MAAJ,GAAa,CAAb,GAAiBa,GAAG,CAACN,UAAJ,CAAe,CAAf,CAAjB,GAAqC,CAAtC,KAA4C,CAD7C,IAEEM,GAAG,CAACb,MAAJ,GAAa,CAAb,GAAiBa,GAAG,CAACN,UAAJ,CAAe,CAAf,CAAjB,GAAqC,CAFvC,CADN;AAAA,UAIAS,KAAK,GAAG,CACJtB,QAAQ,CAACO,MAAT,CAAiBc,GAAG,KAAK,EAAzB,CADI,EAEJrB,QAAQ,CAACO,MAAT,CAAiBc,GAAG,KAAK,EAAT,GAAe,EAA/B,CAFI,EAGJD,MAAM,IAAI,CAAV,GAAc,GAAd,GAAoBpB,QAAQ,CAACO,MAAT,CAAiBc,GAAG,KAAK,CAAT,GAAc,EAA9B,CAHhB,EAIJD,MAAM,IAAI,CAAV,GAAc,GAAd,GAAoBpB,QAAQ,CAACO,MAAT,CAAgBc,GAAG,GAAG,EAAtB,CAJhB,CAJR;AAUA,aAAOC,KAAK,CAACC,IAAN,CAAW,EAAX,CAAP;AACH,KAZD;;AAaA,QAAIC,IAAI,GAAGvC,MAAM,CAACuC,IAAP,IAAe,OAAOvC,MAAM,CAACuC,IAAd,IAAsB,UAArC,GACL,UAASC,CAAT,EAAW;AAAE,aAAOxC,MAAM,CAACuC,IAAP,CAAYC,CAAZ,CAAP;AAAuB,KAD/B,GACkC,UAASA,CAAT,EAAY;AACrD,UAAIA,CAAC,CAACC,KAAF,CAAQ,cAAR,CAAJ,EAA6B,MAAM,IAAIC,UAAJ,CAC/B,yCAD+B,CAAN;AAG7B,aAAOF,CAAC,CAACR,OAAF,CAAU,cAAV,EAA0BC,SAA1B,CAAP;AACH,KAND;;AAOA,QAAIU,OAAO,GAAG,SAAVA,OAAU,CAASZ,CAAT,EAAY;AACtB,aAAOQ,IAAI,CAACT,IAAI,CAACN,MAAM,CAACO,CAAD,CAAP,CAAL,CAAX;AACH,KAFD;;AAGA,QAAIa,SAAS,GAAG,SAAZA,SAAY,CAAUC,GAAV,EAAe;AAC3B,aAAOA,GAAG,CAACb,OAAJ,CAAY,QAAZ,EAAsB,UAASc,EAAT,EAAa;AACtC,eAAOA,EAAE,IAAI,GAAN,GAAY,GAAZ,GAAkB,GAAzB;AACH,OAFM,EAEJd,OAFI,CAEI,IAFJ,EAEU,EAFV,CAAP;AAGH,KAJD;;AAKA,QAAIe,MAAM,GAAG,SAATA,MAAS,CAAShB,CAAT,EAAYiB,OAAZ,EAAqB;AAC9B,aAAOA,OAAO,GAAGJ,SAAS,CAACD,OAAO,CAACZ,CAAD,CAAR,CAAZ,GAA2BY,OAAO,CAACZ,CAAD,CAAhD;AACH,KAFD;;AAGA,QAAIkB,SAAS,GAAG,SAAZA,SAAY,CAASlB,CAAT,EAAY;AAAE,aAAOgB,MAAM,CAAChB,CAAD,EAAI,IAAJ,CAAb;AAAwB,KAAtD;;AACA,QAAImB,cAAJ;AACA,QAAIlD,MAAM,CAACmD,UAAX,EAAuBD,cAAc,GAAG,wBAASE,CAAT,EAAYJ,OAAZ,EAAqB;AACzD;AACA,UAAIH,GAAG,GAAG,EAAV;;AACA,WAAK,IAAI1B,CAAC,GAAG,CAAR,EAAWC,CAAC,GAAGgC,CAAC,CAAC/B,MAAtB,EAA8BF,CAAC,GAAGC,CAAlC,EAAqCD,CAAC,IAAI,CAA1C,EAA6C;AACzC,YAAIkC,EAAE,GAAGD,CAAC,CAACjC,CAAD,CAAV;AAAA,YAAemC,EAAE,GAAGF,CAAC,CAACjC,CAAC,GAAC,CAAH,CAArB;AAAA,YAA4BoC,EAAE,GAAGH,CAAC,CAACjC,CAAC,GAAC,CAAH,CAAlC;AACA,YAAIiB,GAAG,GAAGiB,EAAE,IAAI,EAAN,GAAWC,EAAE,IAAI,CAAjB,GAAqBC,EAA/B;AACAV,QAAAA,GAAG,IAAO9B,QAAQ,CAACO,MAAT,CAAiBc,GAAG,KAAK,EAAzB,IACArB,QAAQ,CAACO,MAAT,CAAiBc,GAAG,KAAK,EAAT,GAAe,EAA/B,CADA,IAEF,OAAOkB,EAAP,IAAa,WAAb,GACEvC,QAAQ,CAACO,MAAT,CAAiBc,GAAG,KAAM,CAAV,GAAe,EAA/B,CADF,GACuC,GAHrC,KAIF,OAAOmB,EAAP,IAAa,WAAb,GACExC,QAAQ,CAACO,MAAT,CAAiBc,GAAG,GAAW,EAA/B,CADF,GACuC,GALrC,CAAV;AAMH;;AACD,aAAOY,OAAO,GAAGJ,SAAS,CAACC,GAAD,CAAZ,GAAoBA,GAAlC;AACH,KAdsB,CAvEP,CAsFhB;;AACA,QAAIW,OAAO,GAAG,6EAAd;;AACA,QAAIC,OAAO,GAAG,SAAVA,OAAU,CAASC,IAAT,EAAe;AACzB,cAAOA,IAAI,CAACrC,MAAZ;AACA,aAAK,CAAL;AACI,cAAIsC,EAAE,GAAI,CAAC,OAAOD,IAAI,CAAC9B,UAAL,CAAgB,CAAhB,CAAR,KAA+B,EAAhC,GACC,CAAC,OAAO8B,IAAI,CAAC9B,UAAL,CAAgB,CAAhB,CAAR,KAA+B,EADhC,GAEC,CAAC,OAAO8B,IAAI,CAAC9B,UAAL,CAAgB,CAAhB,CAAR,KAAgC,CAFjC,GAGE,OAAO8B,IAAI,CAAC9B,UAAL,CAAgB,CAAhB,CAHlB;AAAA,cAIAgC,MAAM,GAAGD,EAAE,GAAG,OAJd;AAKA,iBAAQpC,YAAY,CAAC,CAACqC,MAAM,KAAM,EAAb,IAAmB,MAApB,CAAZ,GACErC,YAAY,CAAC,CAACqC,MAAM,GAAG,KAAV,IAAmB,MAApB,CADtB;;AAEJ,aAAK,CAAL;AACI,iBAAOrC,YAAY,CACd,CAAC,OAAOmC,IAAI,CAAC9B,UAAL,CAAgB,CAAhB,CAAR,KAA+B,EAAhC,GACO,CAAC,OAAO8B,IAAI,CAAC9B,UAAL,CAAgB,CAAhB,CAAR,KAA+B,CADtC,GAEQ,OAAO8B,IAAI,CAAC9B,UAAL,CAAgB,CAAhB,CAHA,CAAnB;;AAKJ;AACI,iBAAQL,YAAY,CACf,CAAC,OAAOmC,IAAI,CAAC9B,UAAL,CAAgB,CAAhB,CAAR,KAA+B,CAAhC,GACQ,OAAO8B,IAAI,CAAC9B,UAAL,CAAgB,CAAhB,CAFC,CAApB;AAhBJ;AAqBH,KAtBD;;AAuBA,QAAIiC,IAAI,GAAG,SAAPA,IAAO,CAASrB,CAAT,EAAY;AACnB,aAAOA,CAAC,CAACR,OAAF,CAAUwB,OAAV,EAAmBC,OAAnB,CAAP;AACH,KAFD;;AAGA,QAAIK,SAAS,GAAG,SAAZA,SAAY,CAASJ,IAAT,EAAe;AAC3B,UAAIK,GAAG,GAAGL,IAAI,CAACrC,MAAf;AAAA,UACAc,MAAM,GAAG4B,GAAG,GAAG,CADf;AAAA,UAEAC,CAAC,GAAG,CAACD,GAAG,GAAG,CAAN,GAAU/C,MAAM,CAAC0C,IAAI,CAACpC,MAAL,CAAY,CAAZ,CAAD,CAAN,IAA0B,EAApC,GAAyC,CAA1C,KACGyC,GAAG,GAAG,CAAN,GAAU/C,MAAM,CAAC0C,IAAI,CAACpC,MAAL,CAAY,CAAZ,CAAD,CAAN,IAA0B,EAApC,GAAyC,CAD5C,KAEGyC,GAAG,GAAG,CAAN,GAAU/C,MAAM,CAAC0C,IAAI,CAACpC,MAAL,CAAY,CAAZ,CAAD,CAAN,IAA2B,CAArC,GAAyC,CAF5C,KAGGyC,GAAG,GAAG,CAAN,GAAU/C,MAAM,CAAC0C,IAAI,CAACpC,MAAL,CAAY,CAAZ,CAAD,CAAhB,GAAyC,CAH5C,CAFJ;AAAA,UAMAe,KAAK,GAAG,CACJd,YAAY,CAAEyC,CAAC,KAAK,EAAR,CADR,EAEJzC,YAAY,CAAEyC,CAAC,KAAM,CAAR,GAAa,IAAd,CAFR,EAGJzC,YAAY,CAAEyC,CAAC,GAAW,IAAd,CAHR,CANR;AAWA3B,MAAAA,KAAK,CAAChB,MAAN,IAAgB,CAAC,CAAD,EAAI,CAAJ,EAAO,CAAP,EAAU,CAAV,EAAac,MAAb,CAAhB;AACA,aAAOE,KAAK,CAACC,IAAN,CAAW,EAAX,CAAP;AACH,KAdD;;AAeA,QAAI2B,KAAK,GAAGjE,MAAM,CAACkE,IAAP,IAAe,OAAOlE,MAAM,CAACkE,IAAd,IAAsB,UAArC,GACN,UAASd,CAAT,EAAW;AAAE,aAAOpD,MAAM,CAACkE,IAAP,CAAYd,CAAZ,CAAP;AAAuB,KAD9B,GACiC,UAASA,CAAT,EAAW;AACpD,aAAOA,CAAC,CAACpB,OAAF,CAAU,UAAV,EAAsB8B,SAAtB,CAAP;AACH,KAHD;;AAIA,QAAII,IAAI,GAAG,SAAPA,IAAO,CAASd,CAAT,EAAY;AACnB,aAAOa,KAAK,CAACzC,MAAM,CAAC4B,CAAD,CAAN,CAAUpB,OAAV,CAAkB,mBAAlB,EAAuC,EAAvC,CAAD,CAAZ;AACH,KAFD;;AAGA,QAAImC,OAAO,GAAG,SAAVA,OAAU,CAASf,CAAT,EAAY;AAAE,aAAOS,IAAI,CAACI,KAAK,CAACb,CAAD,CAAN,CAAX;AAAuB,KAAnD;;AACA,QAAIgB,QAAQ,GAAG,SAAXA,QAAW,CAAShB,CAAT,EAAY;AACvB,aAAO5B,MAAM,CAAC4B,CAAD,CAAN,CAAUpB,OAAV,CAAkB,OAAlB,EAA2B,UAASc,EAAT,EAAa;AAC3C,eAAOA,EAAE,IAAI,GAAN,GAAY,GAAZ,GAAkB,GAAzB;AACH,OAFM,EAEJd,OAFI,CAEI,mBAFJ,EAEyB,EAFzB,CAAP;AAGH,KAJD;;AAKA,QAAIqC,MAAM,GAAG,SAATA,MAAS,CAASjB,CAAT,EAAW;AACpB,aAAOe,OAAO,CAACC,QAAQ,CAAChB,CAAD,CAAT,CAAd;AACH,KAFD;;AAGA,QAAIkB,YAAJ;AACA,QAAItE,MAAM,CAACmD,UAAX,EAAuBmB,YAAY,GAAG,sBAASlB,CAAT,EAAY;AAC9C,aAAOD,UAAU,CAACoB,IAAX,CAAgBL,IAAI,CAACE,QAAQ,CAAChB,CAAD,CAAT,CAApB,EAAmC,UAAS1B,CAAT,EAAY;AAClD,eAAOA,CAAC,CAACE,UAAF,CAAa,CAAb,CAAP;AACH,OAFM,CAAP;AAGH,KAJsB;;AAKvB,QAAI4C,UAAU,GAAG,SAAbA,UAAa,GAAW;AACxB,UAAI3D,MAAM,GAAGb,MAAM,CAACa,MAApB;AACAb,MAAAA,MAAM,CAACa,MAAP,GAAgBD,OAAhB;AACA,aAAOC,MAAP;AACH,KAJD,CAvJgB,CA4JhB;;;AACAb,IAAAA,MAAM,CAACa,MAAP,GAAgB;AACZ4D,MAAAA,OAAO,EAAE3D,OADG;AAEZoD,MAAAA,IAAI,EAAEA,IAFM;AAGZ3B,MAAAA,IAAI,EAAEA,IAHM;AAIZmC,MAAAA,UAAU,EAAEL,MAJA;AAKZM,MAAAA,QAAQ,EAAE5B,MALE;AAMZjB,MAAAA,IAAI,EAAEA,IANM;AAOZiB,MAAAA,MAAM,EAAEA,MAPI;AAQZE,MAAAA,SAAS,EAAEA,SARC;AASZY,MAAAA,IAAI,EAAEA,IATM;AAUZQ,MAAAA,MAAM,EAAEA,MAVI;AAWZG,MAAAA,UAAU,EAAEA,UAXA;AAYZtB,MAAAA,cAAc,EAAEA,cAZJ;AAaZoB,MAAAA,YAAY,EAAEA;AAbF,KAAhB,CA7JgB,CA4KhB;;AACA,QAAI,OAAOzG,MAAM,CAAC+G,cAAd,KAAiC,UAArC,EAAiD;AAC7C,UAAIC,MAAM,GAAG,SAATA,MAAS,CAASC,CAAT,EAAW;AACpB,eAAO;AAAC9G,UAAAA,KAAK,EAAC8G,CAAP;AAASC,UAAAA,UAAU,EAAC,KAApB;AAA0BC,UAAAA,QAAQ,EAAC,IAAnC;AAAwCC,UAAAA,YAAY,EAAC;AAArD,SAAP;AACH,OAFD;;AAGAjF,MAAAA,MAAM,CAACa,MAAP,CAAcqE,YAAd,GAA6B,YAAY;AACrCrH,QAAAA,MAAM,CAAC+G,cAAP,CACIpD,MAAM,CAAC2D,SADX,EACsB,YADtB,EACoCN,MAAM,CAAC,YAAY;AAC/C,iBAAOR,MAAM,CAAC,IAAD,CAAb;AACH,SAFqC,CAD1C;AAIAxG,QAAAA,MAAM,CAAC+G,cAAP,CACIpD,MAAM,CAAC2D,SADX,EACsB,UADtB,EACkCN,MAAM,CAAC,UAAU7B,OAAV,EAAmB;AACpD,iBAAOD,MAAM,CAAC,IAAD,EAAOC,OAAP,CAAb;AACH,SAFmC,CADxC;AAIAnF,QAAAA,MAAM,CAAC+G,cAAP,CACIpD,MAAM,CAAC2D,SADX,EACsB,aADtB,EACqCN,MAAM,CAAC,YAAY;AAChD,iBAAO9B,MAAM,CAAC,IAAD,EAAO,IAAP,CAAb;AACH,SAFsC,CAD3C;AAIH,OAbD;AAcH,KA/Le,CAgMhB;AACA;AACA;;;AACA,QAAI/C,MAAM,CAAC,QAAD,CAAV,EAAsB;AAAE;AACpBa,MAAAA,MAAM,GAAGb,MAAM,CAACa,MAAhB;AACH,KArMe,CAsMhB;AACA;;;AACA,QAAKR,MAAM,CAACC,OAAZ,EAAqB;AACjBD,MAAAA,MAAM,CAACC,OAAP,CAAeO,MAAf,GAAwBb,MAAM,CAACa,MAA/B;AACH,KA1Me,CA2MhB;;;AACA,WAAO;AAACA,MAAAA,MAAM,EAAEb,MAAM,CAACa;AAAhB,KAAP;AACH,GArNA,CAAD;AAsNC,CAvNgC,CAAjC,C,CAyNA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA;;;;IAGMuE,iB;AACF;;;;;;AAMA,6BAAY/G,SAAZ,EAAuBgH,UAAvB,EAAmC;AAAA;;AAC/B,SAAKhH,SAAL,GAAiBA,SAAjB;AACA,SAAKgH,UAAL,GAAkBA,UAAlB;AACH;AACD;;;;;0BACMC,O,EAAS;AACX,UAAMC,eAAe,mCACdD,OADc;AAEjBtG,QAAAA,IAAI,YAAK,KAAKqG,UAAV,SAAuBC,OAAO,CAACtG,IAAR,IAAgB,EAAvC;AAFa,QAArB;;AAIA,aAAO,KAAKX,SAAL,CAAeS,KAAf,CAAqByG,eAArB,CAAP;AACH;AACD;;;;2BACOF,U,EAAY;AACf,aAAO,IAAID,iBAAJ,CAAsB,IAAtB,EAA4BC,UAA5B,CAAP;AACH;;;;KAGL;;AACA;;;;;IAGMG,Y;AACF;;;;;;AAMA,wBAAYnH,SAAZ,EAAuBoH,KAAvB,EAA8B;AAAA;;AAC1B,SAAKpH,SAAL,GAAiBA,SAAjB;AACA,SAAKoH,KAAL,GAAaA,KAAb;AACH;AACD;;;;;;8FACYH,O;;;;;;AACAtG,gBAAAA,I,GAA2BsG,O,CAA3BtG,I,EAAS0G,a,4BAAkBJ,O;kDAC5B,KAAKjH,SAAL,CAAeS,KAAf,iCACA4G,aADA;AAEH1G,kBAAAA,IAAI,iBAAU,KAAKyG,KAAf,SAAuBzG,IAAvB;AAFD,mB;;;;;;;;;;;;;;;;AAKX;;;;2BACOqG,U,EAAY;AACf,aAAO,IAAID,iBAAJ,CAAsB,IAAtB,EAA4BC,UAA5B,CAAP;AACH;;;;KAGL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA;;;;;IAGMM,iB;;;;;AACF,6BAAY5G,MAAZ,EAAoB6G,GAApB,EAAyBC,UAAzB,EAAqCC,UAArC,EAAiD7G,QAAjD,EAA2D;AAAA;;AAAA;;AACvD,QAAI,OAAOA,QAAP,KAAoB,QAApB,IACA,OAAOA,QAAQ,CAAC8G,KAAhB,KAA0B,QAD9B,EACwC;AACpC,UAAMC,aAAa,GAAGF,UAAU,oBAChBD,UADgB,cACFC,UADE,qBAEhBD,UAFgB,CAAhC;AAGA,0DAAyB9G,MAAzB,cAAmC6G,GAAnC,gBAA4C3G,QAAQ,CAAC8G,KAArD,eAA+DC,aAA/D;AACA,YAAKjH,MAAL,GAAcA,MAAd;AACA,YAAK6G,GAAL,GAAWA,GAAX;AACA,YAAKE,UAAL,GAAkBA,UAAlB;AACA,YAAKD,UAAL,GAAkBA,UAAlB;AACA,YAAKI,SAAL,GAAiBhH,QAAQ,CAACiH,UAA1B;AACA,YAAKC,IAAL,GAAYlH,QAAQ,CAACkH,IAArB;AACH,KAZD,MAaK;AACD,YAAM,IAAIzF,KAAJ,CAAU,kCAAV,CAAN;AACH;;AAhBsD;AAiB1D;;;iCAlB2BA,K,IAqBhC;;;IACM0F,uB;AACF,qCAAc;AAAA;;AACV,QAAI,CAACA,uBAAuB,CAACtH,KAA7B,EAAoC;AAChC,YAAM,IAAI4B,KAAJ,CAAU,4DAAV,CAAN;AACH;;AACD,QAAI,CAAC0F,uBAAuB,CAACC,eAA7B,EAA8C;AAC1C,YAAM,IAAI3F,KAAJ,CAAU,sEAAV,CAAN;AACH;AACJ;;;;;sGACmB4E,O;;;;;;;;uBAEW,KAAKxG,KAAL,CAAWwG,OAAX,C;;;AAAjBrG,gBAAAA,Q;AACAqH,gBAAAA,W,GAAcrH,QAAQ,CAACsH,OAAT,CAAiBnH,GAAjB,CAAqB,cAArB,C;;qBAChBH,QAAQ,CAACuH,E;;;;;sBACLF,WAAW,KAAK,I;;;;;kDACT,I;;;qBAEFA,WAAW,CAACG,UAAZ,CAAuB,kBAAvB,C;;;;;;uBAEQxH,QAAQ,CAACyH,IAAT,E;;;;;;sBAGP,IAAIhG,KAAJ,CAAU,sCAAV,C;;;;;;;sBAGL4F,WAAW,IAChBA,WAAW,CAACG,UAAZ,CAAuB,kBAAvB,C;;;;;+BACUd,iB;+BAAkBL,OAAO,CAACvG,M;+BAAQuG,OAAO,CAACM,G;+BAAK3G,QAAQ,CAAC0H,M;+BAAQ1H,QAAQ,CAAC6G,U;;uBAAkB7G,QAAQ,CAACyH,IAAT,E;;;;;;;sBAG/F,IAAIhG,KAAJ,mCAAqCzB,QAAQ,CAAC0H,MAA9C,cAAwD1H,QAAQ,CAAC6G,UAAjE,O;;;;;;;;;;sBAIN,wBAAeH,iB;;;;;;;;sBAIT,IAAIjF,KAAJ,2BAA6B4E,OAAO,CAACvG,MAArC,cAA+CuG,OAAO,CAACM,GAAvD,gBAAgE,aAAIgB,OAApE,E;;;;;;;;;;;;;;;;;;uCAICtB,O,EAASuB,O,EAAS;AACjC;AACA,WAAK/H,KAAL,CAAWwG,OAAX,EACKwB,IADL;AAAA,4EACU,kBAAO7H,QAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,yBACoBA,QAAQ,CAAC8H,IAAT,EADpB;;AAAA;AACAC,kBAAAA,WADA;AAEN;AACMC,kBAAAA,eAHA,GAGkB,EAHlB;AAINhI,kBAAAA,QAAQ,CAACsH,OAAT,CAAiBW,OAAjB,CAAyB,UAAClJ,KAAD,EAAQD,GAAR,EAAgB;AACrCkJ,oBAAAA,eAAe,CAAClJ,GAAD,CAAf,GAAuBC,KAAvB;AACH,mBAFD;AAJM,oDAOC;AACH6H,oBAAAA,UAAU,EAAE5G,QAAQ,CAAC0H,MADlB;AAEHJ,oBAAAA,OAAO,EAAEU,eAFN;AAGHtI,oBAAAA,IAAI,EAAEqI;AAHH,mBAPD;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SADV;;AAAA;AAAA;AAAA;AAAA,WAcKF,IAdL,CAcU,UAAAK,CAAC;AAAA,eAAIN,OAAO,CAACO,SAAR,CAAkBD,CAAlB,CAAJ;AAAA,OAdX,EAeKE,KAfL,CAeW,UAAAC,CAAC;AAAA,eAAIT,OAAO,CAACU,OAAR,CAAgBD,CAAhB,CAAJ;AAAA,OAfZ;AAgBH;;;;+FACWhC,O;;;;;;;AACAvG,gBAAAA,M,GAAqFuG,O,CAArFvG,M,EAAQ6G,G,GAA6EN,O,CAA7EM,G,EAAKjH,I,GAAwE2G,O,CAAxE3G,I,EAAM6I,S,GAAkElC,O,CAAlEkC,S,qBAAkElC,O,CAAvDiB,O,EAAAA,O,iCAAUH,uBAAuB,CAACqB,e;wCACtC,KAAKC,mBAAL,CAAyBF,SAAzB,C,EAA1BG,M,yBAAAA,M,EAAQC,a,yBAAAA,a;;;uBAGCxB,uBAAuB,CAACtH,KAAxB,CAA8B8G,GAA9B,EAAmC;AAC5C7G,kBAAAA,MAAM,EAANA,MAD4C;AAE5CwH,kBAAAA,OAAO,EAAPA,OAF4C;AAG5C5H,kBAAAA,IAAI,EAAE,OAAOA,IAAP,KAAgB,QAAhB,GAA2BA,IAA3B,GAAkCkJ,IAAI,CAACC,SAAL,CAAenJ,IAAf,CAHI;AAI5CgJ,kBAAAA,MAAM,EAANA;AAJ4C,iBAAnC,C;;;;;;;AAQb;AACAC,gBAAAA,aAAa;;;;;;;;;;;;;;;;;;;wCAGDJ,S,EAAW;AAC3B,UAAI,OAAOA,SAAP,KAAqB,QAAzB,EAAmC;AAC/B,YAAMO,UAAU,GAAG,IAAI3B,uBAAuB,CAACC,eAA5B,EAAnB,CAD+B,CAE/B;;AACA,YAAM2B,OAAO,GAAGC,UAAU,CAAC,YAAM;AAC7BF,UAAAA,UAAU,CAACG,KAAX;AACH,SAFyB,EAEvBV,SAFuB,CAA1B;AAGA,eAAO;AACHG,UAAAA,MAAM,EAAEI,UAAU,CAACJ,MADhB;AAEHC,UAAAA,aAAa,EAAE,yBAAM;AACjBO,YAAAA,YAAY,CAACH,OAAD,CAAZ;AACH;AAJE,SAAP;AAMH,OAZD,MAaK;AACD,eAAO;AACHL,UAAAA,MAAM,EAAE1J,SADL;AAEH2J,UAAAA,aAAa,EAAE,yBAAM;AACjB;AACH;AAJE,SAAP;AAMH;AACJ;;;;;;AAELxB,uBAAuB,CAACqB,eAAxB,GAA0C;AACtCW,EAAAA,MAAM,EAAE,kBAD8B;AAEtC,kBAAgB;AAFsB,CAA1C,C,CAKA;;AACAhC,uBAAuB,CAACtH,KAAxB,GAAgCiB,MAAM,CAACjB,KAAP,CAAaY,IAAb,CAAkBK,MAAlB,CAAhC;AACAqG,uBAAuB,CAACC,eAAxB,GAA0CtG,MAAM,CAACsG,eAAjD,C,CAEA;;AACA;;;;IAGMgC,a;AACF;;;;;;;;AAQA,2BAAsI;AAAA,QAA1HC,gBAA0H,uEAAvG,IAAIlC,uBAAJ,EAAuG;AAAA,QAAxEmC,OAAwE;AAAA,QAA/DC,eAA+D;AAAA,QAA9CC,SAA8C,uEAAlCJ,aAAa,CAACK,kBAAoB;;AAAA;;AAClI,SAAKJ,gBAAL,GAAwBA,gBAAxB;AACA,SAAKC,OAAL,GAAeA,OAAf;AACA,SAAKC,eAAL,GAAuBA,eAAvB;AACA,SAAKC,SAAL,GAAiBA,SAAjB;AACH;AACD;;;;;;+FACYnD,O;;;;;;;AACAtG,gBAAAA,I,GAA4DsG,O,CAA5DtG,I,EAAMuH,O,GAAsDjB,O,CAAtDiB,O,0BAAsDjB,O,CAA7CqD,c,EAAAA,c,sCAAiB,K,0BAAUjD,a,4BAAkBJ,O,0CACpE;;;uBACsB,KAAKsD,gBAAL,CAAsBD,cAAtB,C;;;AAAhBJ,gBAAAA,O;kDAEC,KAAKD,gBAAL,CAAsBO,aAAtB,iCACAnD,aADA;AAEHE,kBAAAA,GAAG,EAAE2C,OAAO,GAAGvJ,IAFZ;AAGHuH,kBAAAA,OAAO,kCAAO8B,aAAa,CAACZ,eAArB,GAAyClB,OAAzC;AAHJ,mB;;;;;;;;;;;;;;;;AAMX;;;;2BACOlB,U,EAAY;AACf,aAAO,IAAID,iBAAJ,CAAsB,IAAtB,EAA4BC,UAA5B,CAAP;AACH;AACD;;;;;;;;;yGAKuBsD,c;;;;;;sBACfA,cAAc,IAAI,CAAC,KAAKH,e;;;;;kDACjB,KAAKD,OAAL,GAAe,KAAKE,S;;;;uBAGJ,KAAKD,eAAL,CAAqBM,Q;;;AAAtCA,gBAAAA,Q;kDACCA,QAAQ,CAACC,QAAT,GAAoB,KAAKN,S;;;;;;;;;;;;;;;;;;;;AAI5C;;;;;AAGAJ,aAAa,CAACK,kBAAd,GAAmC,kBAAnC;AACA;;;;AAGAL,aAAa,CAACZ,eAAd,GAAgC;AAC5BW,EAAAA,MAAM,EAAE,kBADoB;AAE5B,kBAAgB;AAFY,CAAhC,C,CAKA;;AACA;;;;IAGMY,sB;AACF;;;;;;AAMA,kCAAY3K,SAAZ,EAAuB4K,WAAvB,EAAoC;AAAA;;AAChC,SAAK5K,SAAL,GAAiBA,SAAjB;AACA,SAAK4K,WAAL,GAAmBA,WAAnB;AACH;AACD;;;;;;;;;;;;;;+FASY3D,O;;;;;;;;;;;;AAAS4D,gBAAAA,I,8DAAO,KAAKD,WAAL,CAAiBE,W;AAAaC,gBAAAA,O,8DAAU,C;;qCAElB9D,O,CAAlC+D,S,EAAAA,S,mCAAY,Q,uBAAaC,I,4BAAShE,O,kBAC1C;;;uBACa,KAAKjH,SAAL,CAAeS,KAAf,iCACNwK,IADM;AAET/C,kBAAAA,OAAO,kCACA,KAAKgD,wBAAL,CAA8BL,IAA9B,EAAoCG,SAApC,CADA,GAEA/D,OAAO,CAACiB,OAFR;AAFE,mB;;;;;;;;;sBAST2C,IAAI,IACJE,OAAO,KAAK,CADZ,IAEA,wBAAezD,iBAFf,IAGA,aAAIE,UAAJ,KAAmB,G;;;;;;uBAEbqD,IAAI,CAACM,kBAAL,E;;;kDAEC,KAAK1K,KAAL,CAAWwG,OAAX,EAAoB4D,IAApB,EAA0BE,OAAO,GAAG,CAApC,C;;;;;;;;;;;;;;;;;;;AAKnB;;;;2BACO/D,U,EAAY;AACf,UAAMoE,iBAAiB,GAAG,KAAKpL,SAAL,CAAeqL,MAAf,CAAsBrE,UAAtB,CAA1B;AACA,aAAO,IAAI2D,sBAAJ,CAA2BS,iBAA3B,EAA8C,KAAKR,WAAnD,CAAP;AACH;AACD;;;;;;;;;;6CAOyBC,I,EAAMG,S,EAAW;AACtC,UAAIH,IAAI,IAAIG,SAAS,KAAK,QAA1B,EAAoC;AAChC,eAAO;AAAEM,UAAAA,aAAa,mBAAYT,IAAI,CAACU,WAAjB;AAAf,SAAP;AACH,OAFD,MAGK,IAAIV,IAAI,IAAIG,SAAS,KAAK,SAA1B,EAAqC;AACtC,eAAO;AAAEM,UAAAA,aAAa,mBAAYT,IAAI,CAACW,YAAjB;AAAf,SAAP;AACH;AACJ;;;;KAGL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA;;;;;AAGA,IAAIC,QAAJ;;AACA,CAAC,UAAUA,QAAV,EAAoB;AACjB;;;AAGAA,EAAAA,QAAQ,CAAC,QAAD,CAAR,GAAqB,QAArB;AACA;;;;AAGAA,EAAAA,QAAQ,CAAC,QAAD,CAAR,GAAqB,QAArB;AACH,CATD,EASGA,QAAQ,KAAKA,QAAQ,GAAG,EAAhB,CATX;AAUA;;;AACA,IAAIC,OAAJ;;AACA,CAAC,UAAUA,OAAV,EAAmB;AAChB;AACAA,EAAAA,OAAO,CAAC,MAAD,CAAP,GAAkB,MAAlB;AACA;;AACAA,EAAAA,OAAO,CAAC,OAAD,CAAP,GAAmB,OAAnB;AACA;;AACAA,EAAAA,OAAO,CAAC,SAAD,CAAP,GAAqB,SAArB;AACA;;AACAA,EAAAA,OAAO,CAAC,YAAD,CAAP,GAAwB,YAAxB;AACA;;AACAA,EAAAA,OAAO,CAAC,WAAD,CAAP,GAAuB,WAAvB;AACA;;AACAA,EAAAA,OAAO,CAAC,QAAD,CAAP,GAAoB,QAApB;AACA;;AACAA,EAAAA,OAAO,CAAC,UAAD,CAAP,GAAsB,UAAtB;AACA;;AACAA,EAAAA,OAAO,CAAC,SAAD,CAAP,GAAqB,SAArB;AACA;;AACAA,EAAAA,OAAO,CAAC,SAAD,CAAP,GAAqB,SAArB;AACH,CAnBD,EAmBGA,OAAO,KAAKA,OAAO,GAAG,EAAf,CAnBV;;AAoBA,IAAMC,YAAY,uDACbD,OAAO,CAACE,IADK,EACE,MADF,kCAEbF,OAAO,CAACG,KAFK,EAEG,OAFH,kCAGbH,OAAO,CAACI,OAHK,EAGK,YAHL,kCAIbJ,OAAO,CAACK,UAJK,EAIQ,WAJR,kCAKbL,OAAO,CAACM,SALK,EAKO,UALP,kCAMbN,OAAO,CAACO,MANK,EAMI,QANJ,kCAObP,OAAO,CAACQ,QAPK,EAOM,UAPN,kCAQbR,OAAO,CAACS,OARK,EAQK,QARL,kCASbT,OAAO,CAACU,OATK,EASK,QATL,iBAAlB;AAWA;;IACMC,W;AACF;;;;;AAKA,qBAAYzL,QAAZ,EAAsB;AAAA;;AAClB;AACA,OAAK0L,IAAL,GAAYb,QAAQ,CAACc,MAArB;AACA;;AACA,OAAKC,UAAL,GAAkB,EAAlB;;AACA,MAAI5L,QAAJ,EAAc;AACV,QAAI,OAAOA,QAAQ,CAAC0L,IAAhB,KAAyB,QAA7B,EAAuC;AACnC,WAAKA,IAAL,GAAY1L,QAAQ,CAAC0L,IAArB;AACH,KAFD,MAGK;AACD,YAAM,IAAIjK,KAAJ,CAAU,sCAAV,CAAN;AACH;;AACD,QAAIrD,KAAK,CAACC,OAAN,CAAc2B,QAAQ,CAAC4L,UAAvB,CAAJ,EAAwC;AACpC,WAAKA,UAAL,GAAkB5L,QAAQ,CAAC4L,UAAT,CAAoBtN,GAApB,CAAwB,UAACuN,QAAD,EAAc;AACpD,eAAO;AACHC,UAAAA,EAAE,EAAED,QAAQ,CAACC,EADV;AAEHC,UAAAA,UAAU,EAAEF,QAAQ,CAAC,aAAD,CAFjB;AAGHG,UAAAA,YAAY,EAAEH,QAAQ,CAAC,eAAD;AAHnB,SAAP;AAKH,OANiB,CAAlB;AAOH,KARD,MASK;AACD,YAAM,IAAIpK,KAAJ,CAAU,4CAAV,CAAN;AACH;;AAlBS,QAmBFwK,IAnBE,GAmBOjM,QAnBP,CAmBFiM,IAnBE;;AAoBV,QAAI,OAAOA,IAAP,KAAgB,QAApB,EAA8B;AAC1B,WAAK,IAAMnN,GAAX,IAAkBiM,YAAlB,EAAgC;AAC5B,YAAMhM,KAAK,GAAGkN,IAAI,CAACnN,GAAD,CAAlB;AACA,YAAMoN,YAAY,GAAGnB,YAAY,CAACjM,GAAD,CAAjC;;AACA,YAAI,OAAOC,KAAP,KAAiB,QAAjB,IACAmN,YAAY,KAAK,YADjB,IAEAA,YAAY,KAAK,MAFrB,EAE6B;AACzB,eAAKA,YAAL,IAAqBnN,KAArB;AACH;AACJ;AACJ,KAVD,MAWK;AACD,YAAM,IAAI0C,KAAJ,CAAU,sCAAV,CAAN;AACH;AACJ;AACJ,C,EAGL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA;;;;;IAGM0K,e;AACF;;;;;;AAMA,2BAAYC,OAAZ,EAAqBC,OAArB,EAA8B;AAAA;;AAC1B,SAAKD,OAAL,GAAeA,OAAf;AACA,SAAKC,OAAL,GAAeA,OAAf;AACH;AACD;;;;;wBACIvN,G,EAAK;AACL,aAAO,KAAKsN,OAAL,CAAajM,GAAb,CAAiB,KAAKkM,OAAL,GAAeF,eAAe,CAACG,cAA/B,GAAgDxN,GAAjE,CAAP;AACH;AACD;;;;wBACIA,G,EAAKC,K,EAAO;AACZ,aAAO,KAAKqN,OAAL,CAAaG,GAAb,CAAiB,KAAKF,OAAL,GAAeF,eAAe,CAACG,cAA/B,GAAgDxN,GAAjE,EAAsEC,KAAtE,CAAP;AACH;AACD;;;;2BACOD,G,EAAK;AACR,aAAO,KAAKsN,OAAL,CAAaI,MAAb,CAAoB,KAAKH,OAAL,GAAeF,eAAe,CAACG,cAA/B,GAAgDxN,GAApE,CAAP;AACH;AACD;;;;2BACOuN,O,EAAS;AACZ,aAAO,IAAIF,eAAJ,CAAoB,IAApB,EAA0BE,OAA1B,CAAP;AACH;AACD;;;;4BACmB;AAAA,UAAb5B,MAAa,uEAAJ,EAAI;AACf,aAAO,KAAK2B,OAAL,CAAaK,KAAb,CAAmB,KAAKJ,OAAL,GAAeF,eAAe,CAACG,cAA/B,GAAgD7B,MAAnE,CAAP;AACH;AACD;;;;gCACYiC,Q,EAAU;AAClB,aAAO,KAAKN,OAAL,CAAaO,WAAb,CAAyBD,QAAzB,CAAP;AACH;AACD;;;;mCACeA,Q,EAAU;AACrB,aAAO,KAAKN,OAAL,CAAaO,WAAb,CAAyBD,QAAzB,CAAP;AACH;;;;;AAEL;;;;;AAGAP,eAAe,CAACG,cAAhB,GAAiC,GAAjC,C,CAEA;;AACA,IAAMM,wBAAwB,GAAG,aAAjC;AACA,IAAMC,yBAAyB,GAAG,cAAlC;AACA,IAAMC,mBAAmB,GAAG,SAA5B;AACA;;;;IAGMC,W;;;;;AACF;;;;;;AAMA,uBAAYX,OAAZ,EAAqBY,MAArB,EAA6B;AAAA;;AAAA,8BACnBZ,OADmB,iBACFY,MADE;AAE5B;AACD;;;;;;;;;wBAKkB;AACd,aAAO,KAAK7M,GAAL,CAASyM,wBAAT,CAAP;AACH;AACD;;;;;;sBAKgB7N,K,EAAO;AACnB,UAAIA,KAAK,KAAK,IAAd,EAAoB;AAChB,aAAKyN,MAAL,CAAYI,wBAAZ;AACH,OAFD,MAGK;AACD,aAAKL,GAAL,CAASK,wBAAT,EAAmC7N,KAAnC;AACH;AACJ;AACD;;;;;;;;wBAKmB;AACf,aAAO,KAAKoB,GAAL,CAAS0M,yBAAT,CAAP;AACH;AACD;;;;;;sBAKiB9N,K,EAAO;AACpB,UAAIA,KAAK,KAAK,IAAd,EAAoB;AAChB,aAAKyN,MAAL,CAAYK,yBAAZ;AACH,OAFD,MAGK;AACD,aAAKN,GAAL,CAASM,yBAAT,EAAoC9N,KAApC;AACH;AACJ;AACD;;;;;;;;wBAKc;AACV,UAAMA,KAAK,GAAG,KAAKoB,GAAL,CAAS2M,mBAAT,CAAd;;AACA,UAAI/N,KAAJ,EAAW;AACP,YAAMkO,OAAO,GAAG,IAAIxB,WAAJ,EAAhB,CADO,CAEP;;AACA7M,QAAAA,MAAM,CAACsO,MAAP,CAAcD,OAAd,EAAuBrE,IAAI,CAACuE,KAAL,CAAWpO,KAAX,CAAvB;AACA,eAAOkO,OAAP;AACH;AACJ;AACD;;;;;;sBAKYlO,K,EAAO;AACf,UAAI,CAACA,KAAL,EAAY;AACR,aAAKyN,MAAL,CAAYM,mBAAZ;AACH,OAFD,MAGK;AACD,aAAKP,GAAL,CAASO,mBAAT,EAA8BlE,IAAI,CAACC,SAAL,CAAe9J,KAAf,CAA9B;AACH;AACJ;;;;EA9EqBoN,e,GAiF1B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA;;;IACMiB,iB;AACF;;;;;;AAMA,6BAAYhO,SAAZ,EAAwD;AAAA,QAAjCiO,YAAiC,uEAAlB,gBAAkB;;AAAA;;AACpD,SAAKjO,SAAL,GAAiBA,SAAS,CAACqL,MAAV,2BAAoC4C,YAApC,EAAjB;AACH;AACD;;;;;iCACaC,K,EAAOC,Q,EAAU;AAC1B,aAAO,KAAKnO,SAAL,CAAeS,KAAf,CAAqB;AACxBC,QAAAA,MAAM,EAAE,MADgB;AAExBC,QAAAA,IAAI,EAAE,WAFkB;AAGxBL,QAAAA,IAAI,EAAE;AAAE4N,UAAAA,KAAK,EAALA,KAAF;AAASC,UAAAA,QAAQ,EAARA;AAAT;AAHkB,OAArB,CAAP;AAKH;AACD;;;;gCACYC,K,EAAOC,O,EAAS;AACxB,aAAO,KAAKrO,SAAL,CAAeS,KAAf,CAAqB;AACxBC,QAAAA,MAAM,EAAE,MADgB;AAExBC,QAAAA,IAAI,EAAE,UAFkB;AAGxBL,QAAAA,IAAI,EAAE;AAAE8N,UAAAA,KAAK,EAALA,KAAF;AAASC,UAAAA,OAAO,EAAPA;AAAT;AAHkB,OAArB,CAAP;AAKH;AACD;;;;4CACwBH,K,EAAO;AAC3B,aAAO,KAAKlO,SAAL,CAAeS,KAAf,CAAqB;AACxBC,QAAAA,MAAM,EAAE,MADgB;AAExBC,QAAAA,IAAI,EAAE,eAFkB;AAGxBL,QAAAA,IAAI,EAAE;AAAE4N,UAAAA,KAAK,EAALA;AAAF;AAHkB,OAArB,CAAP;AAKH;AACD;;;;kCACcE,K,EAAOC,O,EAASF,Q,EAAU;AACpC,aAAO,KAAKnO,SAAL,CAAeS,KAAf,CAAqB;AACxBC,QAAAA,MAAM,EAAE,MADgB;AAExBC,QAAAA,IAAI,EAAE,QAFkB;AAGxBL,QAAAA,IAAI,EAAE;AAAE8N,UAAAA,KAAK,EAALA,KAAF;AAASC,UAAAA,OAAO,EAAPA,OAAT;AAAkBF,UAAAA,QAAQ,EAARA;AAAlB;AAHkB,OAArB,CAAP;AAKH;AACD;;;;2CACuBD,K,EAAO;AAC1B,aAAO,KAAKlO,SAAL,CAAeS,KAAf,CAAqB;AACxBC,QAAAA,MAAM,EAAE,MADgB;AAExBC,QAAAA,IAAI,EAAE,aAFkB;AAGxBL,QAAAA,IAAI,EAAE;AAAE4N,UAAAA,KAAK,EAALA;AAAF;AAHkB,OAArB,CAAP;AAKH;AACD;;;;8CAC0BA,K,EAAOC,Q,EAAmB;AAAA,yCAAN7O,IAAM;AAANA,QAAAA,IAAM;AAAA;;AAChD,aAAO,KAAKU,SAAL,CAAeS,KAAf,CAAqB;AACxBC,QAAAA,MAAM,EAAE,MADgB;AAExBC,QAAAA,IAAI,EAAE,aAFkB;AAGxBL,QAAAA,IAAI,EAAE;AAAE4N,UAAAA,KAAK,EAALA,KAAF;AAASC,UAAAA,QAAQ,EAARA,QAAT;AAAmB5N,UAAAA,SAAS,EAAEjB;AAA9B;AAHkB,OAArB,CAAP;AAKH;;;;KAGL;;AACA;;;IACMgP,U;AACF;;;;;;AAMA,sBAAYtO,SAAZ,EAAiD;AAAA,QAA1BiO,YAA0B,uEAAX,SAAW;;AAAA;;AAC7C,SAAKjO,SAAL,GAAiBA,SAAS,CAACqL,MAAV,CAAiB,gBAAjB,CAAjB;AACH;AACD;;;;;2BACOhL,I,EAAM;AACT,aAAO,KAAKL,SAAL,CACFS,KADE,CACI;AACPC,QAAAA,MAAM,EAAE,MADD;AAEPJ,QAAAA,IAAI,EAAE;AAAED,UAAAA,IAAI,EAAJA;AAAF,SAFC;AAGP2K,QAAAA,SAAS,EAAE;AAHJ,OADJ,EAMFvC,IANE,CAMG1J,WANH,CAAP;AAOH;AACD;;;;0BACMwP,K,EAAO;AACT,aAAO,KAAKvO,SAAL,CACFS,KADE,CACI;AACPC,QAAAA,MAAM,EAAE,KADD;AAEPC,QAAAA,IAAI,aAAM4N,KAAN,CAFG;AAGPvD,QAAAA,SAAS,EAAE;AAHJ,OADJ,EAMFvC,IANE,CAMG1J,WANH,CAAP;AAOH;AACD;;;;+BACW;AACP,aAAO,KAAKiB,SAAL,CACFS,KADE,CACI;AAAEC,QAAAA,MAAM,EAAE,KAAV;AAAiBsK,QAAAA,SAAS,EAAE;AAA5B,OADJ,EAEFvC,IAFE,CAEG1J,WAFH,CAAP;AAGH;AACD;;;;4BACOwP,K,EAAO;AACV,aAAO,KAAKvO,SAAL,CACFS,KADE,CACI;AACPC,QAAAA,MAAM,EAAE,QADD;AAEPC,QAAAA,IAAI,aAAM4N,KAAN,CAFG;AAGPvD,QAAAA,SAAS,EAAE;AAHJ,OADJ,EAMFvC,IANE,CAMG1J,WANH,CAAP;AAOH;AACD;;;;2BACOwP,K,EAAO;AACV,aAAO,KAAKvO,SAAL,CACFS,KADE,CACI;AACPC,QAAAA,MAAM,EAAE,KADD;AAEPC,QAAAA,IAAI,aAAM4N,KAAN,YAFG;AAGPvD,QAAAA,SAAS,EAAE;AAHJ,OADJ,EAMFvC,IANE,CAMG1J,WANH,CAAP;AAOH;AACD;;;;4BACQwP,K,EAAO;AACX,aAAO,KAAKvO,SAAL,CACFS,KADE,CACI;AACPC,QAAAA,MAAM,EAAE,KADD;AAEPC,QAAAA,IAAI,aAAM4N,KAAN,aAFG;AAGPvD,QAAAA,SAAS,EAAE;AAHJ,OADJ,EAMFvC,IANE,CAMG1J,WANH,CAAP;AAOH;;;;KAGL;;;AACA,IAAIyP,SAAJ;;AACA,CAAC,UAAUA,SAAV,EAAqB;AAClBA,EAAAA,SAAS,CAAC,QAAD,CAAT,GAAsB,QAAtB;AACAA,EAAAA,SAAS,CAAC,WAAD,CAAT,GAAyB,YAAzB;AACAA,EAAAA,SAAS,CAAC,SAAD,CAAT,GAAuB,SAAvB;AACH,CAJD,EAIGA,SAAS,KAAKA,SAAS,GAAG,EAAjB,CAJZ;;AAKA,IAAIC,UAAJ;;AACA,CAAC,UAAUhD,QAAV,EAAoB;AACjBA,EAAAA,QAAQ,CAAC,QAAD,CAAR,GAAqB,QAArB;AACAA,EAAAA,QAAQ,CAAC,QAAD,CAAR,GAAqB,QAArB;AACH,CAHD,EAGGgD,UAAU,KAAKA,UAAU,GAAG,EAAlB,CAHb;;SAIeC,c;;;AAoBf;;;;;;2EApBA,mBAA4BC,GAA5B,EAAiCC,WAAjC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBAE2BD,GAAG,CAACE,YAAJ,CAAiBpO,KAAjB,CAAuB;AAC1CC,cAAAA,MAAM,EAAE,MADkC;AAE1CC,cAAAA,IAAI,4BAAqBiO,WAAW,CAACX,YAAjC,WAFsC;AAG1C3N,cAAAA,IAAI,EAAEsO,WAAW,CAACE;AAHwB,aAAvB,CAF3B;;AAAA;AAEUlO,YAAAA,QAFV;AAOI;AACiB8L,YAAAA,EARrB,GAQqF9L,QARrF,CAQYmO,OARZ,EAQuCxD,WARvC,GAQqF3K,QARrF,CAQyBoO,YARzB,EAQmExD,YARnE,GAQqF5K,QARrF,CAQoDqO,aARpD;;AAAA,kBASQ,OAAOvC,EAAP,KAAc,QATtB;AAAA;AAAA;AAAA;;AAAA,kBAUc,IAAIrK,KAAJ,CAAU,oCAAV,CAVd;;AAAA;AAAA,kBAYQ,OAAOkJ,WAAP,KAAuB,QAZ/B;AAAA;AAAA;AAAA;;AAAA,kBAac,IAAIlJ,KAAJ,CAAU,0CAAV,CAbd;;AAAA;AAAA,kBAeQ,OAAOmJ,YAAP,KAAwB,QAfhC;AAAA;AAAA;AAAA;;AAAA,kBAgBc,IAAInJ,KAAJ,CAAU,0CAAV,CAhBd;;AAAA;AAAA,+CAkBW;AAAEqK,cAAAA,EAAE,EAAFA,EAAF;AAAMnB,cAAAA,WAAW,EAAXA,WAAN;AAAmBC,cAAAA,YAAY,EAAZA;AAAnB,aAlBX;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,G;;;;IAuBM0D,I;AACF,uBAAoD;AAAA,QAAtCP,GAAsC,SAAtCA,GAAsC;AAAA,QAAjCjC,EAAiC,SAAjCA,EAAiC;AAAA,QAA7BnB,WAA6B,SAA7BA,WAA6B;AAAA,QAAhBC,YAAgB,SAAhBA,YAAgB;;AAAA;;AAChD,SAAKmD,GAAL,GAAWA,GAAX;AACA,SAAKQ,GAAL,GAAWzC,EAAX;AACA,SAAK0C,YAAL,GAAoB7D,WAApB;AACA,SAAK8D,aAAL,GAAqB7D,YAArB;AACA,SAAKxL,SAAL,GAAiB,IAAI2K,sBAAJ,CAA2BgE,GAAG,CAACW,aAA/B,EAA8C;AAC3DxE,MAAAA,WAAW,EAAE;AAD8C,KAA9C,CAAjB;AAGA,QAAM+D,YAAY,GAAG,IAAI1H,YAAJ,CAAiB,KAAKnH,SAAtB,EAAiC2O,GAAG,CAACjC,EAArC,CAArB;AACA,SAAK6C,OAAL,GAAe,IAAIjB,UAAJ,CAAe,KAAKtO,SAApB,CAAf;AACA,SAAKwP,SAAL,GAAiBzP,gBAAgB,CAAC0P,MAAjB,CAAwBZ,YAAxB,CAAjB;AACA,SAAK7B,OAAL,GAAe,IAAIW,WAAJ,CAAgBgB,GAAG,CAAC3B,OAApB,EAA6BN,EAA7B,CAAf,CAXgD,CAYhD;;AACA,QAAInB,WAAJ,EAAiB;AACb,WAAKyB,OAAL,CAAazB,WAAb,GAA2BA,WAA3B;AACH;;AACD,QAAIC,YAAJ,EAAkB;AACd,WAAKwB,OAAL,CAAaxB,YAAb,GAA4BA,YAA5B;AACH;AACJ;AACD;;;;;;;;;;;;;;;;;;;uBA2F2B,KAAKxL,SAAL,CAAeS,KAAf,CAAqB;AACxCC,kBAAAA,MAAM,EAAE,KADgC;AAExCC,kBAAAA,IAAI,EAAE;AAFkC,iBAArB,C;;;AAAjBC,gBAAAA,Q;AAIN;AACA,qBAAK8O,QAAL,GAAgB,IAAIrD,WAAJ,CAAgBzL,QAAhB,CAAhB,C,CACA;;AACA,qBAAKoM,OAAL,CAAaa,OAAb,GAAuB,KAAK6B,QAA5B;;;;;;;;;;;;;;;;;;;;;;;;sBAII,KAAKL,aAAL,KAAuB,I;;;;;;uBACjB,KAAKV,GAAL,CAASW,aAAT,CAAuB7O,KAAvB,CAA6B;AAC/BC,kBAAAA,MAAM,EAAE,QADuB;AAE/BC,kBAAAA,IAAI,EAAE,eAFyB;AAG/BuH,kBAAAA,OAAO,EAAE;AACLoD,oBAAAA,aAAa,mBAAY,KAAK+D,aAAjB;AADR;AAHsB,iBAA7B,C;;;AAQV;AACA,qBAAK9D,WAAL,GAAmB,IAAnB;AACA,qBAAKC,YAAL,GAAoB,IAApB;;;;;;;;;;;;;;;;AAEJ;;;;;;;;;+FAKYoD,W;;;;;;;;uBACwCF,cAAY,CAAC,KAAKC,GAAN,EAAWC,WAAX,C;;;;AAApDlC,gBAAAA,E,uBAAAA,E;AAAInB,gBAAAA,W,uBAAAA,W;AAAaC,gBAAAA,Y,uBAAAA,Y;;sBACrBkB,EAAE,KAAK,KAAKA,E;;;;;sBACN,IAAIrK,KAAJ,CAAU,8BAAV,C;;;AAEV;AACA,qBAAKkJ,WAAL,GAAmBA,WAAnB;AACA,qBAAKC,YAAL,GAAoBA,YAApB;;;;;;;;;;;;;;;;AAEJ;;;;;yGACsBoD,W;;;;;sBACZ,IAAIvM,KAAJ,CAAU,qBAAV,C;;;;;;;;;;;;;;;;;;;;;;;;;;uBAGiB,KAAKsM,GAAL,CAASW,aAAT,CAAuB7O,KAAvB,CAA6B;AAChDC,kBAAAA,MAAM,EAAE,MADwC;AAEhDC,kBAAAA,IAAI,EAAE,eAF0C;AAGhDuH,kBAAAA,OAAO,EAAE;AACLoD,oBAAAA,aAAa,mBAAY,KAAKE,YAAjB;AADR;AAHuC,iBAA7B,C;;;AAAjB5K,gBAAAA,Q;AAOgB2K,gBAAAA,W,GAAgB3K,Q,CAA9BoO,Y;;sBACJ,OAAOzD,WAAP,KAAuB,Q;;;;;AACvB,qBAAKA,WAAL,GAAmBA,WAAnB;;;;;sBAGM,IAAIlJ,KAAJ,CAAU,4CAAV,C;;;;;;;;;;;;;;;;;;;;;;;;;uBAIJ,KAAK8I,kBAAL,E;;;mDACC,KAAKwE,U;;;;;;;;;;;;;;;;;;iCAEHtP,I,EAAe;AAAA;;AAAA,yCAANf,IAAM;AAANA,QAAAA,IAAM;AAAA;;AACxB,aAAO,wBAAKkQ,SAAL,EAAepO,YAAf,yBAA4Bf,IAA5B,SAAqCf,IAArC,EAAP;AACH;AACD;;;;;;8BAGU;AACN;AACA,UAAMiM,WAAW,GAAG,KAAKyB,OAAL,CAAazB,WAAjC;AACA,UAAMC,YAAY,GAAG,KAAKwB,OAAL,CAAaxB,YAAlC;AACA,UAAMqC,OAAO,GAAG,KAAKb,OAAL,CAAaa,OAA7B;;AACA,UAAI,OAAOtC,WAAP,KAAuB,QAA3B,EAAqC;AACjC,aAAKA,WAAL,GAAmBA,WAAnB;AACH;;AACD,UAAI,OAAOC,YAAP,KAAwB,QAA5B,EAAsC;AAClC,aAAKA,YAAL,GAAoBA,YAApB;AACH;;AACD,UAAI,OAAOqC,OAAP,KAAmB,QAAvB,EAAiC;AAC7B,aAAK6B,QAAL,GAAgB7B,OAAhB;AACH;AACJ;;;2BACsB;AAAA,UAAlB3N,WAAkB,uEAAJ,EAAI;AACnB,YAAM,IAAImC,KAAJ,CAAU,qBAAV,CAAN;AACH;;;wCACmB;AAChB,UAAI,KAAKkJ,WAAT,EAAsB;AAClB;AACA,YAAMqE,KAAK,GAAG,KAAKrE,WAAL,CAAiBsE,KAAjB,CAAuB,GAAvB,CAAd;;AACA,YAAID,KAAK,CAAC5M,MAAN,KAAiB,CAArB,EAAwB;AACpB,gBAAM,IAAIX,KAAJ,CAAU,sBAAV,CAAN;AACH,SALiB,CAMlB;;;AACA,YAAMyN,cAAc,GAAGF,KAAK,CAAC,CAAD,CAA5B;AACA,YAAMG,cAAc,GAAGzN,MAAM,CAACE,MAAP,CAAcwD,MAAd,CAAqB8J,cAArB,CAAvB;AACA,YAAME,aAAa,GAAGxG,IAAI,CAACuE,KAAL,CAAWgC,cAAX,CAAtB;AATkB,YAULE,OAVK,GAUiDD,aAVjD,CAUVE,GAVU;AAAA,YAUSC,QAVT,GAUiDH,aAVjD,CAUII,GAVJ;AAAA,oCAUiDJ,aAVjD,CAUmBK,SAVnB;AAAA,YAU8BC,QAV9B,sCAUyC,EAVzC,0BAWlB;;AACA,YAAI,OAAOL,OAAP,KAAmB,QAAvB,EAAiC;AAC7B,gBAAM,IAAI5N,KAAJ,CAAU,qCAAV,CAAN;AACH,SAFD,MAGK,IAAI,OAAO8N,QAAP,KAAoB,QAAxB,EAAkC;AACnC,gBAAM,IAAI9N,KAAJ,CAAU,qCAAV,CAAN;AACH;;AACD,eAAO;AAAE4N,UAAAA,OAAO,EAAPA,OAAF;AAAWE,UAAAA,QAAQ,EAARA,QAAX;AAAqBG,UAAAA,QAAQ,EAARA;AAArB,SAAP;AACH,OAnBD,MAoBK;AACD,cAAM,IAAIjO,KAAJ,CAAU,yBAAV,CAAN;AACH;AACJ;;;;AAxLD;;;;;wBAKS;AACL,aAAO,KAAK8M,GAAZ;AACH;AACD;;;;;;wBAGkB;AACd,aAAO,KAAKC,YAAZ;AACH;AACD;;;;sBAGgBhB,K,EAAO;AACnB,WAAKgB,YAAL,GAAoBhB,KAApB;AACA,WAAKpB,OAAL,CAAazB,WAAb,GAA2B6C,KAA3B;AACH;AACD;;;;;;wBAGmB;AACf,aAAO,KAAKiB,aAAZ;AACH;AACD;;;;sBAGiBjB,K,EAAO;AACpB,WAAKiB,aAAL,GAAqBjB,KAArB;AACA,WAAKpB,OAAL,CAAaxB,YAAb,GAA4B4C,KAA5B;AACH;AACD;;;;;;;;;;;wBAQY;AACR,UAAI,KAAKO,GAAL,CAAS4B,QAAT,CAAkBpP,OAAlB,CAA0B,IAA1B,MAAoC,CAAC,CAAzC,EAA4C;AACxC,eAAOqN,SAAS,CAACgC,OAAjB;AACH,OAFD,MAGK;AACD,eAAO,KAAKhF,YAAL,KAAsB,IAAtB,GACDgD,SAAS,CAACiC,SADT,GAEDjC,SAAS,CAACkC,MAFhB;AAGH;AACJ;;;wBACgB;AACb,UAAI,KAAKnF,WAAT,EAAsB;AAClB,YAAMoF,YAAY,GAAG,KAAKC,iBAAL,EAArB;AACA,eAAOD,YAAY,CAACL,QAApB;AACH,OAHD,MAIK;AACD,cAAM,IAAIjO,KAAJ,CAAU,iDAAV,CAAN;AACH;AACJ;AACD;;;;;;wBAGc;AACV,UAAI,KAAKqN,QAAT,EAAmB;AACf,eAAO,KAAKA,QAAZ;AACH,OAFD,MAGK;AACD,cAAM,IAAIrN,KAAJ,CAAU,2CAAV,CAAN;AACH;AACJ;;;4BAjFcsM,G,EAAKf,M,EAAQ;AACxB,UAAM/C,IAAI,GAAG,IAAIqE,IAAJ,CAAS;AAClBP,QAAAA,GAAG,EAAHA,GADkB;AAElBjC,QAAAA,EAAE,EAAEkB,MAFc;AAGlBrC,QAAAA,WAAW,EAAE,IAHK;AAIlBC,QAAAA,YAAY,EAAE;AAJI,OAAT,CAAb;AAMAX,MAAAA,IAAI,CAACgG,OAAL;AACA,aAAOhG,IAAP;AACH;;;;KA4LL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA;;;;;IAGMiG,W;AACF;;;;;;;AAOA,uBAAY7C,YAAZ,EAA0BrB,YAA1B,EAAwCkC,OAAxC,EAAiD;AAAA;;AAC7C,SAAKb,YAAL,GAAoBA,YAApB;AACA,SAAKrB,YAAL,GAAoBA,YAApB;AACA,SAAKkC,OAAL,GAAeA,OAAf;AACH;AACD;;;;;;;;;gCAKmB;AACf,aAAO,IAAIgC,WAAJ,CAAgB,WAAhB,EAA6B,WAA7B,EAA0C,EAA1C,CAAP;AACH;AACD;;;;;;;;;;;+BAQkBpR,G,EAAK;AACnB,aAAO,IAAIoR,WAAJ,CAAgB,SAAhB,EAA2B,SAA3B,EAAsC;AAAEpR,QAAAA,GAAG,EAAHA;AAAF,OAAtC,CAAP;AACH;AACD;;;;;;;;;;;iCAQoBA,G,EAAK;AACrB,aAAO,IAAIoR,WAAJ,CAAgB,SAAhB,EAA2B,SAA3B,EAAsC;AAAEpR,QAAAA,GAAG,EAAHA;AAAF,OAAtC,CAAP;AACH;AACD;;;;;;;;;2BAMcA,G,EAAK;AACf,aAAO,IAAIoR,WAAJ,CAAgB,SAAhB,EAA2B,SAA3B,EAAsC;AAAEpR,QAAAA,GAAG,EAAHA;AAAF,OAAtC,CAAP;AACH;AACD;;;;;;;;;;;kCAQqBwO,K,EAAOC,Q,EAAU;AAClC,aAAO,IAAI2C,WAAJ,CAAgB,gBAAhB,EAAkC,gBAAlC,EAAoD;AACvDC,QAAAA,QAAQ,EAAE7C,KAD6C;AAEvDC,QAAAA,QAAQ,EAARA;AAFuD,OAApD,CAAP;AAIH;AACD;;;;;;;;;8BAMgBW,O,EAAS;AACrB,aAAO,IAAIgC,WAAJ,CAAgB,iBAAhB,EAAmC,iBAAnC,EAAsDhC,OAAtD,CAAP;AACH;AACD;;;;;;;;;wBAMWV,K,EAAO;AACd,aAAO,IAAI0C,WAAJ,CAAgB,cAAhB,EAAgC,cAAhC,EAAgD;AACnD1C,QAAAA,KAAK,EAALA;AADmD,OAAhD,CAAP;AAGH;AACD;;;;;;;;;2BAMc4C,qB,EAAuB;AACjC,aAAO,IAAIF,WAAJ,CAAgB,eAAhB,EAAiC,eAAjC,EAAkDE,qBAAqB,CAACC,QAAtB,CAA+B,KAA/B,IACnD;AAAEC,QAAAA,WAAW,EAAEF;AAAf,OADmD,GAEnD;AAAEG,QAAAA,QAAQ,EAAEH;AAAZ,OAFC,CAAP;AAGH;AACD;;;;;;;;;6BAMgBI,wB,EAA0B;AACtC,aAAO,IAAIN,WAAJ,CAAgB,iBAAhB,EAAmC,iBAAnC,EAAsDM,wBAAwB,CAACH,QAAzB,CAAkC,KAAlC,IACvD;AAAEC,QAAAA,WAAW,EAAEE;AAAf,OADuD,GAEvD;AAAE7F,QAAAA,WAAW,EAAE6F;AAAf,OAFC,CAAP;AAGH;AACD;;;;;;;;;0BAMaC,oB,EAAsB;AAC/B,aAAO,IAAIP,WAAJ,CAAgB,cAAhB,EAAgC,cAAhC,EAAgDO,oBAAoB,CAACJ,QAArB,CAA8B,KAA9B,IACjD;AAAEC,QAAAA,WAAW,EAAEG;AAAf,OADiD,GAEjD;AACE;AACAC,QAAAA,QAAQ,EAAED;AAFZ,OAFC,CAAP;AAMH;;;;KAGL;;AACA;;;;;IAGME,iB;AACF;;;;;;;;AAQA,6BAAYvR,SAAZ,EAAuBE,WAAvB,EAAoCsR,YAApC,EAAkDC,cAAlD,EAAkE;AAAA;;AAC9D,SAAKjC,SAAL,GAAiBzP,gBAAgB,CAAC0P,MAAjB,CAAwBzP,SAAxB,EAAmC;AAChDE,MAAAA,WAAW,EAAXA;AADgD,KAAnC,CAAjB;AAGA,SAAKsR,YAAL,GAAoBA,YAApB;AACA,SAAKC,cAAL,GAAsBA,cAAtB;AACH;AACD;;;;;2BACgC;AAAA,UAA3BC,MAA2B,uEAAlB,EAAkB;AAAA,UAAdC,OAAc,uEAAJ,EAAI;AAC5B,aAAO,KAAKnC,SAAL,CAAeoC,IAAf,CAAoB;AACvBC,QAAAA,QAAQ,EAAE,KAAKL,YADQ;AAEvBM,QAAAA,UAAU,EAAE,KAAKL,cAFM;AAGvBM,QAAAA,KAAK,EAAEL,MAHgB;AAIvBM,QAAAA,OAAO,EAAEL,OAAO,CAACM,UAJM;AAKvBC,QAAAA,IAAI,EAAEP,OAAO,CAACO,IALS;AAMvBC,QAAAA,KAAK,EAAER,OAAO,CAACQ;AANQ,OAApB,CAAP;AAQH;AACD;;;;8BACmC;AAAA,UAA3BT,MAA2B,uEAAlB,EAAkB;AAAA,UAAdC,OAAc,uEAAJ,EAAI;AAC/B,aAAO,KAAKnC,SAAL,CAAe4C,OAAf,CAAuB;AAC1BP,QAAAA,QAAQ,EAAE,KAAKL,YADW;AAE1BM,QAAAA,UAAU,EAAE,KAAKL,cAFS;AAG1BM,QAAAA,KAAK,EAAEL,MAHmB;AAI1BM,QAAAA,OAAO,EAAEL,OAAO,CAACM,UAJS;AAK1BC,QAAAA,IAAI,EAAEP,OAAO,CAACO;AALY,OAAvB,CAAP;AAOH;AACD;;;;uCACoD;AAAA,UAAnCR,MAAmC,uEAA1B,EAA0B;AAAA,UAAtBW,MAAsB;AAAA,UAAdV,OAAc,uEAAJ,EAAI;AAChD,aAAO,KAAKnC,SAAL,CAAe8C,gBAAf,CAAgC;AACnCT,QAAAA,QAAQ,EAAE,KAAKL,YADoB;AAEnCM,QAAAA,UAAU,EAAE,KAAKL,cAFkB;AAGnCC,QAAAA,MAAM,EAANA,MAHmC;AAInCW,QAAAA,MAAM,EAANA,MAJmC;AAKnCH,QAAAA,IAAI,EAAEP,OAAO,CAACO,IALqB;AAMnCD,QAAAA,UAAU,EAAEN,OAAO,CAACM,UANe;AAOnCM,QAAAA,MAAM,EAAEZ,OAAO,CAACY,MAPmB;AAQnCC,QAAAA,iBAAiB,EAAEb,OAAO,CAACa;AARQ,OAAhC,CAAP;AAUH;AACD;;;;wCAC0D;AAAA,UAAxCd,MAAwC,uEAA/B,EAA+B;AAAA,UAA3Be,WAA2B;AAAA,UAAdd,OAAc,uEAAJ,EAAI;AACtD,aAAO,KAAKnC,SAAL,CAAekD,iBAAf,CAAiC;AACpCb,QAAAA,QAAQ,EAAE,KAAKL,YADqB;AAEpCM,QAAAA,UAAU,EAAE,KAAKL,cAFmB;AAGpCC,QAAAA,MAAM,EAAEA,MAH4B;AAIpCW,QAAAA,MAAM,EAAEI,WAJ4B;AAKpCP,QAAAA,IAAI,EAAEP,OAAO,CAACO,IALsB;AAMpCD,QAAAA,UAAU,EAAEN,OAAO,CAACM,UANgB;AAOpCM,QAAAA,MAAM,EAAEZ,OAAO,CAACY,MAPoB;AAQpCC,QAAAA,iBAAiB,EAAEb,OAAO,CAACa;AARS,OAAjC,CAAP;AAUH;AACD;;;;uCAC4C;AAAA,UAA3Bd,MAA2B,uEAAlB,EAAkB;AAAA,UAAdC,OAAc,uEAAJ,EAAI;AACxC,aAAO,KAAKnC,SAAL,CAAekD,iBAAf,CAAiC;AACpCb,QAAAA,QAAQ,EAAE,KAAKL,YADqB;AAEpCM,QAAAA,UAAU,EAAE,KAAKL,cAFmB;AAGpCC,QAAAA,MAAM,EAANA,MAHoC;AAIpCQ,QAAAA,IAAI,EAAEP,OAAO,CAACO,IAJsB;AAKpCD,QAAAA,UAAU,EAAEN,OAAO,CAACM;AALgB,OAAjC,CAAP;AAOH;AACD;;;;8BACUU,Q,EAAU;AAChB,aAAO,KAAKnD,SAAL,CAAeoD,SAAf,CAAyB;AAC5Bf,QAAAA,QAAQ,EAAE,KAAKL,YADa;AAE5BM,QAAAA,UAAU,EAAE,KAAKL,cAFW;AAG5BkB,QAAAA,QAAQ,EAARA;AAH4B,OAAzB,CAAP;AAKH;AACD;;;;4BACiC;AAAA,UAA3BjB,MAA2B,uEAAlB,EAAkB;AAAA,UAAdC,OAAc,uEAAJ,EAAI;AAC7B,aAAO,KAAKnC,SAAL,CAAeqD,KAAf,CAAqB;AACxBhB,QAAAA,QAAQ,EAAE,KAAKL,YADS;AAExBM,QAAAA,UAAU,EAAE,KAAKL,cAFO;AAGxBM,QAAAA,KAAK,EAAEL,MAHiB;AAIxBS,QAAAA,KAAK,EAAER,OAAO,CAACQ;AAJS,OAArB,CAAP;AAMH;AACD;;;;8BACUW,Q,EAAU;AAChB,aAAO,KAAKtD,SAAL,CAAeuD,SAAf,CAAyB;AAC5BlB,QAAAA,QAAQ,EAAE,KAAKL,YADa;AAE5BM,QAAAA,UAAU,EAAE,KAAKL,cAFW;AAG5BqB,QAAAA,QAAQ,EAARA;AAH4B,OAAzB,CAAP;AAKH;AACD;;;;+BACWE,S,EAAW;AAClB,aAAO,KAAKxD,SAAL,CAAeyD,UAAf,CAA0B;AAC7BpB,QAAAA,QAAQ,EAAE,KAAKL,YADc;AAE7BM,QAAAA,UAAU,EAAE,KAAKL,cAFY;AAG7BuB,QAAAA,SAAS,EAATA;AAH6B,OAA1B,CAAP;AAKH;AACD;;;;gCACuB;AAAA,UAAbtB,MAAa,uEAAJ,EAAI;AACnB,aAAO,KAAKlC,SAAL,CAAe0D,SAAf,CAAyB;AAC5BrB,QAAAA,QAAQ,EAAE,KAAKL,YADa;AAE5BM,QAAAA,UAAU,EAAE,KAAKL,cAFW;AAG5BM,QAAAA,KAAK,EAAEL;AAHqB,OAAzB,CAAP;AAKH;AACD;;;;iCACwB;AAAA,UAAbA,MAAa,uEAAJ,EAAI;AACpB,aAAO,KAAKlC,SAAL,CAAe2D,UAAf,CAA0B;AAC7BtB,QAAAA,QAAQ,EAAE,KAAKL,YADc;AAE7BM,QAAAA,UAAU,EAAE,KAAKL,cAFY;AAG7BM,QAAAA,KAAK,EAAEL;AAHsB,OAA1B,CAAP;AAKH;AACD;;;;8BACUA,M,EAAQW,M,EAAsB;AAAA,UAAdV,OAAc,uEAAJ,EAAI;AACpC,aAAO,KAAKnC,SAAL,CAAe4D,SAAf,CAAyB;AAC5BvB,QAAAA,QAAQ,EAAE,KAAKL,YADa;AAE5BM,QAAAA,UAAU,EAAE,KAAKL,cAFW;AAG5BM,QAAAA,KAAK,EAAEL,MAHqB;AAI5BW,QAAAA,MAAM,EAANA,MAJ4B;AAK5BE,QAAAA,MAAM,EAAEZ,OAAO,CAACY;AALY,OAAzB,CAAP;AAOH;AACD;;;;+BACWb,M,EAAQW,M,EAAsB;AAAA,UAAdV,OAAc,uEAAJ,EAAI;AACrC,aAAO,KAAKnC,SAAL,CAAe6D,UAAf,CAA0B;AAC7BxB,QAAAA,QAAQ,EAAE,KAAKL,YADc;AAE7BM,QAAAA,UAAU,EAAE,KAAKL,cAFY;AAG7BM,QAAAA,KAAK,EAAEL,MAHsB;AAI7BW,QAAAA,MAAM,EAANA,MAJ6B;AAK7BE,QAAAA,MAAM,EAAEZ,OAAO,CAACY;AALa,OAA1B,CAAP;AAOH;AACD;;;;4BACQ;AACJ,YAAM,IAAIlQ,KAAJ,CAAU,qBAAV,CAAN;AACH;;;;;AAEL;;;;;;;;;;;;AAUA,SAASiR,gBAAT,CAA0BtT,SAA1B,EAAqCE,WAArC,EAAkDsR,YAAlD,EAAgEC,cAAhE,EAAgF;AAC5E,SAAO,IAAIF,iBAAJ,CAAsBvR,SAAtB,EAAiCE,WAAjC,EAA8CsR,YAA9C,EAA4DC,cAA5D,CAAP;AACH;AACD;;;;;;;;;;;AASA,SAAS8B,cAAT,CAAwBvT,SAAxB,EAAmCE,WAAnC,EAAgDsR,YAAhD,EAA8D;AAC1D,SAAO;AACHM,IAAAA,UAAU,EAAEwB,gBAAgB,CAACjS,IAAjB,CAAsB,IAAtB,EAA4BrB,SAA5B,EAAuCE,WAAvC,EAAoDsR,YAApD;AADT,GAAP;AAGH;AACD;;;;;;;;;;AAQA,SAASgC,aAAT,CAAuBxT,SAAvB,EAA4D;AAAA,MAA1BE,WAA0B,uEAAZ,UAAY;AACxD,SAAO;AAAEuT,IAAAA,EAAE,EAAEF,cAAc,CAAClS,IAAf,CAAoB,IAApB,EAA0BrB,SAA1B,EAAqCE,WAArC;AAAN,GAAP;AACH,C,CAED;AACA;;AACA;;;;;;;IAKMwT,W;AACF;;;;;;AAMA,uBAAY1T,SAAZ,EAA6C;AAAA,QAAtBE,WAAsB,uEAAR,MAAQ;;AAAA;;AACzC,SAAKsP,SAAL,GAAiBzP,gBAAgB,CAAC0P,MAAjB,CAAwBzP,SAAxB,EAAmC;AAChDE,MAAAA,WAAW,EAAXA;AADgD,KAAnC,CAAjB;AAGH;AACD;;;;;;;;;;;wBAOIqH,G,EAAmB;AAAA,UAAdoK,OAAc,uEAAJ,EAAI;AACnB,aAAO,KAAKnC,SAAL,CAAezO,GAAf;AAAqBwG,QAAAA,GAAG,EAAHA;AAArB,SAA6BoK,OAA7B,EAAP;AACH;AACD;;;;;;;;;;yBAOKpK,G,EAAmB;AAAA,UAAdoK,OAAc,uEAAJ,EAAI;AACpB,aAAO,KAAKnC,SAAL,CAAemE,IAAf;AAAsBpM,QAAAA,GAAG,EAAHA;AAAtB,SAA8BoK,OAA9B,EAAP;AACH;AACD;;;;;;;;;;wBAOIpK,G,EAAmB;AAAA,UAAdoK,OAAc,uEAAJ,EAAI;AACnB,aAAO,KAAKnC,SAAL,CAAeoE,GAAf;AAAqBrM,QAAAA,GAAG,EAAHA;AAArB,SAA6BoK,OAA7B,EAAP;AACH;AACD;;;;;;;;;;4BAOOpK,G,EAAmB;AAAA,UAAdoK,OAAc,uEAAJ,EAAI;AACtB,aAAO,KAAKnC,SAAL,CAAeqE,MAAf;AAAwBtM,QAAAA,GAAG,EAAHA;AAAxB,SAAgCoK,OAAhC,EAAP;AACH;AACD;;;;;;;;;;yBAOKpK,G,EAAmB;AAAA,UAAdoK,OAAc,uEAAJ,EAAI;AACpB,aAAO,KAAKnC,SAAL,CAAesE,IAAf;AAAsBvM,QAAAA,GAAG,EAAHA;AAAtB,SAA8BoK,OAA9B,EAAP;AACH;AACD;;;;;;;;;;0BAOMpK,G,EAAmB;AAAA,UAAdoK,OAAc,uEAAJ,EAAI;AACrB,aAAO,KAAKnC,SAAL,CAAeuE,KAAf;AAAuBxM,QAAAA,GAAG,EAAHA;AAAvB,SAA+BoK,OAA/B,EAAP;AACH;;;;;AAEL;;;;;;;;;;AAQA,SAASqC,eAAT,CAAyBhU,SAAzB,EAA0D;AAAA,MAAtBE,WAAsB,uEAAR,MAAQ;AACtD,SAAO,IAAIwT,WAAJ,CAAgB1T,SAAhB,EAA2BE,WAA3B,CAAP;AACH,C,CAED;;AACA;;;;;;;;AAMA,SAASuP,MAAT,CAAgBzP,SAAhB,EAA2B;AACvB,SAAO;AACHiU,IAAAA,OAAO,EAAET,aAAa,CAACnS,IAAd,CAAmB,IAAnB,EAAyBrB,SAAzB,CADN;AAEHkU,IAAAA,IAAI,EAAEF,eAAe,CAAC3S,IAAhB,CAAqB,IAArB,EAA2BrB,SAA3B;AAFH,GAAP;AAIH,C,CAED;;;AACA,IAAMmU,oBAAoB,GAAG,SAA7B;AACA;;;;IAGMC,U;;;;;AACF;;;;;;AAMA,sBAAYpH,OAAZ,EAAqB5F,KAArB,EAA4B;AAAA;;AAAA,8BAClB4F,OADkB,gBACF5F,KADE;AAE3B;AACD;;;;;;;;;iCAKa;AACT,UAAI;AACA,YAAMiN,aAAa,GAAG,KAAKtT,GAAL,CAASoT,oBAAT,CAAtB;AACA,YAAMG,OAAO,GAAGD,aAAa,GAAG7K,IAAI,CAACuE,KAAL,CAAWsG,aAAX,CAAH,GAA+B,EAA5D;;AACA,YAAIrV,KAAK,CAACC,OAAN,CAAcqV,OAAd,CAAJ,EAA4B;AACxB;AACA;AACA,oCAAW,IAAIC,GAAJ,CAAQD,OAAR,CAAX;AACH,SAJD,MAKK;AACD,gBAAM,IAAIjS,KAAJ,CAAU,mBAAV,CAAN;AACH;AACJ,OAXD,CAYA,OAAOmS,GAAP,EAAY;AACR;AACA,aAAKpH,MAAL,CAAY+G,oBAAZ;AACA,cAAMK,GAAN;AACH;AACJ;AACD;;;;;;;;;;+BAOWF,O,EAASG,iB,EAAmB;AACnC,UAAIA,iBAAJ,EAAuB;AACnB;AACA,YAAMC,WAAW,GAAG,KAAKC,UAAL,EAApB;;AAFmB,oDAGFD,WAHE;AAAA;;AAAA;AAGnB,iEAA8B;AAAA,gBAAnBhI,EAAmB;;AAC1B,gBAAI4H,OAAO,CAACnT,OAAR,CAAgBuL,EAAhB,MAAwB,CAAC,CAA7B,EAAgC;AAC5B4H,cAAAA,OAAO,CAACM,IAAR,CAAalI,EAAb;AACH;AACJ;AAPkB;AAAA;AAAA;AAAA;AAAA;AAQtB,OATkC,CAUnC;;;AACA,WAAKS,GAAL,CAASgH,oBAAT,EAA+B3K,IAAI,CAACC,SAAL,CAAe6K,OAAf,CAA/B;AACH;AACD;;;;;;;;iCAKa1G,M,EAAQ;AACjB,UAAM8G,WAAW,GAAG,KAAKC,UAAL,EAApB;AACA,UAAML,OAAO,GAAGI,WAAW,CAAChD,MAAZ,CAAmB,UAAAhF,EAAE;AAAA,eAAIA,EAAE,KAAKkB,MAAX;AAAA,OAArB,CAAhB,CAFiB,CAGjB;;AACA,WAAKiH,UAAL,CAAgBP,OAAhB,EAAyB,KAAzB;AACH;;;;EAhEoBvH,e,GAmEzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA;;;;;;;;;AAOA,SAAS+H,oBAAT,CAA8B9R,MAA9B,EAAsC+R,QAAtC,EAAgD;AAC5C,MAAIC,MAAM,GAAG,EAAb;;AACA,OAAK,IAAIlS,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGE,MAApB,EAA4BF,CAAC,EAA7B,EAAiC;AAC7BkS,IAAAA,MAAM,IAAID,QAAQ,CAACE,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACE,MAAL,KAAgBJ,QAAQ,CAAC/R,MAApC,CAAD,CAAlB;AACH;;AACD,SAAOgS,MAAP;AACH;AACD;;;;;;;;AAMA,SAASI,iBAAT,CAA2BC,MAA3B,EAAmC;AAC/B,SAAO7V,MAAM,CAACC,OAAP,CAAe4V,MAAf,EACFnW,GADE,CACE;AAAA;AAAA,QAAEoW,CAAF;AAAA,QAAK7O,CAAL;;AAAA,WAAY,CAAC6O,CAAD,EAAIC,kBAAkB,CAAC9O,CAAD,CAAtB,CAAZ;AAAA,GADF,EAEFvH,GAFE,CAEE;AAAA;AAAA,QAAEoW,CAAF;AAAA,QAAK7O,CAAL;;AAAA,qBAAe6O,CAAf,cAAoB7O,CAApB;AAAA,GAFF,EAGFxC,IAHE,CAGG,GAHH,CAAP;AAIH;AACD;;;;;;;;AAMA,SAASuR,iBAAT,CAA2BC,GAA3B,EAAgC;AAC5B,SAAOjW,MAAM,CAACkW,WAAP,CAAmBD,GAAG,CACxB5F,KADqB,CACf,GADe,EAErB3Q,GAFqB,CAEjB,UAAAyW,GAAG;AAAA,WAAIA,GAAG,CAAC9F,KAAJ,CAAU,GAAV,CAAJ;AAAA,GAFc,EAGrB3Q,GAHqB,CAGjB;AAAA;AAAA,QAAEoW,CAAF;AAAA,QAAK7O,CAAL;;AAAA,WAAY,CAAC6O,CAAD,EAAIM,kBAAkB,CAACnP,CAAD,CAAtB,CAAZ;AAAA,GAHiB,CAAnB,CAAP;AAIH,C,CAED;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA,IAAIoP,WAAW,GAAG,IAAlB;AACA;;;;;;;AAMA,SAASC,cAAT,CAAwB7M,CAAxB,EAA2B;AACvB4M,EAAAA,WAAW,GAAG5M,CAAd;AACH;AACD;;;;;;;AAKA,SAAS8M,cAAT,GAA0B;AACtB,MAAIF,WAAJ,EAAiB;AACb,WAAOA,WAAP;AACH,GAFD,MAGK;AACD,UAAM,IAAIxT,KAAJ,CAAU,wCAAV,CAAN;AACH;AACJ,C,CAED;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA,IAAM2T,iBAAiB,GAAG,4BAA1B;AACA,IAAMC,oBAAoB,GAAG,GAA7B,C,CAAkC;;AAClC;;AACA,IAAMC,uBAAuB,GAAG;AAC5BC,EAAAA,qBAAqB,EAAE,OADK;AAE5BC,EAAAA,mBAAmB,EAAE,OAFO;AAG5BC,EAAAA,UAAU,EAAE,UAHgB;AAI5BC,EAAAA,QAAQ,EAAE,UAJkB;AAK5BC,EAAAA,YAAY,EAAE,MALc;AAM5BC,EAAAA,UAAU,EAAE,MANgB;AAO5BC,EAAAA,aAAa,EAAE,OAPa;AAQ5BC,EAAAA,WAAW,EAAE,OARe;AAS5BC,EAAAA,aAAa,EAAE,OATa;AAU5BC,EAAAA,WAAW,EAAE;AAVe,CAAhC;AAYA;;AACA;;;;IAGMC,Y;AACF;;;;;;;AAOA,wBAAY7J,OAAZ,EAAqB8J,SAArB,EAA0E;AAAA,QAA1CC,UAA0C,uEAA7BhB,cAAc,GAAGgB,UAAY;;AAAA;;AACtE,SAAK/J,OAAL,GAAeA,OAAO,CAAC3B,MAAR,CAAe,QAAf,CAAf;AACA,SAAKyL,SAAL,GAAiBA,SAAjB;AACA,SAAKC,UAAL,GAAkBA,UAAlB;AACH;AACD;;;;;;;;;;;AA8CA;;;;;;;kGAMenI,W;;;;;;;;AACX;AACMoI,gBAAAA,K,GAAQ,KAAKC,aAAL,E;AACRC,gBAAAA,Y,GAAe,KAAKC,eAAL,CAAqBH,KAArB,C;;uBACH,KAAKI,iBAAL,CAAuBxI,WAAvB,EAAoCoI,KAApC,C;;;AAAZzP,gBAAAA,G;mDAEC,IAAI8P,OAAJ,CAAY,UAACC,OAAD,EAAUC,MAAV,EAAqB;AACpC,sBAAIC,cAAc,GAAG,IAArB,CADoC,CAEpC;;AACA,sBAAIC,oBAAJ,CAHoC,CAGV;;AAC1B,sBAAMC,mBAAmB,GAAG,SAAtBA,mBAAsB,GAAM;AAC9B;AACA,wBAAM1C,MAAM,GAAGkC,YAAY,CAACnW,GAAb,CAAiB,QAAjB,CAAf;;AACA,wBAAIiU,MAAJ,EAAY;AACR,0BAAM2C,YAAY,GAAGnO,IAAI,CAACuE,KAAL,CAAWiH,MAAX,CAArB,CADQ,CAER;;AACAkC,sBAAAA,YAAY,CAACU,cAAb,CAA4BF,mBAA5B,EAHQ,CAIR;;AACAR,sBAAAA,YAAY,CAAC7J,KAAb,GALQ,CAMR;;AACA,0BAAI;AACA,4BAAImK,cAAJ,EAAoB;AAChB;AACAK,0BAAAA,aAAa,CAACJ,oBAAD,CAAb;AACAD,0BAAAA,cAAc,CAACM,KAAf;AACH;AACJ,uBAND,CAOA,OAAOtD,GAAP,EAAY;AACRuD,wBAAAA,OAAO,CAACC,IAAR,2CAAgDxD,GAAhD;AACH,uBATD,SAUQ;AACJ8C,wBAAAA,OAAO,CAACK,YAAD,CAAP;AACH;AACJ;AACJ,mBAxBD,CAJoC,CA6BpC;;;AACAT,kBAAAA,YAAY,CAAC3J,WAAb,CAAyBmK,mBAAzB,EA9BoC,CA+BpC;;AACAF,kBAAAA,cAAc,GAAG,MAAI,CAACT,UAAL,CAAgBxP,GAAhB,CAAjB,CAhCoC,CAiCpC;;AACAkQ,kBAAAA,oBAAoB,GAAGQ,WAAW,CAAC,YAAM;AACrC,wBAAIT,cAAc,IAAIA,cAAc,CAACU,MAArC,EAA6C;AACzCL,sBAAAA,aAAa,CAACJ,oBAAD,CAAb,CADyC,CAEzC;;AACAP,sBAAAA,YAAY,CAACU,cAAb,CAA4BF,mBAA5B,EAHyC,CAIzC;;AACA,0BAAMlD,IAAG,GAAG,IAAInS,KAAJ,CAAU,eAAV,CAAZ;;AACAkV,sBAAAA,MAAM,CAAC/C,IAAD,CAAN;AACH;AACJ,mBATiC,EAS/ByB,oBAT+B,CAAlC;AAUH,iBA5CM,C;;;;;;;;;;;;;;;;AA8CX;;;;;;;;;;;2GAOwBrH,W,EAAaoI,K;;;;;;AACzB9F,gBAAAA,W,GAAgBtC,WAAW,CAACE,O,CAA5BoC,W;;uBACa,KAAK4F,SAAL,E;;;AAAfqB,gBAAAA,M;AACAC,gBAAAA,E,GAAKhD,iBAAiB,CAAC;AACzBiD,kBAAAA,QAAQ,EAAEnH,WADe;AAEzB8F,kBAAAA,KAAK,EAALA;AAFyB,iBAAD,C;6DAIlBmB,M,6BAAyBvJ,WAAW,CAACX,Y,oBAAsBmK,E;;;;;;;;;;;;;;;;AAEzE;;;;;;;;mCAKepD,M,EAAQ;AAAA,UACXgC,KADW,GACMhC,MADN,CACXgC,KADW;AAAA,UACJtP,KADI,GACMsN,MADN,CACJtN,KADI;;AAEnB,UAAI,OAAOsP,KAAP,KAAiB,QAArB,EAA+B;AAC3B,YAAMhK,OAAO,GAAG,KAAKmK,eAAL,CAAqBH,KAArB,CAAhB;AACAhK,QAAAA,OAAO,CAACG,GAAR,CAAY,QAAZ,EAAsB3D,IAAI,CAACC,SAAL,CAAeuL,MAAf,CAAtB;AACH,OAHD,MAIK,IAAItN,KAAJ,EAAW;AACZ,cAAM,IAAIrF,KAAJ,gDAAkDqF,KAAlD,EAAN;AACH,OAFI,MAGA;AACD,cAAM,IAAIrF,KAAJ,CAAU,sCAAV,CAAN;AACH;AACJ;AACD;;;;;;;;oCAKgB;AACZ,aAAOyS,oBAAoB,CAAC,EAAD,EAAKkB,iBAAL,CAA3B;AACH;AACD;;;;;;;;;oCAMgBgB,K,EAAO;AACnB,aAAO,KAAKhK,OAAL,CAAa3B,MAAb,iBAA6B2L,KAA7B,OAAP;AACH;;;0CApJ4BsB,W,EAAa;AACtC,UAAMjD,MAAM,GAAGG,iBAAiB,CAAC8C,WAAD,CAAhC;AACA,UAAMtD,MAAM,GAAG,EAAf;;AACA,2CAAqBxV,MAAM,CAACC,OAAP,CAAeyW,uBAAf,CAArB,wCAA8D;AAAA;AAAA,YAAlDjV,CAAkD;AAAA,YAA/C6H,CAA+C;;AAC1D,YAAMnJ,KAAK,GAAG0V,MAAM,CAACpU,CAAD,CAApB;;AACA,YAAItB,KAAJ,EAAW;AACPqV,UAAAA,MAAM,CAAClM,CAAD,CAAN,GAAYnJ,KAAZ;AACH;AACJ;;AACD,aAAOqV,MAAP;AACH;AACD;;;;;;;;;mCAMsBsD,W,EAAwD;AAAA,UAA3CtL,OAA2C,uEAAjC+I,cAAc,GAAGwC,cAAgB;AAC1E,UAAMC,MAAM,GAAG,IAAI3B,YAAJ,CAAiB7J,OAAjB,wEAA0B;AAAA;AAAA;AAAA;AAAA;AAAA,sBAC/B,IAAI3K,KAAJ,CAAU,iDAAV,CAD+B;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAA1B,GAAf;AAGA,UAAM2S,MAAM,GAAG6B,YAAY,CAAC4B,qBAAb,CAAmCH,WAAnC,CAAf;AACAE,MAAAA,MAAM,CAACE,cAAP,CAAsB1D,MAAtB;AACH;AACD;;;;;;;;;mCAMsB2D,Q,EAAU;AAC5B,UAAM/I,KAAK,GAAG,CAAC+I,QAAQ,IAAI,EAAb,EAAiB9I,KAAjB,CAAuB,GAAvB,CAAd;;AACA,UAAID,KAAK,CAAC5M,MAAN,KAAiB,CAArB,EAAwB;AAAA,oCACkC4M,KADlC;AAAA,YACbrE,WADa;AAAA,YACAC,YADA;AAAA,YACcoC,MADd;AAAA,YACsBgL,QADtB;;AAEpB,eAAO;AAAErN,UAAAA,WAAW,EAAXA,WAAF;AAAeC,UAAAA,YAAY,EAAZA,YAAf;AAA6BoC,UAAAA,MAAM,EAANA,MAA7B;AAAqCgL,UAAAA,QAAQ,EAARA;AAArC,SAAP;AACH,OAHD,MAIK;AACD,cAAM,IAAIvW,KAAJ,CAAU,iDAAV,CAAN;AACH;AACJ;;;;KAgHL;;AACA;;;;;IAGMwW,G;AACF;;;;;AAKA,eAAYC,iBAAZ,EAA+B;AAAA;;AAAA;;AAC3B;;;;AAIA,SAAKC,KAAL,GAAa,EAAb,CAL2B,CAM3B;;AACA,QAAMC,aAAa,GAAG,OAAOF,iBAAP,KAA6B,QAA7B,GAChB;AAAEpM,MAAAA,EAAE,EAAEoM;AAAN,KADgB,GAEhBA,iBAFN,CAP2B,CAU3B;;AACA,QAAI,OAAOE,aAAP,KAAyB,QAAzB,IACA,OAAOA,aAAa,CAACtM,EAArB,KAA4B,QADhC,EAC0C;AACtC,WAAKA,EAAL,GAAUsM,aAAa,CAACtM,EAAxB;AACH,KAHD,MAIK;AACD,YAAM,IAAIrK,KAAJ,CAAU,gCAAV,CAAN;AACH;;AAjB0B,QAkBnBrC,SAlBmB,GAkBoCgZ,aAlBpC,CAkBnBhZ,SAlBmB;AAAA,QAkBRgN,OAlBQ,GAkBoCgM,aAlBpC,CAkBRhM,OAlBQ;AAAA,QAkBC9C,OAlBD,GAkBoC8O,aAlBpC,CAkBC9O,OAlBD;AAAA,gCAkBoC8O,aAlBpC,CAkBUC,aAlBV;AAAA,QAkBUA,aAlBV,sCAkB0B,IAlB1B,0BAmB3B;;AACA,SAAK3J,aAAL,GAAqB,IAAItF,aAAJ,CAAkBhK,SAAlB,EAA6BkK,OAAO,IAAI2O,GAAG,CAACK,gBAA5C,EAA8DD,aAAa,GAAG,IAAH,GAAUrZ,SAArF,CAArB;AACA,SAAKiP,YAAL,GAAoB,KAAKS,aAAL,CAAmBjE,MAAnB,gBAAkC,KAAKqB,EAAvC,EAApB;AACA,QAAMyM,aAAa,GAAG,IAAIxO,sBAAJ,CAA2B,KAAKkE,YAAhC,EAA8C,IAA9C,CAAtB,CAtB2B,CAuB3B;;AACA,SAAKW,SAAL,GAAiBzP,gBAAgB,CAAC0P,MAAjB,CAAwB0J,aAAxB,CAAjB,CAxB2B,CAyB3B;;AACA,SAAKC,QAAL,GAAgB3J,MAAM,CAAC0J,aAAD,CAAtB,CA1B2B,CA2B3B;;AACA,SAAKE,iBAAL,GAAyB,IAAIrL,iBAAJ,CAAsBmL,aAAtB,CAAzB,CA5B2B,CA6B3B;;AACA,QAAMG,WAAW,GAAGtM,OAAO,IAAI+I,cAAc,GAAGwC,cAAhD;AACA,SAAKvL,OAAL,GAAe,IAAIoH,UAAJ,CAAekF,WAAf,EAA4B,KAAK5M,EAAjC,CAAf,CA/B2B,CAgC3B;;AACA,SAAK6M,MAAL,GAAc,IAAI1C,YAAJ,CAAiByC,WAAjB,wEAA8B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBAClB,MAAI,CAAChK,aAAL,CAAmB/E,gBAAnB,CAAoC,KAApC,CADkB;;AAAA;AAClCL,cAAAA,OADkC;AAAA,2DAE9BA,OAF8B,kBAEf,MAAI,CAACwC,EAFU;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAA9B,GAAd,CAjC2B,CAqC3B;;AACA,SAAKmE,OAAL;AACH;AACD;;;;;;;;;+BAKW2I,Q,EAAU;AACjB,UAAMC,KAAK,GAAG,KAAKV,KAAL,CAAWW,SAAX,CAAqB,UAAAhW,CAAC;AAAA,eAAIA,CAAC,KAAK8V,QAAV;AAAA,OAAtB,CAAd;;AACA,UAAIC,KAAK,KAAK,CAAC,CAAf,EAAkB;AACd,cAAM,IAAIpX,KAAJ,CAAU,yCAAV,CAAN;AACH,OAJgB,CAKjB;;;AALiB,+BAMF,KAAK0W,KAAL,CAAWY,MAAX,CAAkBF,KAAlB,EAAyB,CAAzB,CANE;AAAA;AAAA,UAMV5O,IANU,2BAOjB;;;AACA,WAAKkO,KAAL,CAAWa,OAAX,CAAmB/O,IAAnB;AACH;AACD;;;;;;;;;;gGAMY+D,W;;;;;;;;AAAaiL,gBAAAA,Y,iEAAe,I;;uBACjB,KAAKnL,YAAL,CAAkBE,WAAlB,C;;;AAAb/D,gBAAAA,I;AACN;AACA,qBAAKiP,UAAL,CAAgBjP,IAAhB,E,CACA;;qBACIgP,Y;;;;;;uBACMhP,IAAI,CAACkP,cAAL,E;;;AAEV;AACA;AACA,qBAAK/M,OAAL,CAAa6H,UAAb,CAAwB,KAAKkE,KAAL,CAAW7Z,GAAX,CAAe,UAAAwE,CAAC;AAAA,yBAAIA,CAAC,CAACgJ,EAAN;AAAA,iBAAhB,CAAxB,EAAmD,IAAnD,E,CACA;;mDACO7B,I;;;;;;;;;;;;;;;;AAEX;;;;;;;oGAGiBA,I;;;;;;AACb;AACM4O,gBAAAA,K,GAAQ,KAAKV,KAAL,CAAWW,SAAX,CAAqB,UAAAhW,CAAC;AAAA,yBAAIA,CAAC,KAAKmH,IAAV;AAAA,iBAAtB,C;;sBACV4O,KAAK,KAAK,CAAC,C;;;;;sBACL,IAAIpX,KAAJ,CAAU,yCAAV,C;;;AAEV,qBAAK0W,KAAL,CAAWY,MAAX,CAAkBF,KAAlB,EAAyB,CAAzB,E,CACA;;;uBACM5O,IAAI,CAACmP,MAAL,E;;;AACN;AACA,qBAAKhN,OAAL,CAAaI,MAAb,gBAA4BvC,IAAI,CAAC6B,EAAjC,gB,CACA;;AACA,qBAAKM,OAAL,CAAaiN,YAAb,CAA0BpP,IAAI,CAAC6B,EAA/B;;;;;;;;;;;;;;;;AAEJ;;;;;;;;;AA6CA;;;;;;;uGAMmBkC,W;;;;;;;sBACXA,WAAW,CAAChC,YAAZ,CAAyBxE,UAAzB,CAAoC,QAApC,KACA,OAAOwG,WAAW,CAACE,OAAZ,CAAoBoC,WAA3B,KAA2C,Q;;;;;;uBAEtB,KAAKqI,MAAL,CAAYW,QAAZ,CAAqBtL,WAArB,C;;;AAAfoG,gBAAAA,M;wCACyC6B,YAAY,CAACsD,cAAb,CAA4BnF,MAAM,CAACoF,QAAnC,C,EAAvCxM,M,yBAAAA,M,EAAQrC,W,yBAAAA,W,EAAaC,Y,yBAAAA,Y;mDACtB,KAAK6O,kBAAL,CAAwBzM,MAAxB,EAAgCrC,WAAhC,EAA6CC,YAA7C,C;;;;uBAGyCkD,cAAY,CAAC,IAAD,EAAOE,WAAP,C;;;;AAApDlC,gBAAAA,E,wBAAAA,E;AAAInB,gBAAAA,Y,wBAAAA,W;AAAaC,gBAAAA,a,wBAAAA,Y;mDAClB,KAAK6O,kBAAL,CAAwB3N,EAAxB,EAA4BnB,YAA5B,EAAyCC,aAAzC,C;;;;;;;;;;;;;;;;AAGf;;;;;;;;;;;;uCASmBoC,M,EAAQrC,W,EAAaC,Y,EAAc;AAClD,UAAM8O,YAAY,GAAG,KAAKvB,KAAL,CAAWnH,IAAX,CAAgB,UAAAlO,CAAC;AAAA,eAAIA,CAAC,CAACgJ,EAAF,KAASkB,MAAb;AAAA,OAAjB,CAArB;;AACA,UAAI0M,YAAJ,EAAkB;AACd;AACAA,QAAAA,YAAY,CAAC/O,WAAb,GAA2BA,WAA3B;AACA+O,QAAAA,YAAY,CAAC9O,YAAb,GAA4BA,YAA5B;AACA,eAAO8O,YAAP;AACH,OALD,MAMK;AACD;AACA,YAAMzP,IAAI,GAAG,IAAIqE,IAAJ,CAAS;AAClBP,UAAAA,GAAG,EAAE,IADa;AAElBjC,UAAAA,EAAE,EAAEkB,MAFc;AAGlBrC,UAAAA,WAAW,EAAXA,WAHkB;AAIlBC,UAAAA,YAAY,EAAZA;AAJkB,SAAT,CAAb;AAMA,aAAKuN,KAAL,CAAWa,OAAX,CAAmB/O,IAAnB;AACA,eAAOA,IAAP;AACH;AACJ;AACD;;;;;;8BAGU;AAAA;;AACN,UAAI;AACA,YAAMyJ,OAAO,GAAG,KAAKtH,OAAL,CAAa2H,UAAb,EAAhB;AACA,aAAKoE,KAAL,GAAazE,OAAO,CAACpV,GAAR,CAAY,UAAAwN,EAAE;AAAA,iBAAIwC,IAAI,CAAC2B,OAAL,CAAa,MAAb,EAAmBnE,EAAnB,CAAJ;AAAA,SAAd,CAAb;AACH,OAHD,CAIA,OAAO8H,GAAP,EAAY;AACR;AACA,aAAKxH,OAAL,CAAaK,KAAb;AACA,cAAMmH,GAAN;AACH;AACJ;;;wBArGiB;AACd,UAAM+F,WAAW,GAAG,KAAKxB,KAAL,CAAWrH,MAAX,CAAkB,UAAA7G,IAAI;AAAA,eAAIA,IAAI,CAACmM,KAAL,KAAexI,SAAS,CAACkC,MAA7B;AAAA,OAAtB,CAApB;;AACA,UAAI6J,WAAW,CAACvX,MAAZ,KAAuB,CAA3B,EAA8B;AAC1B,eAAO,IAAP;AACH,OAFD,MAGK;AACD;AACA,eAAOuX,WAAW,CAAC,CAAD,CAAlB;AACH;AACJ;AACD;;;;;;;;;;wBAOe;AACX;AACA,UAAMA,WAAW,GAAG,KAAKxB,KAAL,CAAWrH,MAAX,CAAkB,UAAA7G,IAAI;AAAA,eAAIA,IAAI,CAACW,YAAL,KAAsB,IAA1B;AAAA,OAAtB,CAApB;AACA,UAAMgP,cAAc,GAAG,KAAKzB,KAAL,CAAWrH,MAAX,CAAkB,UAAA7G,IAAI;AAAA,eAAIA,IAAI,CAACW,YAAL,KAAsB,IAA1B;AAAA,OAAtB,CAAvB,CAHW,CAIX;;AACA,aAAOhM,MAAM,CAACib,MAAP,8BAAkBF,WAAlB,sBAAkCC,cAAlC,GAAP;AACH;AACD;;;;;;;;wBAKe;AACX;AACA,UAAI,CAAC,KAAKE,SAAV,EAAqB;AACjB,aAAKA,SAAL,GAAiB,KAAKpL,aAAL,CAAmB7O,KAAnB,CAAyB;AACtCC,UAAAA,MAAM,EAAE,KAD8B;AAEtCC,UAAAA,IAAI,iBAAU,KAAK+L,EAAf,cAFkC;AAGtCpC,UAAAA,cAAc,EAAE;AAHsB,SAAzB,CAAjB;AAKH;;AACD,aAAO,KAAKoQ,SAAZ;AACH;;;;;AAgEL;;;;;AAGA7B,GAAG,CAAC/H,WAAJ,GAAkBA,WAAlB;AACA;;;;AAGA+H,GAAG,CAACK,gBAAJ,GAAuB,4BAAvB,C,CAEA;;AACA,IAAMyB,QAAQ,GAAG,EAAjB;AACA;;;;;;;AAMA,SAASC,MAAT,CAAgBlO,EAAhB,EAAoB;AAChB,MAAIA,EAAE,IAAIiO,QAAV,EAAoB;AAChB,WAAOA,QAAQ,CAACjO,EAAD,CAAf;AACH,GAFD,MAGK;AACD,QAAMmO,QAAQ,GAAG,IAAIhC,GAAJ,CAAQnM,EAAR,CAAjB;AACAiO,IAAAA,QAAQ,CAACjO,EAAD,CAAR,GAAemO,QAAf;AACA,WAAOA,QAAP;AACH;AACJ,C,CAED;;AACA;;;;;IAGMC,Y;AACF;;;AAGA,0BAAc;AAAA;;AACV,QAAI,OAAOpZ,MAAP,KAAkB,QAAtB,EAAgC;AAC5B,WAAKA,MAAL,GAAcA,MAAd;AACH,KAFD,MAGK;AACD,YAAM,IAAIW,KAAJ,CAAU,wDAAV,CAAN;AACH;AACJ;AACD;;;;;wBACI3C,G,EAAK;AACL,aAAO,KAAKgC,MAAL,CAAYqZ,YAAZ,CAAyBC,OAAzB,CAAiCtb,GAAjC,CAAP;AACH;AACD;;;;wBACIA,G,EAAKC,K,EAAO;AACZ,aAAO,KAAK+B,MAAL,CAAYqZ,YAAZ,CAAyBE,OAAzB,CAAiCvb,GAAjC,EAAsCC,KAAtC,CAAP;AACH;AACD;;;;2BACOD,G,EAAK;AACR,aAAO,KAAKgC,MAAL,CAAYqZ,YAAZ,CAAyBG,UAAzB,CAAoCxb,GAApC,CAAP;AACH;AACD;;;;2BACOuN,O,EAAS;AACZ,aAAO,IAAIF,eAAJ,CAAoB,IAApB,EAA0BE,OAA1B,CAAP;AACH;AACD;;;;0BACM5B,M,EAAQ;AACV,UAAM8P,IAAI,GAAG,EAAb,CADU,CAEV;;AACA,WAAK,IAAIrY,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAG,KAAKpB,MAAL,CAAYqZ,YAAZ,CAAyB/X,MAA7C,EAAqDF,CAAC,EAAtD,EAA0D;AACtD,YAAMpD,GAAG,GAAG,KAAKgC,MAAL,CAAYqZ,YAAZ,CAAyBrb,GAAzB,CAA6BoD,CAA7B,CAAZ;;AACA,YAAIpD,GAAG,KAAK,CAAC2L,MAAD,IAAW3L,GAAG,CAAC0I,UAAJ,CAAeiD,MAAf,CAAhB,CAAP,EAAgD;AAC5C8P,UAAAA,IAAI,CAACvG,IAAL,CAAUlV,GAAV;AACH;AACJ,OARS,CASV;;;AACA,gCAAkByb,IAAlB,6BAAwB;AAAnB,YAAMzb,KAAG,aAAT;AACD,aAAKgC,MAAL,CAAYqZ,YAAZ,CAAyBG,UAAzB,CAAoCxb,KAApC;AACH;AACJ;AACD;;;;gCACY4N,Q,EAAU;AAClB,aAAO,KAAK5L,MAAL,CAAY0Z,gBAAZ,CAA6B,SAA7B,EAAwC9N,QAAxC,CAAP;AACH;AACD;;;;mCACeA,Q,EAAU;AACrB,aAAO,KAAK5L,MAAL,CAAY2Z,mBAAZ,CAAgC,SAAhC,EAA2C/N,QAA3C,CAAP;AACH;;;;KAGL;;;AACA,IAAMgO,aAAa,GAAG;AAClB/C,EAAAA,cAAc,EAAE,IAAIuC,YAAJ,GAAmBzP,MAAnB,CAA0B,WAA1B,CADE;AAElB0L,EAAAA,UAAU,EAAE,oBAAAxP,GAAG;AAAA,WAAI7F,MAAM,CAAC6Z,IAAP,CAAYhU,GAAZ,CAAJ;AAAA;AAFG,CAAtB;AAIAuO,cAAc,CAACwF,aAAD,CAAd;AACA;;;;;;;AAMA,SAASE,kBAAT,GAAgG;AAAA,MAApE/Q,QAAoE,uEAAzD/I,MAAM,CAAC+I,QAAkD;AAAA,MAAxCuC,OAAwC,uEAA9BsO,aAAa,CAAC/C,cAAgB;;AAC5F,MAAI;AACA,QAAMD,WAAW,GAAG7N,QAAQ,CAACgR,IAAT,CAAcC,MAAd,CAAqB,CAArB,CAApB,CADA,CAC6C;;AAC7C7E,IAAAA,YAAY,CAAC6B,cAAb,CAA4BJ,WAA5B,EAAyCtL,OAAzC;AACH,GAHD,CAIA,OAAOwH,GAAP,EAAY;AACR;AACAuD,IAAAA,OAAO,CAACC,IAAR,CAAaxD,GAAb;AACH;AACJ;;AAED,SAASqE,GAAT,EAAc/H,WAAd,EAA2BgK,YAA3B,EAAyCxT,iBAAzC,EAA4D4H,IAA5D,EAAkEV,SAAlE,EAA6EC,UAAU,IAAIhD,QAA3F,EAAqGmP,MAArG,EAA6G7E,cAA7G,EAA6HyF,kBAA7H,EAAiJ9M,cAAY,IAAZA,YAAjJ,EAA+JoH,cAA/J","sourcesContent":["import { EJSON } from 'bson';\n\n////////////////////////////////////////////////////////////////////////////\n/**\n * Serialize an object containing BSON types into extended-JSON.\n *\n * @param obj The object containing BSON types.\n * @returns The document in extended-JSON format.\n */\nfunction serialize(obj) {\n    return EJSON.serialize(obj);\n}\n/**\n * De-serialize an object or an array of object from extended-JSON into an object or an array of object with BSON types.\n *\n * @param obj The object or array of objects in extended-JSON format.\n * @returns The object or array of objects with inflated BSON types.\n */\nfunction deserialize(obj) {\n    if (Array.isArray(obj)) {\n        return obj.map(doc => EJSON.deserialize(doc));\n    }\n    else {\n        return EJSON.deserialize(obj);\n    }\n}\n\n////////////////////////////////////////////////////////////////////////////\n/**\n * A list of names that functions cannot have to be callable through the functions proxy.\n */\nconst RESERVED_NAMES = [\"inspect\", \"callFunction\"];\n/**\n * Remove the key for any fields with undefined values.\n *\n * @param args The arguments to clean.\n * @returns The cleaned arguments.\n */\nfunction cleanArgs(args) {\n    for (const arg of args) {\n        if (typeof arg === \"object\") {\n            for (const [key, value] of Object.entries(arg)) {\n                if (value === undefined) {\n                    delete arg[key];\n                }\n            }\n        }\n    }\n    return args;\n}\n/**\n * Remove keys for any undefined values and serialize to EJSON.\n *\n * @param args The arguments to clean and serialize.\n * @returns The cleaned and serialized arguments.\n */\nfunction cleanArgsAndSerialize(args) {\n    const cleaned = cleanArgs(args);\n    return cleaned.map(arg => (typeof arg === \"object\" ? serialize(arg) : arg));\n}\n/**\n * Defines how functions are called.\n */\nclass FunctionsFactory {\n    /**\n     * Construct a functions factory.\n     *\n     * @param transport The underlying transport to use when sending requests.\n     * @param config Additional configuration parameters.\n     */\n    constructor(transport, config = {}) {\n        this.transport = transport;\n        this.serviceName = config.serviceName;\n        this.argsTransformation =\n            config.argsTransformation || cleanArgsAndSerialize;\n        this.responseTransformation =\n            config.responseTransformation || deserialize;\n    }\n    /**\n     * Create a factory of functions, wrapped in a Proxy that returns bound copies of `callFunction` on any property.\n     *\n     * @param transport The underlying transport to use when requesting.\n     * @param config Additional configuration parameters.\n     * @returns The newly created factory of functions.\n     */\n    static create(transport, config = {}) {\n        // Create a proxy, wrapping a simple object returning methods that calls functions\n        // TODO: Lazily fetch available functions and return these from the ownKeys() trap\n        const factory = new FunctionsFactory(transport, config);\n        // Wrap the factory in a proxy that calls the internal call method\n        return new Proxy(factory, {\n            get(target, p, receiver) {\n                if (typeof p === \"string\" && RESERVED_NAMES.indexOf(p) === -1) {\n                    return target.callFunction.bind(target, p);\n                }\n                else {\n                    const prop = Reflect.get(target, p, receiver);\n                    return typeof prop === \"function\"\n                        ? prop.bind(target)\n                        : prop;\n                }\n            },\n        });\n    }\n    /**\n     * Call a remote function by it's name.\n     *\n     * @param name Name of the remote function.\n     * @param args Arguments to pass to the remote function.\n     * @returns A promise of the value returned when executing the remote function.\n     */\n    async callFunction(name, ...args) {\n        // See https://github.com/mongodb/stitch-js-sdk/blob/master/packages/core/sdk/src/services/internal/CoreStitchServiceClientImpl.ts\n        const body = {\n            name,\n            arguments: this.argsTransformation\n                ? this.argsTransformation(args)\n                : args,\n        };\n        if (this.serviceName) {\n            body.service = this.serviceName;\n        }\n        const response = await this.transport.fetch({\n            method: \"POST\",\n            path: \"/functions/call\",\n            body,\n        });\n        // Transform the response, if needed\n        if (this.responseTransformation) {\n            return this.responseTransformation(response);\n        }\n        else {\n            return response;\n        }\n    }\n}\n\nvar commonjsGlobal = typeof globalThis !== 'undefined' ? globalThis : typeof window !== 'undefined' ? window : typeof global !== 'undefined' ? global : typeof self !== 'undefined' ? self : {};\n\nfunction createCommonjsModule(fn, basedir, module) {\n\treturn module = {\n\t  path: basedir,\n\t  exports: {},\n\t  require: function (path, base) {\n      return commonjsRequire(path, (base === undefined || base === null) ? module.path : base);\n    }\n\t}, fn(module, module.exports), module.exports;\n}\n\nfunction commonjsRequire () {\n\tthrow new Error('Dynamic requires are not currently supported by @rollup/plugin-commonjs');\n}\n\nvar base64 = createCommonjsModule(function (module, exports) {\n(function (global, factory) {\n     module.exports = factory(global)\n        ;\n}((\n    typeof self !== 'undefined' ? self\n        : typeof window !== 'undefined' ? window\n        : typeof commonjsGlobal !== 'undefined' ? commonjsGlobal\n: commonjsGlobal\n), function(global) {\n    // existing version for noConflict()\n    global = global || {};\n    var _Base64 = global.Base64;\n    var version = \"2.6.3\";\n    // constants\n    var b64chars\n        = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/';\n    var b64tab = function(bin) {\n        var t = {};\n        for (var i = 0, l = bin.length; i < l; i++) t[bin.charAt(i)] = i;\n        return t;\n    }(b64chars);\n    var fromCharCode = String.fromCharCode;\n    // encoder stuff\n    var cb_utob = function(c) {\n        if (c.length < 2) {\n            var cc = c.charCodeAt(0);\n            return cc < 0x80 ? c\n                : cc < 0x800 ? (fromCharCode(0xc0 | (cc >>> 6))\n                                + fromCharCode(0x80 | (cc & 0x3f)))\n                : (fromCharCode(0xe0 | ((cc >>> 12) & 0x0f))\n                    + fromCharCode(0x80 | ((cc >>>  6) & 0x3f))\n                    + fromCharCode(0x80 | ( cc         & 0x3f)));\n        } else {\n            var cc = 0x10000\n                + (c.charCodeAt(0) - 0xD800) * 0x400\n                + (c.charCodeAt(1) - 0xDC00);\n            return (fromCharCode(0xf0 | ((cc >>> 18) & 0x07))\n                    + fromCharCode(0x80 | ((cc >>> 12) & 0x3f))\n                    + fromCharCode(0x80 | ((cc >>>  6) & 0x3f))\n                    + fromCharCode(0x80 | ( cc         & 0x3f)));\n        }\n    };\n    var re_utob = /[\\uD800-\\uDBFF][\\uDC00-\\uDFFFF]|[^\\x00-\\x7F]/g;\n    var utob = function(u) {\n        return u.replace(re_utob, cb_utob);\n    };\n    var cb_encode = function(ccc) {\n        var padlen = [0, 2, 1][ccc.length % 3],\n        ord = ccc.charCodeAt(0) << 16\n            | ((ccc.length > 1 ? ccc.charCodeAt(1) : 0) << 8)\n            | ((ccc.length > 2 ? ccc.charCodeAt(2) : 0)),\n        chars = [\n            b64chars.charAt( ord >>> 18),\n            b64chars.charAt((ord >>> 12) & 63),\n            padlen >= 2 ? '=' : b64chars.charAt((ord >>> 6) & 63),\n            padlen >= 1 ? '=' : b64chars.charAt(ord & 63)\n        ];\n        return chars.join('');\n    };\n    var btoa = global.btoa && typeof global.btoa == 'function'\n        ? function(b){ return global.btoa(b) } : function(b) {\n        if (b.match(/[^\\x00-\\xFF]/)) throw new RangeError(\n            'The string contains invalid characters.'\n        );\n        return b.replace(/[\\s\\S]{1,3}/g, cb_encode);\n    };\n    var _encode = function(u) {\n        return btoa(utob(String(u)));\n    };\n    var mkUriSafe = function (b64) {\n        return b64.replace(/[+\\/]/g, function(m0) {\n            return m0 == '+' ? '-' : '_';\n        }).replace(/=/g, '');\n    };\n    var encode = function(u, urisafe) {\n        return urisafe ? mkUriSafe(_encode(u)) : _encode(u);\n    };\n    var encodeURI = function(u) { return encode(u, true) };\n    var fromUint8Array;\n    if (global.Uint8Array) fromUint8Array = function(a, urisafe) {\n        // return btoa(fromCharCode.apply(null, a));\n        var b64 = '';\n        for (var i = 0, l = a.length; i < l; i += 3) {\n            var a0 = a[i], a1 = a[i+1], a2 = a[i+2];\n            var ord = a0 << 16 | a1 << 8 | a2;\n            b64 +=    b64chars.charAt( ord >>> 18)\n                +     b64chars.charAt((ord >>> 12) & 63)\n                + ( typeof a1 != 'undefined'\n                    ? b64chars.charAt((ord >>>  6) & 63) : '=')\n                + ( typeof a2 != 'undefined'\n                    ? b64chars.charAt( ord         & 63) : '=');\n        }\n        return urisafe ? mkUriSafe(b64) : b64;\n    };\n    // decoder stuff\n    var re_btou = /[\\xC0-\\xDF][\\x80-\\xBF]|[\\xE0-\\xEF][\\x80-\\xBF]{2}|[\\xF0-\\xF7][\\x80-\\xBF]{3}/g;\n    var cb_btou = function(cccc) {\n        switch(cccc.length) {\n        case 4:\n            var cp = ((0x07 & cccc.charCodeAt(0)) << 18)\n                |    ((0x3f & cccc.charCodeAt(1)) << 12)\n                |    ((0x3f & cccc.charCodeAt(2)) <<  6)\n                |     (0x3f & cccc.charCodeAt(3)),\n            offset = cp - 0x10000;\n            return (fromCharCode((offset  >>> 10) + 0xD800)\n                    + fromCharCode((offset & 0x3FF) + 0xDC00));\n        case 3:\n            return fromCharCode(\n                ((0x0f & cccc.charCodeAt(0)) << 12)\n                    | ((0x3f & cccc.charCodeAt(1)) << 6)\n                    |  (0x3f & cccc.charCodeAt(2))\n            );\n        default:\n            return  fromCharCode(\n                ((0x1f & cccc.charCodeAt(0)) << 6)\n                    |  (0x3f & cccc.charCodeAt(1))\n            );\n        }\n    };\n    var btou = function(b) {\n        return b.replace(re_btou, cb_btou);\n    };\n    var cb_decode = function(cccc) {\n        var len = cccc.length,\n        padlen = len % 4,\n        n = (len > 0 ? b64tab[cccc.charAt(0)] << 18 : 0)\n            | (len > 1 ? b64tab[cccc.charAt(1)] << 12 : 0)\n            | (len > 2 ? b64tab[cccc.charAt(2)] <<  6 : 0)\n            | (len > 3 ? b64tab[cccc.charAt(3)]       : 0),\n        chars = [\n            fromCharCode( n >>> 16),\n            fromCharCode((n >>>  8) & 0xff),\n            fromCharCode( n         & 0xff)\n        ];\n        chars.length -= [0, 0, 2, 1][padlen];\n        return chars.join('');\n    };\n    var _atob = global.atob && typeof global.atob == 'function'\n        ? function(a){ return global.atob(a) } : function(a){\n        return a.replace(/\\S{1,4}/g, cb_decode);\n    };\n    var atob = function(a) {\n        return _atob(String(a).replace(/[^A-Za-z0-9\\+\\/]/g, ''));\n    };\n    var _decode = function(a) { return btou(_atob(a)) };\n    var _fromURI = function(a) {\n        return String(a).replace(/[-_]/g, function(m0) {\n            return m0 == '-' ? '+' : '/'\n        }).replace(/[^A-Za-z0-9\\+\\/]/g, '');\n    };\n    var decode = function(a){\n        return _decode(_fromURI(a));\n    };\n    var toUint8Array;\n    if (global.Uint8Array) toUint8Array = function(a) {\n        return Uint8Array.from(atob(_fromURI(a)), function(c) {\n            return c.charCodeAt(0);\n        });\n    };\n    var noConflict = function() {\n        var Base64 = global.Base64;\n        global.Base64 = _Base64;\n        return Base64;\n    };\n    // export Base64\n    global.Base64 = {\n        VERSION: version,\n        atob: atob,\n        btoa: btoa,\n        fromBase64: decode,\n        toBase64: encode,\n        utob: utob,\n        encode: encode,\n        encodeURI: encodeURI,\n        btou: btou,\n        decode: decode,\n        noConflict: noConflict,\n        fromUint8Array: fromUint8Array,\n        toUint8Array: toUint8Array\n    };\n    // if ES5 is available, make Base64.extendString() available\n    if (typeof Object.defineProperty === 'function') {\n        var noEnum = function(v){\n            return {value:v,enumerable:false,writable:true,configurable:true};\n        };\n        global.Base64.extendString = function () {\n            Object.defineProperty(\n                String.prototype, 'fromBase64', noEnum(function () {\n                    return decode(this)\n                }));\n            Object.defineProperty(\n                String.prototype, 'toBase64', noEnum(function (urisafe) {\n                    return encode(this, urisafe)\n                }));\n            Object.defineProperty(\n                String.prototype, 'toBase64URI', noEnum(function () {\n                    return encode(this, true)\n                }));\n        };\n    }\n    //\n    // export Base64 to the namespace\n    //\n    if (global['Meteor']) { // Meteor.js\n        Base64 = global.Base64;\n    }\n    // module.exports and AMD are mutually exclusive.\n    // module.exports has precedence.\n    if ( module.exports) {\n        module.exports.Base64 = global.Base64;\n    }\n    // that's it!\n    return {Base64: global.Base64}\n}));\n});\n\n////////////////////////////////////////////////////////////////////////////\n//\n// Copyright 2020 Realm Inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n// http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n//\n////////////////////////////////////////////////////////////////////////////\n/**\n * Prefixes all request with a path prefix.\n */\nclass PrefixedTransport {\n    /**\n     * Constructs a transport that prefix the path of all requests performed.\n     *\n     * @param transport The underlying transport used to issue requests.\n     * @param pathPrefix The path being prefixed onto requests.\n     */\n    constructor(transport, pathPrefix) {\n        this.transport = transport;\n        this.pathPrefix = pathPrefix;\n    }\n    /** @inheritdoc */\n    fetch(request) {\n        const prefixedRequest = {\n            ...request,\n            path: `${this.pathPrefix}${request.path || \"\"}`,\n        };\n        return this.transport.fetch(prefixedRequest);\n    }\n    /** @inheritdoc */\n    prefix(pathPrefix) {\n        return new PrefixedTransport(this, pathPrefix);\n    }\n}\n\n////////////////////////////////////////////////////////////////////////////\n/**\n * A transport prefixing request paths with the path of the App id and ensuring the correct location is hit.\n */\nclass AppTransport {\n    /**\n     * Construct a transport that will prefix the app id to paths and determine location base URL.\n     *\n     * @param transport The base transport used to issue requests.\n     * @param appId The id of the app.\n     */\n    constructor(transport, appId) {\n        this.transport = transport;\n        this.appId = appId;\n    }\n    /** @inheritdoc */\n    async fetch(request) {\n        const { path, ...restOfRequest } = request;\n        return this.transport.fetch({\n            ...restOfRequest,\n            path: `/app/${this.appId}${path}`,\n        });\n    }\n    /** @inheritdoc */\n    prefix(pathPrefix) {\n        return new PrefixedTransport(this, pathPrefix);\n    }\n}\n\n////////////////////////////////////////////////////////////////////////////\n//\n// Copyright 2020 Realm Inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n// http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n//\n////////////////////////////////////////////////////////////////////////////\n/**\n * TODO: Determine if the shape of an error response is specific to each service or widely used\n */\nclass MongoDBRealmError extends Error {\n    constructor(method, url, statusCode, statusText, response) {\n        if (typeof response === \"object\" &&\n            typeof response.error === \"string\") {\n            const statusSummary = statusText\n                ? `status ${statusCode} ${statusText}`\n                : `status ${statusCode}`;\n            super(`Request failed (${method} ${url}): ${response.error} (${statusSummary})`);\n            this.method = method;\n            this.url = url;\n            this.statusText = statusText;\n            this.statusCode = statusCode;\n            this.errorCode = response.error_code;\n            this.link = response.link;\n        }\n        else {\n            throw new Error(\"Unexpected error response format\");\n        }\n    }\n}\n\n////////////////////////////////////////////////////////////////////////////\nclass DefaultNetworkTransport {\n    constructor() {\n        if (!DefaultNetworkTransport.fetch) {\n            throw new Error(\"DefaultNetworkTransport.fetch must be set before it's used\");\n        }\n        if (!DefaultNetworkTransport.AbortController) {\n            throw new Error(\"DefaultNetworkTransport.AbortController must be set before it's used\");\n        }\n    }\n    async fetchAndParse(request) {\n        try {\n            const response = await this.fetch(request);\n            const contentType = response.headers.get(\"content-type\");\n            if (response.ok) {\n                if (contentType === null) {\n                    return null;\n                }\n                else if (contentType.startsWith(\"application/json\")) {\n                    // Awaiting the response to ensure we'll throw our own error\n                    return await response.json();\n                }\n                else {\n                    throw new Error(\"Expected an empty or a JSON response\");\n                }\n            }\n            else if (contentType &&\n                contentType.startsWith(\"application/json\")) {\n                throw new MongoDBRealmError(request.method, request.url, response.status, response.statusText, await response.json());\n            }\n            else {\n                throw new Error(`Unexpected status code (${response.status} ${response.statusText})`);\n            }\n        }\n        catch (err) {\n            if (err instanceof MongoDBRealmError) {\n                throw err;\n            }\n            else {\n                throw new Error(`Request failed (${request.method} ${request.url}): ${err.message}`);\n            }\n        }\n    }\n    fetchWithCallbacks(request, handler) {\n        // tslint:disable-next-line: no-console\n        this.fetch(request)\n            .then(async (response) => {\n            const decodedBody = await response.text();\n            // Pull out the headers of the response\n            const responseHeaders = {};\n            response.headers.forEach((value, key) => {\n                responseHeaders[key] = value;\n            });\n            return {\n                statusCode: response.status,\n                headers: responseHeaders,\n                body: decodedBody,\n            };\n        })\n            .then(r => handler.onSuccess(r))\n            .catch(e => handler.onError(e));\n    }\n    async fetch(request) {\n        const { method, url, body, timeoutMs, headers = DefaultNetworkTransport.DEFAULT_HEADERS, } = request;\n        const { signal, cancelTimeout } = this.createTimeoutSignal(timeoutMs);\n        try {\n            // We'll await the response to catch throw our own error\n            return await DefaultNetworkTransport.fetch(url, {\n                method,\n                headers,\n                body: typeof body === \"string\" ? body : JSON.stringify(body),\n                signal,\n            });\n        }\n        finally {\n            // Whatever happens, cancel any timeout\n            cancelTimeout();\n        }\n    }\n    createTimeoutSignal(timeoutMs) {\n        if (typeof timeoutMs === \"number\") {\n            const controller = new DefaultNetworkTransport.AbortController();\n            // Call abort after a specific number of milliseconds\n            const timeout = setTimeout(() => {\n                controller.abort();\n            }, timeoutMs);\n            return {\n                signal: controller.signal,\n                cancelTimeout: () => {\n                    clearTimeout(timeout);\n                },\n            };\n        }\n        else {\n            return {\n                signal: undefined,\n                cancelTimeout: () => {\n                    /* No-op */\n                },\n            };\n        }\n    }\n}\nDefaultNetworkTransport.DEFAULT_HEADERS = {\n    Accept: \"application/json\",\n    \"Content-Type\": \"application/json\",\n};\n\n////////////////////////////////////////////////////////////////////////////\nDefaultNetworkTransport.fetch = window.fetch.bind(window);\nDefaultNetworkTransport.AbortController = window.AbortController;\n\n////////////////////////////////////////////////////////////////////////////\n/**\n * A basic transport, wrapping a NetworkTransport from the \"realm-network-transport\" package, injecting a baseUrl.\n */\nclass BaseTransport {\n    /**\n     * Constructs a base transport, which takes paths (prepended by a base URL) instead of absolute urls.\n     *\n     * @param networkTransport The underlying network transport.\n     * @param baseUrl The base URL to prepend to paths.\n     * @param locationContext Optional object used to determine the actual base URL of the app.\n     * @param baseRoute Optional base route to prepend to the base URL.\n     */\n    constructor(networkTransport = new DefaultNetworkTransport(), baseUrl, locationContext, baseRoute = BaseTransport.DEFAULT_BASE_ROUTE) {\n        this.networkTransport = networkTransport;\n        this.baseUrl = baseUrl;\n        this.locationContext = locationContext;\n        this.baseRoute = baseRoute;\n    }\n    /** @inheritdoc */\n    async fetch(request) {\n        const { path, headers, ignoreLocation = false, ...restOfRequest } = request;\n        // Determine the base url\n        const baseUrl = await this.determineBaseUrl(ignoreLocation);\n        // Execute the request\n        return this.networkTransport.fetchAndParse({\n            ...restOfRequest,\n            url: baseUrl + path,\n            headers: { ...BaseTransport.DEFAULT_HEADERS, ...headers },\n        });\n    }\n    /** @inheritdoc */\n    prefix(pathPrefix) {\n        return new PrefixedTransport(this, pathPrefix);\n    }\n    /**\n     * Determines the base URL from the configuration or from the location context.\n     *\n     * @param ignoreLocation Ignore the location context.\n     */\n    async determineBaseUrl(ignoreLocation) {\n        if (ignoreLocation || !this.locationContext) {\n            return this.baseUrl + this.baseRoute;\n        }\n        else {\n            const location = await this.locationContext.location;\n            return location.hostname + this.baseRoute;\n        }\n    }\n}\n/**\n * This base route will be prefixed requests issued through by the base transport.\n */\nBaseTransport.DEFAULT_BASE_ROUTE = \"/api/client/v2.0\";\n/**\n * Default headers that will always be sat on requests.\n */\nBaseTransport.DEFAULT_HEADERS = {\n    Accept: \"application/json\",\n    \"Content-Type\": \"application/json\",\n};\n\n////////////////////////////////////////////////////////////////////////////\n/**\n * Fetches resources as a particular user.\n */\nclass AuthenticatedTransport {\n    /**\n     * Constructs a transport that injects authorization headers to requests.\n     *\n     * @param transport The underlying transport.\n     * @param userContext The context controlling what user is authenticated.\n     */\n    constructor(transport, userContext) {\n        this.transport = transport;\n        this.userContext = userContext;\n    }\n    /**\n     * Fetch a network resource as an authenticated user.\n     *\n     * @param request The request to issue towards the server.\n     * @param user The user used when fetching, defaults to the `app.currentUser`.\n     *             If `null`, the fetch will be unauthenticated.\n     * @param retries How many times was this request retried?\n     * @returns A response from requesting with authentication.\n     */\n    async fetch(request, user = this.userContext.currentUser, retries = 0) {\n        try {\n            const { tokenType = \"access\", ...rest } = request;\n            // Awaiting to intercept errors being thrown\n            return await this.transport.fetch({\n                ...rest,\n                headers: {\n                    ...this.buildAuthorizationHeader(user, tokenType),\n                    ...request.headers,\n                },\n            });\n        }\n        catch (err) {\n            if (user &&\n                retries === 0 &&\n                err instanceof MongoDBRealmError &&\n                err.statusCode === 401) {\n                // Refresh the access token\n                await user.refreshAccessToken();\n                // Retry\n                return this.fetch(request, user, retries + 1);\n            }\n            throw err;\n        }\n    }\n    /** @inheritdoc */\n    prefix(pathPrefix) {\n        const prefixedTransport = this.transport.prefix(pathPrefix);\n        return new AuthenticatedTransport(prefixedTransport, this.userContext);\n    }\n    /**\n     * Generate an object with an authorization header to issue requests as a specific user.\n     *\n     * @param user An optional user to generate the header for.\n     * @param tokenType The type of token (access or refresh).\n     * @returns An object containing with the users access token as authorization header or undefined if no user is given.\n     */\n    buildAuthorizationHeader(user, tokenType) {\n        if (user && tokenType === \"access\") {\n            return { Authorization: `Bearer ${user.accessToken}` };\n        }\n        else if (user && tokenType === \"refresh\") {\n            return { Authorization: `Bearer ${user.refreshToken}` };\n        }\n    }\n}\n\n////////////////////////////////////////////////////////////////////////////\n//\n// Copyright 2020 Realm Inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n// http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n//\n////////////////////////////////////////////////////////////////////////////\n/**\n * The type of a user.\n */\nvar UserType;\n(function (UserType) {\n    /**\n     * A normal end-user created this user.\n     */\n    UserType[\"Normal\"] = \"normal\";\n    /**\n     * The user was created by the server.\n     */\n    UserType[\"Server\"] = \"server\";\n})(UserType || (UserType = {}));\n/** @ignore */\nvar DataKey;\n(function (DataKey) {\n    /** @ignore */\n    DataKey[\"NAME\"] = \"name\";\n    /** @ignore */\n    DataKey[\"EMAIL\"] = \"email\";\n    /** @ignore */\n    DataKey[\"PICTURE\"] = \"picture\";\n    /** @ignore */\n    DataKey[\"FIRST_NAME\"] = \"first_name\";\n    /** @ignore */\n    DataKey[\"LAST_NAME\"] = \"last_name\";\n    /** @ignore */\n    DataKey[\"GENDER\"] = \"gender\";\n    /** @ignore */\n    DataKey[\"BIRTHDAY\"] = \"birthday\";\n    /** @ignore */\n    DataKey[\"MIN_AGE\"] = \"min_age\";\n    /** @ignore */\n    DataKey[\"MAX_AGE\"] = \"max_age\";\n})(DataKey || (DataKey = {}));\nconst DATA_MAPPING = {\n    [DataKey.NAME]: \"name\",\n    [DataKey.EMAIL]: \"email\",\n    [DataKey.PICTURE]: \"pictureUrl\",\n    [DataKey.FIRST_NAME]: \"firstName\",\n    [DataKey.LAST_NAME]: \"lastName\",\n    [DataKey.GENDER]: \"gender\",\n    [DataKey.BIRTHDAY]: \"birthday\",\n    [DataKey.MIN_AGE]: \"minAge\",\n    [DataKey.MAX_AGE]: \"maxAge\",\n};\n/** @inheritdoc */\nclass UserProfile {\n    /**\n     * Construct a user profile from the body of a response.\n     *\n     * @param response The response of a call fetching the users profile.\n     */\n    constructor(response) {\n        /** @inheritdoc */\n        this.type = UserType.Normal;\n        /** @inheritdoc */\n        this.identities = [];\n        if (response) {\n            if (typeof response.type === \"string\") {\n                this.type = response.type;\n            }\n            else {\n                throw new Error(\"Expected 'type' in the response body\");\n            }\n            if (Array.isArray(response.identities)) {\n                this.identities = response.identities.map((identity) => {\n                    return {\n                        id: identity.id,\n                        providerId: identity[\"provider_id\"],\n                        providerType: identity[\"provider_type\"],\n                    };\n                });\n            }\n            else {\n                throw new Error(\"Expected 'identities' in the response body\");\n            }\n            const { data } = response;\n            if (typeof data === \"object\") {\n                for (const key in DATA_MAPPING) {\n                    const value = data[key];\n                    const propertyName = DATA_MAPPING[key];\n                    if (typeof value === \"string\" &&\n                        propertyName !== \"identities\" &&\n                        propertyName !== \"type\") {\n                        this[propertyName] = value;\n                    }\n                }\n            }\n            else {\n                throw new Error(\"Expected 'data' in the response body\");\n            }\n        }\n    }\n}\n\n////////////////////////////////////////////////////////////////////////////\n//\n// Copyright 2020 Realm Inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n// http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n//\n////////////////////////////////////////////////////////////////////////////\n/**\n * A `Storage` which will prefix a key part to every operation.\n */\nclass PrefixedStorage {\n    /**\n     * Construct a `Storage` which will prefix a key part to every operation.\n     *\n     * @param storage The underlying storage to use for operations.\n     * @param keyPart The part of the key to prefix when performing operations.\n     */\n    constructor(storage, keyPart) {\n        this.storage = storage;\n        this.keyPart = keyPart;\n    }\n    /** @inheritdoc */\n    get(key) {\n        return this.storage.get(this.keyPart + PrefixedStorage.PART_SEPARATOR + key);\n    }\n    /** @inheritdoc */\n    set(key, value) {\n        return this.storage.set(this.keyPart + PrefixedStorage.PART_SEPARATOR + key, value);\n    }\n    /** @inheritdoc */\n    remove(key) {\n        return this.storage.remove(this.keyPart + PrefixedStorage.PART_SEPARATOR + key);\n    }\n    /** @inheritdoc */\n    prefix(keyPart) {\n        return new PrefixedStorage(this, keyPart);\n    }\n    /** @inheritdoc */\n    clear(prefix = \"\") {\n        return this.storage.clear(this.keyPart + PrefixedStorage.PART_SEPARATOR + prefix);\n    }\n    /** @inheritdoc */\n    addListener(listener) {\n        return this.storage.addListener(listener);\n    }\n    /** @inheritdoc */\n    removeListener(listener) {\n        return this.storage.addListener(listener);\n    }\n}\n/**\n * The string separating two parts.\n */\nPrefixedStorage.PART_SEPARATOR = \":\";\n\n////////////////////////////////////////////////////////////////////////////\nconst ACCESS_TOKEN_STORAGE_KEY = \"accessToken\";\nconst REFRESH_TOKEN_STORAGE_KEY = \"refreshToken\";\nconst PROFILE_STORAGE_KEY = \"profile\";\n/**\n * Storage specific to the app.\n */\nclass UserStorage extends PrefixedStorage {\n    /**\n     * Construct a storage for a `User`.\n     *\n     * @param storage The underlying storage to wrap.\n     * @param userId The id of the user.\n     */\n    constructor(storage, userId) {\n        super(storage, `user(${userId})`);\n    }\n    /**\n     * Get the access token from storage.\n     *\n     * @returns Access token (null if unknown).\n     */\n    get accessToken() {\n        return this.get(ACCESS_TOKEN_STORAGE_KEY);\n    }\n    /**\n     * Set the access token in storage.\n     *\n     * @param value Access token (null if unknown).\n     */\n    set accessToken(value) {\n        if (value === null) {\n            this.remove(ACCESS_TOKEN_STORAGE_KEY);\n        }\n        else {\n            this.set(ACCESS_TOKEN_STORAGE_KEY, value);\n        }\n    }\n    /**\n     * Get the refresh token from storage.\n     *\n     * @returns Refresh token (null if unknown and user is logged out).\n     */\n    get refreshToken() {\n        return this.get(REFRESH_TOKEN_STORAGE_KEY);\n    }\n    /**\n     * Set the refresh token in storage.\n     *\n     * @param value Refresh token (null if unknown and user is logged out).\n     */\n    set refreshToken(value) {\n        if (value === null) {\n            this.remove(REFRESH_TOKEN_STORAGE_KEY);\n        }\n        else {\n            this.set(REFRESH_TOKEN_STORAGE_KEY, value);\n        }\n    }\n    /**\n     * Get the user profile from storage.\n     *\n     * @returns User profile (undefined if its unknown).\n     */\n    get profile() {\n        const value = this.get(PROFILE_STORAGE_KEY);\n        if (value) {\n            const profile = new UserProfile();\n            // Patch in the values\n            Object.assign(profile, JSON.parse(value));\n            return profile;\n        }\n    }\n    /**\n     * Set the user profile in storage.\n     *\n     * @param value User profile (undefined if its unknown).\n     */\n    set profile(value) {\n        if (!value) {\n            this.remove(PROFILE_STORAGE_KEY);\n        }\n        else {\n            this.set(PROFILE_STORAGE_KEY, JSON.stringify(value));\n        }\n    }\n}\n\n////////////////////////////////////////////////////////////////////////////\n//\n// Copyright 2020 Realm Inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n// http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n//\n////////////////////////////////////////////////////////////////////////////\n/** @inheritdoc */\nclass EmailPasswordAuth {\n    /**\n     * Construct an interface to the email / password authentication provider.\n     *\n     * @param transport The underlying transport used to request the services.\n     * @param providerName Optional custom name of the authentication provider.\n     */\n    constructor(transport, providerName = \"local-userpass\") {\n        this.transport = transport.prefix(`/auth/providers/${providerName}`);\n    }\n    /** @inheritdoc */\n    registerUser(email, password) {\n        return this.transport.fetch({\n            method: \"POST\",\n            path: \"/register\",\n            body: { email, password },\n        });\n    }\n    /** @inheritdoc */\n    confirmUser(token, tokenId) {\n        return this.transport.fetch({\n            method: \"POST\",\n            path: \"/confirm\",\n            body: { token, tokenId },\n        });\n    }\n    /** @inheritdoc */\n    resendConfirmationEmail(email) {\n        return this.transport.fetch({\n            method: \"POST\",\n            path: \"/confirm/send\",\n            body: { email },\n        });\n    }\n    /** @inheritdoc */\n    resetPassword(token, tokenId, password) {\n        return this.transport.fetch({\n            method: \"POST\",\n            path: \"/reset\",\n            body: { token, tokenId, password },\n        });\n    }\n    /** @inheritdoc */\n    sendResetPasswordEmail(email) {\n        return this.transport.fetch({\n            method: \"POST\",\n            path: \"/reset/send\",\n            body: { email },\n        });\n    }\n    /** @inheritdoc */\n    callResetPasswordFunction(email, password, ...args) {\n        return this.transport.fetch({\n            method: \"POST\",\n            path: \"/reset/call\",\n            body: { email, password, arguments: args },\n        });\n    }\n}\n\n////////////////////////////////////////////////////////////////////////////\n/** @inheritdoc */\nclass ApiKeyAuth {\n    /**\n     * Construct an interface to the API-key authentication provider.\n     *\n     * @param transport The transport used to send requests to services.\n     * @param providerName Optional custom name of the authentication provider.\n     */\n    constructor(transport, providerName = \"api-key\") {\n        this.transport = transport.prefix(\"/auth/api_keys\");\n    }\n    /** @inheritdoc */\n    create(name) {\n        return this.transport\n            .fetch({\n            method: \"POST\",\n            body: { name },\n            tokenType: \"refresh\",\n        })\n            .then(deserialize);\n    }\n    /** @inheritdoc */\n    fetch(keyId) {\n        return this.transport\n            .fetch({\n            method: \"GET\",\n            path: `/${keyId}`,\n            tokenType: \"refresh\",\n        })\n            .then(deserialize);\n    }\n    /** @inheritdoc */\n    fetchAll() {\n        return this.transport\n            .fetch({ method: \"GET\", tokenType: \"refresh\" })\n            .then(deserialize);\n    }\n    /** @inheritdoc */\n    delete(keyId) {\n        return this.transport\n            .fetch({\n            method: \"DELETE\",\n            path: `/${keyId}`,\n            tokenType: \"refresh\",\n        })\n            .then(deserialize);\n    }\n    /** @inheritdoc */\n    enable(keyId) {\n        return this.transport\n            .fetch({\n            method: \"PUT\",\n            path: `/${keyId}/enable`,\n            tokenType: \"refresh\",\n        })\n            .then(deserialize);\n    }\n    /** @inheritdoc */\n    disable(keyId) {\n        return this.transport\n            .fetch({\n            method: \"PUT\",\n            path: `/${keyId}/disable`,\n            tokenType: \"refresh\",\n        })\n            .then(deserialize);\n    }\n}\n\n////////////////////////////////////////////////////////////////////////////\nvar UserState;\n(function (UserState) {\n    UserState[\"Active\"] = \"active\";\n    UserState[\"LoggedOut\"] = \"logged-out\";\n    UserState[\"Removed\"] = \"removed\";\n})(UserState || (UserState = {}));\nvar UserType$1;\n(function (UserType) {\n    UserType[\"Normal\"] = \"normal\";\n    UserType[\"Server\"] = \"server\";\n})(UserType$1 || (UserType$1 = {}));\nasync function performLogIn(app, credentials) {\n    // See https://github.com/mongodb/stitch-js-sdk/blob/310f0bd5af80f818cdfbc3caf1ae29ffa8e9c7cf/packages/core/sdk/src/auth/internal/CoreStitchAuth.ts#L746-L780\n    const response = await app.appTransport.fetch({\n        method: \"POST\",\n        path: `/auth/providers/${credentials.providerName}/login`,\n        body: credentials.payload,\n    });\n    // Spread out values from the response and ensure they're valid\n    const { user_id: id, access_token: accessToken, refresh_token: refreshToken, } = response;\n    if (typeof id !== \"string\") {\n        throw new Error(\"Expected a user id in the response\");\n    }\n    if (typeof accessToken !== \"string\") {\n        throw new Error(\"Expected an access token in the response\");\n    }\n    if (typeof refreshToken !== \"string\") {\n        throw new Error(\"Expected a refresh token in the response\");\n    }\n    return { id, accessToken, refreshToken };\n}\n/**\n * Representation of an authenticated user of an app.\n */\nclass User {\n    constructor({ app, id, accessToken, refreshToken }) {\n        this.app = app;\n        this._id = id;\n        this._accessToken = accessToken;\n        this._refreshToken = refreshToken;\n        this.transport = new AuthenticatedTransport(app.baseTransport, {\n            currentUser: this,\n        });\n        const appTransport = new AppTransport(this.transport, app.id);\n        this.apiKeys = new ApiKeyAuth(this.transport);\n        this.functions = FunctionsFactory.create(appTransport);\n        this.storage = new UserStorage(app.storage, id);\n        // Store tokens in storage for later hydration\n        if (accessToken) {\n            this.storage.accessToken = accessToken;\n        }\n        if (refreshToken) {\n            this.storage.refreshToken = refreshToken;\n        }\n    }\n    /**\n     * Creates a user from the data stored in the storage of an `App` instance.\n     *\n     * @param app The app that the user was logged into.\n     * @param userId The id of the user to restore.\n     * @returns The user created from values retrieved from storage.\n     */\n    static hydrate(app, userId) {\n        const user = new User({\n            app,\n            id: userId,\n            accessToken: null,\n            refreshToken: null,\n        });\n        user.hydrate();\n        return user;\n    }\n    /**\n     * The automatically-generated internal id of the user.\n     *\n     * @returns The id of the user in the MongoDB Realm database.\n     */\n    get id() {\n        return this._id;\n    }\n    /**\n     * @returns The access token used to authenticate the user towards MongoDB Realm.\n     */\n    get accessToken() {\n        return this._accessToken;\n    }\n    /**\n     * @param token The new access token.\n     */\n    set accessToken(token) {\n        this._accessToken = token;\n        this.storage.accessToken = token;\n    }\n    /**\n     * @returns The refresh token used to issue new access tokens.\n     */\n    get refreshToken() {\n        return this._refreshToken;\n    }\n    /**\n     * @param token The new refresh token.\n     */\n    set refreshToken(token) {\n        this._refreshToken = token;\n        this.storage.refreshToken = token;\n    }\n    /**\n     * The state of the user is one of:\n     * - \"active\" The user is logged in and ready.\n     * - \"logged-out\" The user was logged in, but is no longer logged in.\n     * - \"removed\" The user was logged in, but removed entirely from the app again.\n     *\n     * @returns The current state of the user.\n     */\n    get state() {\n        if (this.app.allUsers.indexOf(this) === -1) {\n            return UserState.Removed;\n        }\n        else {\n            return this.refreshToken === null\n                ? UserState.LoggedOut\n                : UserState.Active;\n        }\n    }\n    get customData() {\n        if (this.accessToken) {\n            const decodedToken = this.decodeAccessToken();\n            return decodedToken.userData;\n        }\n        else {\n            throw new Error(\"Cannot read custom data without an access token\");\n        }\n    }\n    /**\n     * @returns Profile containing detailed information about the user.\n     */\n    get profile() {\n        if (this._profile) {\n            return this._profile;\n        }\n        else {\n            throw new Error(\"A profile was never fetched for this user\");\n        }\n    }\n    async refreshProfile() {\n        // Fetch the latest profile\n        const response = await this.transport.fetch({\n            method: \"GET\",\n            path: \"/auth/profile\",\n        });\n        // Create a profile instance\n        this._profile = new UserProfile(response);\n        // Store this for later hydration\n        this.storage.profile = this._profile;\n    }\n    async logOut() {\n        // Invalidate the refresh token\n        if (this._refreshToken !== null) {\n            await this.app.baseTransport.fetch({\n                method: \"DELETE\",\n                path: \"/auth/session\",\n                headers: {\n                    Authorization: `Bearer ${this._refreshToken}`,\n                },\n            });\n        }\n        // Forget the access and refresh token\n        this.accessToken = null;\n        this.refreshToken = null;\n    }\n    /**\n     * Authenticate and retrieve the access and refresh tokens.\n     *\n     * @param credentials Credentials to use when logging in.\n     */\n    async logIn(credentials) {\n        const { id, accessToken, refreshToken } = await performLogIn(this.app, credentials);\n        if (id !== this.id) {\n            throw new Error(\"Logged into a different user\");\n        }\n        // Store the access and refresh token\n        this.accessToken = accessToken;\n        this.refreshToken = refreshToken;\n    }\n    /** @inheritdoc */\n    async linkCredentials(credentials) {\n        throw new Error(\"Not yet implemented\");\n    }\n    async refreshAccessToken() {\n        const response = await this.app.baseTransport.fetch({\n            method: \"POST\",\n            path: \"/auth/session\",\n            headers: {\n                Authorization: `Bearer ${this.refreshToken}`,\n            },\n        });\n        const { access_token: accessToken } = response;\n        if (typeof accessToken === \"string\") {\n            this.accessToken = accessToken;\n        }\n        else {\n            throw new Error(\"Expected an 'access_token' in the response\");\n        }\n    }\n    async refreshCustomData() {\n        await this.refreshAccessToken();\n        return this.customData;\n    }\n    callFunction(name, ...args) {\n        return this.functions.callFunction(name, ...args);\n    }\n    /**\n     * Restore a user from the data stored in the storage of an `App` instance.\n     */\n    hydrate() {\n        // Hydrate tokens\n        const accessToken = this.storage.accessToken;\n        const refreshToken = this.storage.refreshToken;\n        const profile = this.storage.profile;\n        if (typeof accessToken === \"string\") {\n            this.accessToken = accessToken;\n        }\n        if (typeof refreshToken === \"string\") {\n            this.refreshToken = refreshToken;\n        }\n        if (typeof profile === \"object\") {\n            this._profile = profile;\n        }\n    }\n    push(serviceName = \"\") {\n        throw new Error(\"Not yet implemented\");\n    }\n    decodeAccessToken() {\n        if (this.accessToken) {\n            // Decode and spread the token\n            const parts = this.accessToken.split(\".\");\n            if (parts.length !== 3) {\n                throw new Error(\"Expected three parts\");\n            }\n            // Decode the payload\n            const encodedPayload = parts[1];\n            const decodedPayload = base64.Base64.decode(encodedPayload);\n            const parsedPayload = JSON.parse(decodedPayload);\n            const { exp: expires, iat: issuedAt, user_data: userData = {}, } = parsedPayload;\n            // Validate the types\n            if (typeof expires !== \"number\") {\n                throw new Error(\"Failed to decode access token 'exp'\");\n            }\n            else if (typeof issuedAt !== \"number\") {\n                throw new Error(\"Failed to decode access token 'iat'\");\n            }\n            return { expires, issuedAt, userData };\n        }\n        else {\n            throw new Error(\"Missing an access token\");\n        }\n    }\n}\n\n////////////////////////////////////////////////////////////////////////////\n//\n// Copyright 2020 Realm Inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n// http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n//\n////////////////////////////////////////////////////////////////////////////\n// TODO: Ensure the static interface of the Credentials class implements the static interface of Realm.Credentials\n// See https://stackoverflow.com/a/43484801\n/**\n * Instances of this class can be passed to the `app.logIn` method to authenticate an end-user.\n */\nclass Credentials {\n    /**\n     * Constructs an instance of credentials.\n     *\n     * @param providerName The name of the authentication provider used when authenticating.\n     * @param providerType The type of the authentication provider used when authenticating.\n     * @param payload The data being sent to the service when authenticating.\n     */\n    constructor(providerName, providerType, payload) {\n        this.providerName = providerName;\n        this.providerType = providerType;\n        this.payload = payload;\n    }\n    /**\n     * Creates credentials that logs in using the [Anonymous Provider](https://docs.mongodb.com/realm/authentication/anonymous/).\n     *\n     * @returns The credentials instance, which can be passed to `app.logIn`.\n     */\n    static anonymous() {\n        return new Credentials(\"anon-user\", \"anon-user\", {});\n    }\n    /**\n     * Creates credentials that logs in using the [API Key Provider](https://docs.mongodb.com/realm/authentication/api-key/).\n     *\n     * @deprecated Use `Credentials.apiKey`.\n     *\n     * @param key The secret content of the API key.\n     * @returns The credentials instance, which can be passed to `app.logIn`.\n     */\n    static userApiKey(key) {\n        return new Credentials(\"api-key\", \"api-key\", { key });\n    }\n    /**\n     * Creates credentials that logs in using the [API Key Provider](https://docs.mongodb.com/realm/authentication/api-key/).\n     *\n     * @deprecated Use `Credentials.apiKey`.\n     *\n     * @param key The secret content of the API key.\n     * @returns The credentials instance, which can be passed to `app.logIn`.\n     */\n    static serverApiKey(key) {\n        return new Credentials(\"api-key\", \"api-key\", { key });\n    }\n    /**\n     * Creates credentials that logs in using the [API Key Provider](https://docs.mongodb.com/realm/authentication/api-key/).\n     *\n     * @param key The secret content of the API key.\n     * @returns The credentials instance, which can be passed to `app.logIn`.\n     */\n    static apiKey(key) {\n        return new Credentials(\"api-key\", \"api-key\", { key });\n    }\n    /**\n     * Creates credentials that logs in using the [Email/Password Provider](https://docs.mongodb.com/realm/authentication/email-password/).\n     * Note: This was formerly known as the \"Username/Password\" provider.\n     *\n     * @param email The end-users email address.\n     * @param password The end-users password.\n     * @returns The credentials instance, which can be passed to `app.logIn`.\n     */\n    static emailPassword(email, password) {\n        return new Credentials(\"local-userpass\", \"local-userpass\", {\n            username: email,\n            password,\n        });\n    }\n    /**\n     * Creates credentials that logs in using the [Custom Function Provider](https://docs.mongodb.com/realm/authentication/custom-function/).\n     *\n     * @param payload The custom payload as expected by the server.\n     * @returns The credentials instance, which can be passed to `app.logIn`.\n     */\n    static function(payload) {\n        return new Credentials(\"custom-function\", \"custom-function\", payload);\n    }\n    /**\n     * Creates credentials that logs in using the [Custom JWT Provider](https://docs.mongodb.com/realm/authentication/custom-jwt/).\n     *\n     * @param token The JSON Web Token (JWT).\n     * @returns The credentials instance, which can be passed to `app.logIn`.\n     */\n    static jwt(token) {\n        return new Credentials(\"custom-token\", \"custom-token\", {\n            token,\n        });\n    }\n    /**\n     * Creates credentials that logs in using the [Google Provider](https://docs.mongodb.com/realm/authentication/google/).\n     *\n     * @param redirectUrlOrAuthCode The URL that users should be redirected to or the auth code returned from Google.\n     * @returns The credentials instance, which can be passed to `app.logIn`.\n     */\n    static google(redirectUrlOrAuthCode) {\n        return new Credentials(\"oauth2-google\", \"oauth2-google\", redirectUrlOrAuthCode.includes(\"://\")\n            ? { redirectUrl: redirectUrlOrAuthCode }\n            : { authCode: redirectUrlOrAuthCode });\n    }\n    /**\n     * Creates credentials that logs in using the [Facebook Provider](https://docs.mongodb.com/realm/authentication/facebook/).\n     *\n     * @param redirectUrlOrAccessToken The URL that users should be redirected to or the auth code returned from Facebook.\n     * @returns The credentials instance, which can be passed to `app.logIn`.\n     */\n    static facebook(redirectUrlOrAccessToken) {\n        return new Credentials(\"oauth2-facebook\", \"oauth2-facebook\", redirectUrlOrAccessToken.includes(\"://\")\n            ? { redirectUrl: redirectUrlOrAccessToken }\n            : { accessToken: redirectUrlOrAccessToken });\n    }\n    /**\n     * Creates credentials that logs in using the [Apple ID Provider](https://docs.mongodb.com/realm/authentication/apple/).\n     *\n     * @param redirectUrlOrIdToken The URL that users should be redirected to or the id_token returned from Apple.\n     * @returns The credentials instance, which can be passed to `app.logIn`.\n     */\n    static apple(redirectUrlOrIdToken) {\n        return new Credentials(\"oauth2-apple\", \"oauth2-apple\", redirectUrlOrIdToken.includes(\"://\")\n            ? { redirectUrl: redirectUrlOrIdToken }\n            : {\n                // eslint-disable-next-line @typescript-eslint/camelcase\n                id_token: redirectUrlOrIdToken,\n            });\n    }\n}\n\n////////////////////////////////////////////////////////////////////////////\n/**\n * A remote collection of documents.\n */\nclass MongoDBCollection {\n    /**\n     * Construct a remote collection of documents.\n     *\n     * @param transport The transport to use when requesting the service.\n     * @param serviceName The name of the remote service.\n     * @param databaseName The name of the database.\n     * @param collectionName The name of the remote collection.\n     */\n    constructor(transport, serviceName, databaseName, collectionName) {\n        this.functions = FunctionsFactory.create(transport, {\n            serviceName,\n        });\n        this.databaseName = databaseName;\n        this.collectionName = collectionName;\n    }\n    /** @inheritdoc */\n    find(filter = {}, options = {}) {\n        return this.functions.find({\n            database: this.databaseName,\n            collection: this.collectionName,\n            query: filter,\n            project: options.projection,\n            sort: options.sort,\n            limit: options.limit,\n        });\n    }\n    /** @inheritdoc */\n    findOne(filter = {}, options = {}) {\n        return this.functions.findOne({\n            database: this.databaseName,\n            collection: this.collectionName,\n            query: filter,\n            project: options.projection,\n            sort: options.sort,\n        });\n    }\n    /** @inheritdoc */\n    findOneAndUpdate(filter = {}, update, options = {}) {\n        return this.functions.findOneAndUpdate({\n            database: this.databaseName,\n            collection: this.collectionName,\n            filter,\n            update,\n            sort: options.sort,\n            projection: options.projection,\n            upsert: options.upsert,\n            returnNewDocument: options.returnNewDocument,\n        });\n    }\n    /** @inheritdoc */\n    findOneAndReplace(filter = {}, replacement, options = {}) {\n        return this.functions.findOneAndReplace({\n            database: this.databaseName,\n            collection: this.collectionName,\n            filter: filter,\n            update: replacement,\n            sort: options.sort,\n            projection: options.projection,\n            upsert: options.upsert,\n            returnNewDocument: options.returnNewDocument,\n        });\n    }\n    /** @inheritdoc */\n    findOneAndDelete(filter = {}, options = {}) {\n        return this.functions.findOneAndReplace({\n            database: this.databaseName,\n            collection: this.collectionName,\n            filter,\n            sort: options.sort,\n            projection: options.projection,\n        });\n    }\n    /** @inheritdoc */\n    aggregate(pipeline) {\n        return this.functions.aggregate({\n            database: this.databaseName,\n            collection: this.collectionName,\n            pipeline,\n        });\n    }\n    /** @inheritdoc */\n    count(filter = {}, options = {}) {\n        return this.functions.count({\n            database: this.databaseName,\n            collection: this.collectionName,\n            query: filter,\n            limit: options.limit,\n        });\n    }\n    /** @inheritdoc */\n    insertOne(document) {\n        return this.functions.insertOne({\n            database: this.databaseName,\n            collection: this.collectionName,\n            document,\n        });\n    }\n    /** @inheritdoc */\n    insertMany(documents) {\n        return this.functions.insertMany({\n            database: this.databaseName,\n            collection: this.collectionName,\n            documents,\n        });\n    }\n    /** @inheritdoc */\n    deleteOne(filter = {}) {\n        return this.functions.deleteOne({\n            database: this.databaseName,\n            collection: this.collectionName,\n            query: filter,\n        });\n    }\n    /** @inheritdoc */\n    deleteMany(filter = {}) {\n        return this.functions.deleteMany({\n            database: this.databaseName,\n            collection: this.collectionName,\n            query: filter,\n        });\n    }\n    /** @inheritdoc */\n    updateOne(filter, update, options = {}) {\n        return this.functions.updateOne({\n            database: this.databaseName,\n            collection: this.collectionName,\n            query: filter,\n            update,\n            upsert: options.upsert,\n        });\n    }\n    /** @inheritdoc */\n    updateMany(filter, update, options = {}) {\n        return this.functions.updateMany({\n            database: this.databaseName,\n            collection: this.collectionName,\n            query: filter,\n            update,\n            upsert: options.upsert,\n        });\n    }\n    /** @inheritdoc */\n    watch() {\n        throw new Error(\"Not yet implemented\");\n    }\n}\n/**\n * Creates an Remote MongoDB Collection.\n * Note: This method exists to enable function binding.\n *\n * @param transport The underlying transport.\n * @param serviceName A service name.\n * @param databaseName A database name.\n * @param collectionName A collection name.\n * @returns The collection.\n */\nfunction createCollection(transport, serviceName, databaseName, collectionName) {\n    return new MongoDBCollection(transport, serviceName, databaseName, collectionName);\n}\n/**\n * Creates a Remote MongoDB Database.\n * Note: This method exists to enable function binding.\n *\n * @param transport The underlying transport\n * @param serviceName A service name\n * @param databaseName A database name\n * @returns The database.\n */\nfunction createDatabase(transport, serviceName, databaseName) {\n    return {\n        collection: createCollection.bind(null, transport, serviceName, databaseName),\n    };\n}\n/**\n * Creates a Remote MongoDB Service.\n * Note: This method exists to enable function binding.\n *\n * @param transport The underlying transport.\n * @param serviceName An optional service name.\n * @returns The service.\n */\nfunction createService(transport, serviceName = \"mongo-db\") {\n    return { db: createDatabase.bind(null, transport, serviceName) };\n}\n\n////////////////////////////////////////////////////////////////////////////\n// @see https://github.com/mongodb/stitch-js-sdk/blob/master/packages/core/services/http/src/internal/CoreHttpServiceClient.ts\n/**\n * The Stitch HTTP Service is a generic interface that enables you to communicate with any service that is available over HTTP.\n *\n * @see https://docs.mongodb.com/stitch/services/http/\n */\nclass HTTPService {\n    /**\n     * Construct an HTTP Service.\n     *\n     * @param transport The underlying transport.\n     * @param serviceName An optional service name.\n     */\n    constructor(transport, serviceName = \"http\") {\n        this.functions = FunctionsFactory.create(transport, {\n            serviceName,\n        });\n    }\n    /**\n     * Sends an HTTP GET request to the specified URL.\n     *\n     * @param url The URL to send the request to.\n     * @param options Options related to the request.\n     * @returns The response.\n     */\n    get(url, options = {}) {\n        return this.functions.get({ url, ...options });\n    }\n    /**\n     * Sends an HTTP POST request to the specified URL.\n     *\n     * @param url The URL to send the request to.\n     * @param options Options related to the request.\n     * @returns The response.\n     */\n    post(url, options = {}) {\n        return this.functions.post({ url, ...options });\n    }\n    /**\n     * Sends an HTTP PUT request to the specified URL.\n     *\n     * @param url The URL to send the request to.\n     * @param options Options related to the request.\n     * @returns The response.\n     */\n    put(url, options = {}) {\n        return this.functions.put({ url, ...options });\n    }\n    /**\n     * Sends an HTTP DELETE request to the specified URL.\n     *\n     * @param url The URL to send the request to.\n     * @param options Options related to the request.\n     * @returns The response.\n     */\n    delete(url, options = {}) {\n        return this.functions.delete({ url, ...options });\n    }\n    /**\n     * Sends an HTTP HEAD request to the specified URL.\n     *\n     * @param url The URL to send the request to.\n     * @param options Options related to the request.\n     * @returns The response.\n     */\n    head(url, options = {}) {\n        return this.functions.head({ url, ...options });\n    }\n    /**\n     * Sends an HTTP PATCH request to the specified URL.\n     *\n     * @param url The URL to send the request to.\n     * @param options Options related to the request.\n     * @returns The response.\n     */\n    patch(url, options = {}) {\n        return this.functions.patch({ url, ...options });\n    }\n}\n/**\n * Creates an HTTP Service.\n * Note: This method exists to enable function binding.\n *\n * @param transport The underlying transport.\n * @param serviceName An optional service name.\n * @returns The new HTTP Service.\n */\nfunction createService$1(transport, serviceName = \"http\") {\n    return new HTTPService(transport, serviceName);\n}\n\n////////////////////////////////////////////////////////////////////////////\n/**\n * Create all services for a particular app.\n *\n * @param transport The transport to use when senting requests to the services.\n * @returns An object containing functions that create the individual services.\n */\nfunction create(transport) {\n    return {\n        mongodb: createService.bind(null, transport),\n        http: createService$1.bind(null, transport),\n    };\n}\n\n////////////////////////////////////////////////////////////////////////////\nconst USER_IDS_STORAGE_KEY = \"userIds\";\n/**\n * Storage specific to the app.\n */\nclass AppStorage extends PrefixedStorage {\n    /**\n     * Construct a storage for an `App`\n     *\n     * @param storage The underlying storage to wrap.\n     * @param appId The id of the app.\n     */\n    constructor(storage, appId) {\n        super(storage, `app(${appId})`);\n    }\n    /**\n     * Reads out the list of user ids from storage.\n     *\n     * @returns A list of user ids.\n     */\n    getUserIds() {\n        try {\n            const userIdsString = this.get(USER_IDS_STORAGE_KEY);\n            const userIds = userIdsString ? JSON.parse(userIdsString) : [];\n            if (Array.isArray(userIds)) {\n                // Remove any duplicates that might have been added\n                // The Set preserves insertion order\n                return [...new Set(userIds)];\n            }\n            else {\n                throw new Error(\"Expected an array\");\n            }\n        }\n        catch (err) {\n            // The storage was corrupted\n            this.remove(USER_IDS_STORAGE_KEY);\n            throw err;\n        }\n    }\n    /**\n     * Sets the list of ids in storage.\n     * Optionally merging with existing ids stored in the storage, by prepending these while voiding duplicates.\n     *\n     * @param userIds The list of ids to store.\n     * @param mergeWithExisting Prepend existing ids to avoid data-races with other apps using this storage.\n     */\n    setUserIds(userIds, mergeWithExisting) {\n        if (mergeWithExisting) {\n            // Add any existing user id to the end of this list, avoiding duplicates\n            const existingIds = this.getUserIds();\n            for (const id of existingIds) {\n                if (userIds.indexOf(id) === -1) {\n                    userIds.push(id);\n                }\n            }\n        }\n        // Store the list of ids\n        this.set(USER_IDS_STORAGE_KEY, JSON.stringify(userIds));\n    }\n    /**\n     * Remove an id from the list of ids.\n     *\n     * @param userId The id of a User to be removed.\n     */\n    removeUserId(userId) {\n        const existingIds = this.getUserIds();\n        const userIds = existingIds.filter(id => id !== userId);\n        // Store the list of ids\n        this.setUserIds(userIds, false);\n    }\n}\n\n////////////////////////////////////////////////////////////////////////////\n//\n// Copyright 2020 Realm Inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n// http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n//\n////////////////////////////////////////////////////////////////////////////\n/**\n * Generate a random sequence of characters.\n *\n * @param length The length of the string.\n * @param alphabet The alphabet of characters to pick from.\n * @returns A string of characters picked randomly from `alphabet`.\n */\nfunction generateRandomString(length, alphabet) {\n    let result = \"\";\n    for (let i = 0; i < length; i++) {\n        result += alphabet[Math.floor(Math.random() * alphabet.length)];\n    }\n    return result;\n}\n/**\n * Encode an object mapping from string to string, into a query string to be appended a URL.\n *\n * @param params The parameters to include in the string.\n * @returns A URL encoded representation of the parameters.\n */\nfunction encodeQueryString(params) {\n    return Object.entries(params)\n        .map(([k, v]) => [k, encodeURIComponent(v)])\n        .map(([k, v]) => `${k}=${v}`)\n        .join(\"&\");\n}\n/**\n * Decodes a query string into an object.\n *\n * @param str The query string to decode.\n * @returns The decoded query string.\n */\nfunction decodeQueryString(str) {\n    return Object.fromEntries(str\n        .split(\"&\")\n        .map(kvp => kvp.split(\"=\"))\n        .map(([k, v]) => [k, decodeURIComponent(v)]));\n}\n\n////////////////////////////////////////////////////////////////////////////\n//\n// Copyright 2020 Realm Inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n// http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n//\n////////////////////////////////////////////////////////////////////////////\nlet environment = null;\n/**\n * Set the environment of execution.\n * Note: This should be called as the first thing before executing any code which calls getEnvironment()\n *\n * @param e An object containing environment specific implementations.\n */\nfunction setEnvironment(e) {\n    environment = e;\n}\n/**\n * Get the environment of execution.\n *\n * @returns An object containing environment specific implementations.\n */\nfunction getEnvironment() {\n    if (environment) {\n        return environment;\n    }\n    else {\n        throw new Error(\"Cannot get environment before it's set\");\n    }\n}\n\n////////////////////////////////////////////////////////////////////////////\n//\n// Copyright 2020 Realm Inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n// http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n//\n////////////////////////////////////////////////////////////////////////////\nconst LOWERCASE_LETTERS = \"abcdefghijklmnopqrstuvwxyz\";\nconst CLOSE_CHECK_INTERVAL = 100; // 10 times per second\n/* eslint-disable @typescript-eslint/camelcase */\nconst REDIRECT_HASH_TO_RESULT = {\n    _stitch_client_app_id: \"appId\",\n    _baas_client_app_id: \"appId\",\n    _stitch_ua: \"userAuth\",\n    _baas_ua: \"userAuth\",\n    _stitch_link: \"link\",\n    _baas_link: \"link\",\n    _stitch_error: \"error\",\n    _baas_error: \"error\",\n    _stitch_state: \"state\",\n    _baas_state: \"state\",\n};\n/* eslint-enable @typescript-eslint/camelcase */\n/**\n * A collection of methods helping implement the OAuth2 flow.\n */\nclass OAuth2Helper {\n    /**\n     * Construct a helper implementing the OAuth2 flow.\n     *\n     * @param storage The underlying storage to use when storing and retriving secrets.\n     * @param getAppUrl Call this to determine the app url.\n     * @param openWindow An optional function called when a browser window needs to open.\n     */\n    constructor(storage, getAppUrl, openWindow = getEnvironment().openWindow) {\n        this.storage = storage.prefix(\"oauth2\");\n        this.getAppUrl = getAppUrl;\n        this.openWindow = openWindow;\n    }\n    /**\n     * Parses the query string from the final step of the OAuth flow.\n     *\n     * @param queryString The query string passed through in location.hash.\n     * @returns The result of the OAuth flow.\n     */\n    static parseRedirectLocation(queryString) {\n        const params = decodeQueryString(queryString);\n        const result = {};\n        for (const [p, r] of Object.entries(REDIRECT_HASH_TO_RESULT)) {\n            const value = params[p];\n            if (value) {\n                result[r] = value;\n            }\n        }\n        return result;\n    }\n    /**\n     * Handle the redirect querystring by parsing it and storing it for others to consume.\n     *\n     * @param queryString The query string containing the encoded result from the OAuth provider.\n     * @param storage The underlying storage used to persist the result.\n     */\n    static handleRedirect(queryString, storage = getEnvironment().defaultStorage) {\n        const helper = new OAuth2Helper(storage, async () => {\n            throw new Error(\"This instance cannot be used to initiate a flow\");\n        });\n        const result = OAuth2Helper.parseRedirectLocation(queryString);\n        helper.handleRedirect(result);\n    }\n    /**\n     * Decodes the authInfo string into its seperate parts.\n     *\n     * @param authInfo An authInfo string returned from the server.\n     * @returns An object containing the separate parts of the authInfo string.\n     */\n    static decodeAuthInfo(authInfo) {\n        const parts = (authInfo || \"\").split(\"$\");\n        if (parts.length === 4) {\n            const [accessToken, refreshToken, userId, deviceId] = parts;\n            return { accessToken, refreshToken, userId, deviceId };\n        }\n        else {\n            throw new Error(\"Failed to decode 'authInfo' into ids and tokens\");\n        }\n    }\n    /**\n     * Initiates the flow by opening a browser window.\n     *\n     * @param credentials A set of OAuth2 credentials with a redirectUrl in its payload.\n     * @returns The secret.\n     */\n    async initiate(credentials) {\n        // TODO: Implement a timeout and an option to cancel.\n        const state = this.generateState();\n        const stateStorage = this.getStateStorage(state);\n        const url = await this.generateOAuth2Url(credentials, state);\n        // Return a promise that resolves when the  gets known\n        return new Promise((resolve, reject) => {\n            let redirectWindow = null;\n            // We're declaring the interval now to enable referencing before its initialized\n            let windowClosedInterval; // eslint-disable-line prefer-const\n            const handleStorageUpdate = () => {\n                // Trying to get the secret from storage\n                const result = stateStorage.get(\"result\");\n                if (result) {\n                    const parsedResult = JSON.parse(result);\n                    // The secret got updated!\n                    stateStorage.removeListener(handleStorageUpdate);\n                    // Clear the storage to prevent others from reading this\n                    stateStorage.clear();\n                    // Try closing the newly created window\n                    try {\n                        if (redirectWindow) {\n                            // Stop checking if the window closed\n                            clearInterval(windowClosedInterval);\n                            redirectWindow.close();\n                        }\n                    }\n                    catch (err) {\n                        console.warn(`Failed closing redirect window: ${err}`);\n                    }\n                    finally {\n                        resolve(parsedResult);\n                    }\n                }\n            };\n            // Add a listener to the state storage, awaiting an update to the secret\n            stateStorage.addListener(handleStorageUpdate);\n            // Open up a window\n            redirectWindow = this.openWindow(url);\n            // No using a const, because we need the two listeners to reference each other when removing the other.\n            windowClosedInterval = setInterval(() => {\n                if (redirectWindow && redirectWindow.closed) {\n                    clearInterval(windowClosedInterval);\n                    // Stop listening for changes to the storage\n                    stateStorage.removeListener(handleStorageUpdate);\n                    // Reject the promise\n                    const err = new Error(\"Window closed\");\n                    reject(err);\n                }\n            }, CLOSE_CHECK_INTERVAL);\n        });\n    }\n    /**\n     * Generate the URL to which the user should be redirected to initiate the OAuth2 flow.\n     *\n     * @param credentials A set of OAuth2 credentials with a redirectUrl in its payload.\n     * @param state A random state, used to track the request throughout the flow, avoiding CSRF attacks.\n     * @returns A URL to redirect the user to.\n     */\n    async generateOAuth2Url(credentials, state) {\n        const { redirectUrl } = credentials.payload;\n        const appUrl = await this.getAppUrl();\n        const qs = encodeQueryString({\n            redirect: redirectUrl,\n            state,\n        });\n        return `${appUrl}/auth/providers/${credentials.providerName}/login?${qs}`;\n    }\n    /**\n     * Handle a redirect.\n     *\n     * @param result The result from parsing the OAuth 2.0 redirect URL.\n     */\n    handleRedirect(result) {\n        const { state, error } = result;\n        if (typeof state === \"string\") {\n            const storage = this.getStateStorage(state);\n            storage.set(\"result\", JSON.stringify(result));\n        }\n        else if (error) {\n            throw new Error(`Failed to handle OAuth 2.0 redirect: ${error}`);\n        }\n        else {\n            throw new Error(\"Failed to handle OAuth 2.0 redirect.\");\n        }\n    }\n    /**\n     * Generate a random state string.\n     *\n     * @returns The random state string.\n     */\n    generateState() {\n        return generateRandomString(12, LOWERCASE_LETTERS);\n    }\n    /**\n     * Get the storage key associated of an secret associated with a state.\n     *\n     * @param state The random state.\n     * @returns The storage associated with a particular state.\n     */\n    getStateStorage(state) {\n        return this.storage.prefix(`state(${state})`);\n    }\n}\n\n////////////////////////////////////////////////////////////////////////////\n/**\n * MongoDB Realm App\n */\nclass App {\n    /**\n     * Construct a Realm App, either from the Realm App id visible from the MongoDB Realm UI or a configuration.\n     *\n     * @param idOrConfiguration The Realm App id or a configuration to use for this app.\n     */\n    constructor(idOrConfiguration) {\n        /**\n         * An array of active and logged-out users.\n         * Elements in the beginning of the array is considered more recent than the later elements.\n         */\n        this.users = [];\n        // If the argument is a string, convert it to a simple configuration object.\n        const configuration = typeof idOrConfiguration === \"string\"\n            ? { id: idOrConfiguration }\n            : idOrConfiguration;\n        // Initialize properties from the configuration\n        if (typeof configuration === \"object\" &&\n            typeof configuration.id === \"string\") {\n            this.id = configuration.id;\n        }\n        else {\n            throw new Error(\"Missing a MongoDB Realm app-id\");\n        }\n        const { transport, storage, baseUrl, fetchLocation = true, } = configuration;\n        // Construct the various transports\n        this.baseTransport = new BaseTransport(transport, baseUrl || App.DEFAULT_BASE_URL, fetchLocation ? this : undefined);\n        this.appTransport = this.baseTransport.prefix(`/app/${this.id}`);\n        const authTransport = new AuthenticatedTransport(this.appTransport, this);\n        // Construct the functions factory\n        this.functions = FunctionsFactory.create(authTransport);\n        // Construct the services factory\n        this.services = create(authTransport);\n        // Construct the auth providers\n        this.emailPasswordAuth = new EmailPasswordAuth(authTransport);\n        // Construct the storage\n        const baseStorage = storage || getEnvironment().defaultStorage;\n        this.storage = new AppStorage(baseStorage, this.id);\n        // Constructing the oauth2 helper, passing in the baseStorage to avoid an app scope.\n        this.oauth2 = new OAuth2Helper(baseStorage, async () => {\n            const baseUrl = await this.baseTransport.determineBaseUrl(false);\n            return `${baseUrl}/app/${this.id}`;\n        });\n        // Hydrate the app state from storage\n        this.hydrate();\n    }\n    /**\n     * Switch user\n     *\n     * @param nextUser The user or id of the user to switch to\n     */\n    switchUser(nextUser) {\n        const index = this.users.findIndex(u => u === nextUser);\n        if (index === -1) {\n            throw new Error(\"The user was never logged into this app\");\n        }\n        // Remove the user from the stack\n        const [user] = this.users.splice(index, 1);\n        // Insert the user in the beginning of the stack\n        this.users.unshift(user);\n    }\n    /**\n     * Log in a user\n     *\n     * @param credentials Credentials to use when logging in\n     * @param fetchProfile Should the users profile be fetched? (default: true)\n     */\n    async logIn(credentials, fetchProfile = true) {\n        const user = await this.performLogIn(credentials);\n        // Let's ensure this will be the current user, in case the user object was reused.\n        this.switchUser(user);\n        // If neeeded, fetch and set the profile on the user\n        if (fetchProfile) {\n            await user.refreshProfile();\n        }\n        // Persist the user id in the storage,\n        // merging to avoid overriding logins from other apps using the same underlying storage\n        this.storage.setUserIds(this.users.map(u => u.id), true);\n        // Return the user\n        return user;\n    }\n    /**\n     * @inheritdoc\n     */\n    async removeUser(user) {\n        // Remove the user from the list of users\n        const index = this.users.findIndex(u => u === user);\n        if (index === -1) {\n            throw new Error(\"The user was never logged into this app\");\n        }\n        this.users.splice(index, 1);\n        // Log out the user - this removes access and refresh tokens from storage\n        await user.logOut();\n        // Remove the users profile from storage\n        this.storage.remove(`user(${user.id}):profile`);\n        // Remove the user from the storage\n        this.storage.removeUserId(user.id);\n    }\n    /**\n     * The currently active user (or null if no active users exists)\n     *\n     * @returns the currently active user or null.\n     */\n    get currentUser() {\n        const activeUsers = this.users.filter(user => user.state === UserState.Active);\n        if (activeUsers.length === 0) {\n            return null;\n        }\n        else {\n            // Current user is the top of the stack\n            return activeUsers[0];\n        }\n    }\n    /**\n     * All active and logged-out users:\n     *  - First in the list are active users (ordered by most recent call to switchUser or login)\n     *  - Followed by logged out users (also ordered by most recent call to switchUser or login).\n     *\n     * @returns An array of users active or loggedout users (current user being the first).\n     */\n    get allUsers() {\n        // We need to peek into refresh tokens to avoid cyclic code\n        const activeUsers = this.users.filter(user => user.refreshToken !== null);\n        const loggedOutUsers = this.users.filter(user => user.refreshToken === null);\n        // Returning a freezed copy of the list of users to prevent outside changes\n        return Object.freeze([...activeUsers, ...loggedOutUsers]);\n    }\n    /**\n     * Get the location metadata of an app.\n     *\n     * @returns A promise of the app's location metadata.\n     */\n    get location() {\n        // Initiate the fetch of the location metadata only once per app instance.\n        if (!this._location) {\n            this._location = this.baseTransport.fetch({\n                method: \"GET\",\n                path: `/app/${this.id}/location`,\n                ignoreLocation: true,\n            });\n        }\n        return this._location;\n    }\n    /**\n     * Perform the actual login, based on the credentials.\n     * Either it decodes the credentials and instantiates a user directly or it calls User.logIn to perform a fetch.\n     *\n     * @param credentials Credentials to use when logging in\n     */\n    async performLogIn(credentials) {\n        if (credentials.providerType.startsWith(\"oauth2\") &&\n            typeof credentials.payload.redirectUrl === \"string\") {\n            // Initiate the OAuth2 and use the next credentials once they're known\n            const result = await this.oauth2.initiate(credentials);\n            const { userId, accessToken, refreshToken, } = OAuth2Helper.decodeAuthInfo(result.userAuth);\n            return this.createOrUpdateUser(userId, accessToken, refreshToken);\n        }\n        else {\n            const { id, accessToken, refreshToken } = await performLogIn(this, credentials);\n            return this.createOrUpdateUser(id, accessToken, refreshToken);\n        }\n    }\n    /**\n     * Create (and store) a new user or update an existing user's access and refresh tokens.\n     * This helps de-duplicating users in the list of users known to the app.\n     *\n     * @param userId The id of the user.\n     * @param accessToken The new access token of the user.\n     * @param refreshToken The new refresh token of the user.\n     * @returns A new or an existing user.\n     */\n    createOrUpdateUser(userId, accessToken, refreshToken) {\n        const existingUser = this.users.find(u => u.id === userId);\n        if (existingUser) {\n            // Update the users access and refresh tokens\n            existingUser.accessToken = accessToken;\n            existingUser.refreshToken = refreshToken;\n            return existingUser;\n        }\n        else {\n            // Create and store a new user\n            const user = new User({\n                app: this,\n                id: userId,\n                accessToken,\n                refreshToken,\n            });\n            this.users.unshift(user);\n            return user;\n        }\n    }\n    /**\n     * Restores the state of the app (active and logged-out users) from the storage\n     */\n    hydrate() {\n        try {\n            const userIds = this.storage.getUserIds();\n            this.users = userIds.map(id => User.hydrate(this, id));\n        }\n        catch (err) {\n            // The storage was corrupted\n            this.storage.clear();\n            throw err;\n        }\n    }\n}\n/**\n * Instances of this class can be passed to the `app.logIn` method to authenticate an end-user.\n */\nApp.Credentials = Credentials;\n/**\n * Default base url to prefix all requests if no baseUrl is specified in the configuration.\n */\nApp.DEFAULT_BASE_URL = \"https://stitch.mongodb.com\";\n\n////////////////////////////////////////////////////////////////////////////\nconst appCache = {};\n/**\n * Get or create a singleton Realm App from an id.\n *\n * @param id The Realm App id visible from the MongoDB Realm UI or a configuration.\n * @returns The Realm App instance. Calling this function multiple times with the same id will return the same instance.\n */\nfunction getApp(id) {\n    if (id in appCache) {\n        return appCache[id];\n    }\n    else {\n        const instance = new App(id);\n        appCache[id] = instance;\n        return instance;\n    }\n}\n\n////////////////////////////////////////////////////////////////////////////\n/**\n * In-memory storage that will not be persisted.\n */\nclass LocalStorage {\n    /**\n     * Constructs a LocalStorage using the global window.\n     */\n    constructor() {\n        if (typeof window === \"object\") {\n            this.window = window;\n        }\n        else {\n            throw new Error(\"Cannot use LocalStorage without a global window object\");\n        }\n    }\n    /** @inheritdoc */\n    get(key) {\n        return this.window.localStorage.getItem(key);\n    }\n    /** @inheritdoc */\n    set(key, value) {\n        return this.window.localStorage.setItem(key, value);\n    }\n    /** @inheritdoc */\n    remove(key) {\n        return this.window.localStorage.removeItem(key);\n    }\n    /** @inheritdoc */\n    prefix(keyPart) {\n        return new PrefixedStorage(this, keyPart);\n    }\n    /** @inheritdoc */\n    clear(prefix) {\n        const keys = [];\n        // Iterate all keys to find the once have a matching prefix.\n        for (let i = 0; i < this.window.localStorage.length; i++) {\n            const key = this.window.localStorage.key(i);\n            if (key && (!prefix || key.startsWith(prefix))) {\n                keys.push(key);\n            }\n        }\n        // Remove the items in a seperate loop to avoid updating while iterating.\n        for (const key of keys) {\n            this.window.localStorage.removeItem(key);\n        }\n    }\n    /** @inheritdoc */\n    addListener(listener) {\n        return this.window.addEventListener(\"storage\", listener);\n    }\n    /** @inheritdoc */\n    removeListener(listener) {\n        return this.window.removeEventListener(\"storage\", listener);\n    }\n}\n\n////////////////////////////////////////////////////////////////////////////\nconst environment$1 = {\n    defaultStorage: new LocalStorage().prefix(\"realm-web\"),\n    openWindow: url => window.open(url),\n};\nsetEnvironment(environment$1);\n/**\n * Handle an OAuth 2.0 redirect.\n *\n * @param location An optional location to use (defaults to the windows current location).\n * @param storage Optional storage used to save any results from the location.\n */\nfunction handleAuthRedirect(location = window.location, storage = environment$1.defaultStorage) {\n    try {\n        const queryString = location.hash.substr(1); // Strip the initial # from the hash\n        OAuth2Helper.handleRedirect(queryString, storage);\n    }\n    catch (err) {\n        // Ensure calling this never throws: It should not interrupt a users flow.\n        console.warn(err);\n    }\n}\n\nexport { App, Credentials, LocalStorage, MongoDBRealmError, User, UserState, UserType$1 as UserType, getApp, getEnvironment, handleAuthRedirect, performLogIn, setEnvironment };\n"]},"metadata":{},"sourceType":"module"}