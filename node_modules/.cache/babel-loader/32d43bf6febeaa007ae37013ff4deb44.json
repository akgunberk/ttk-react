{"ast":null,"code":"var _jsxFileName = \"/Users/berkakgun/Desktop/ttk/ttkui/src/components/container/withSelect.tsx\";\nimport React from \"react\";\nimport { Grid, Dropdown } from \"semantic-ui-react\";\nimport { dispatchSelectable } from \"store/actions\";\nimport { connect } from \"react-redux\";\n\nconst WithSelect = props => {\n  const selectType = props.name.toUpperCase();\n  return /*#__PURE__*/React.createElement(React.Fragment, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Grid.Column, {\n    textAlign: \"center\",\n    className: \"selectable\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Dropdown, {\n    selection: true,\n    clearable: true,\n    placeholder: `Select ${props.name}`,\n    defaultValue: props.defaultValue ? props.defaultValue : null,\n    options: props.options,\n    onChange: (e, data) => props.dispatchSelectable(selectType, data.value),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 9\n    }\n  })));\n};\n\nexport default connect(null, {\n  dispatchSelectable\n})(WithSelect);","map":{"version":3,"sources":["/Users/berkakgun/Desktop/ttk/ttkui/src/components/container/withSelect.tsx"],"names":["React","Grid","Dropdown","dispatchSelectable","connect","WithSelect","props","selectType","name","toUpperCase","defaultValue","options","e","data","value"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,IAAT,EAAeC,QAAf,QAA+B,mBAA/B;AACA,SAASC,kBAAT,QAAmC,eAAnC;AACA,SAASC,OAAT,QAAwB,aAAxB;;AASA,MAAMC,UAAU,GAAIC,KAAD,IAAsB;AACvC,QAAMC,UAAU,GAAGD,KAAK,CAACE,IAAN,CAAWC,WAAX,EAAnB;AACA,sBACE,oBAAC,KAAD,CAAO,QAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,IAAD,CAAM,MAAN;AAAa,IAAA,SAAS,EAAC,QAAvB;AAAgC,IAAA,SAAS,EAAC,YAA1C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,QAAD;AACE,IAAA,SAAS,MADX;AAEE,IAAA,SAAS,MAFX;AAGE,IAAA,WAAW,EAAG,UAASH,KAAK,CAACE,IAAK,EAHpC;AAIE,IAAA,YAAY,EAAEF,KAAK,CAACI,YAAN,GAAqBJ,KAAK,CAACI,YAA3B,GAA0C,IAJ1D;AAKE,IAAA,OAAO,EAAEJ,KAAK,CAACK,OALjB;AAME,IAAA,QAAQ,EAAE,CAACC,CAAD,EAAIC,IAAJ,KACRP,KAAK,CAACH,kBAAN,CAAyBI,UAAzB,EAAqCM,IAAI,CAACC,KAA1C,CAPJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CADF,CADF;AAgBD,CAlBD;;AAoBA,eAAeV,OAAO,CAAC,IAAD,EAAO;AAAED,EAAAA;AAAF,CAAP,CAAP,CAAsCE,UAAtC,CAAf","sourcesContent":["import React from \"react\";\nimport { Grid, Dropdown } from \"semantic-ui-react\";\nimport { dispatchSelectable } from \"store/actions\";\nimport { connect } from \"react-redux\";\n\ntype PropTypes = {\n  name: string;\n  options: any;\n  dispatchSelectable: any;\n  defaultValue: string;\n};\n\nconst WithSelect = (props: PropTypes) => {\n  const selectType = props.name.toUpperCase();\n  return (\n    <React.Fragment>\n      <Grid.Column textAlign=\"center\" className=\"selectable\">\n        <Dropdown\n          selection\n          clearable\n          placeholder={`Select ${props.name}`}\n          defaultValue={props.defaultValue ? props.defaultValue : null}\n          options={props.options}\n          onChange={(e, data) =>\n            props.dispatchSelectable(selectType, data.value)\n          }\n        />\n      </Grid.Column>\n    </React.Fragment>\n  );\n};\n\nexport default connect(null, { dispatchSelectable })(WithSelect);\n"]},"metadata":{},"sourceType":"module"}