{"ast":null,"code":"var _jsxFileName = \"/Users/berkakgun/Desktop/ttk/ttkui/src/components/container/withSelect.tsx\";\nimport React, { useState } from \"react\";\nimport { Grid, Dropdown } from \"semantic-ui-react\";\nimport { dispatchSelectable } from \"store/actions\";\nimport { connect, useSelector } from \"react-redux\";\nimport { getUserElements } from \"store/selectors\";\n\nconst WithSelect = props => {\n  const [select, handleSelect] = useState();\n  const user = useSelector(getUserElements);\n  console.log(user);\n  return /*#__PURE__*/React.createElement(React.Fragment, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Grid.Column, {\n    textAlign: \"center\",\n    className: \"selectable\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Dropdown, {\n    selection: true,\n    clearable: true,\n    placeholder: `Select ${props.name}`,\n    options: props.options,\n    onChange: (e, data) => handleSelect(data.value),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 9\n    }\n  })));\n};\n\nexport default connect(null, {\n  dispatchSelectable\n})(WithSelect);","map":{"version":3,"sources":["/Users/berkakgun/Desktop/ttk/ttkui/src/components/container/withSelect.tsx"],"names":["React","useState","Grid","Dropdown","dispatchSelectable","connect","useSelector","getUserElements","WithSelect","props","select","handleSelect","user","console","log","name","options","e","data","value"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,SAASC,IAAT,EAAeC,QAAf,QAA+B,mBAA/B;AACA,SAASC,kBAAT,QAAmC,eAAnC;AACA,SAASC,OAAT,EAAkBC,WAAlB,QAAqC,aAArC;AACA,SAASC,eAAT,QAAgC,iBAAhC;;AAIA,MAAMC,UAAU,GAAIC,KAAD,IAAsB;AACvC,QAAM,CAACC,MAAD,EAASC,YAAT,IAAyBV,QAAQ,EAAvC;AACA,QAAMW,IAAI,GAAGN,WAAW,CAACC,eAAD,CAAxB;AACAM,EAAAA,OAAO,CAACC,GAAR,CAAYF,IAAZ;AACA,sBACE,oBAAC,KAAD,CAAO,QAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,IAAD,CAAM,MAAN;AAAa,IAAA,SAAS,EAAC,QAAvB;AAAgC,IAAA,SAAS,EAAC,YAA1C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,QAAD;AACE,IAAA,SAAS,MADX;AAEE,IAAA,SAAS,MAFX;AAGE,IAAA,WAAW,EAAG,UAASH,KAAK,CAACM,IAAK,EAHpC;AAIE,IAAA,OAAO,EAAEN,KAAK,CAACO,OAJjB;AAKE,IAAA,QAAQ,EAAE,CAACC,CAAD,EAAIC,IAAJ,KAAaP,YAAY,CAACO,IAAI,CAACC,KAAN,CALrC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CADF,CADF;AAaD,CAjBD;;AAmBA,eAAed,OAAO,CAAC,IAAD,EAAO;AAAED,EAAAA;AAAF,CAAP,CAAP,CAAsCI,UAAtC,CAAf","sourcesContent":["import React, { useState } from \"react\";\nimport { Grid, Dropdown } from \"semantic-ui-react\";\nimport { dispatchSelectable } from \"store/actions\";\nimport { connect, useSelector } from \"react-redux\";\nimport { getUserElements } from \"store/selectors\";\n\ntype PropTypes = { name: string; options: any; dispatchSelectable: any };\n\nconst WithSelect = (props: PropTypes) => {\n  const [select, handleSelect] = useState();\n  const user = useSelector(getUserElements);\n  console.log(user);\n  return (\n    <React.Fragment>\n      <Grid.Column textAlign=\"center\" className=\"selectable\">\n        <Dropdown\n          selection\n          clearable\n          placeholder={`Select ${props.name}`}\n          options={props.options}\n          onChange={(e, data) => handleSelect(data.value)}\n        />\n      </Grid.Column>\n    </React.Fragment>\n  );\n};\n\nexport default connect(null, { dispatchSelectable })(WithSelect);\n"]},"metadata":{},"sourceType":"module"}