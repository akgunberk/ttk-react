{"ast":null,"code":"var _jsxFileName = \"/Users/berkakgun/Desktop/ttk/ttkui/src/components/forms/userForm.tsx\";\nimport React, { useState, useEffect } from \"react\";\nimport { Grid, Form } from \"semantic-ui-react\";\nimport { countryOptions, businessModelOptions, jobOptionsBM2, jobOptionsBM1 } from \"assets/selectableOptions\";\nimport \"react-dates/initialize\";\nimport { SingleDatePicker } from \"react-dates\";\nimport \"react-dates/lib/css/_datepicker.css\";\nimport WithSelect from \"components/container/withSelect\";\nimport WithButtonGroup from \"components/container/withButtonGroup\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { getUserElements } from \"store/selectors\";\nimport { USER } from \"store/actionTypes\";\n\nconst UserForm = () => {\n  const user = useSelector(getUserElements);\n  const [date, setDate] = useState(null);\n  const [focused, setFocused] = useState(false);\n  const dispatch = useDispatch(dispatchDate);\n  useEffect(() => {\n    let jobDate = date === null || date === void 0 ? void 0 : date.format(\"YYYY-MM-DD HH:MM\");\n    dispatch({\n      type: USER.DATE,\n      payload: jobDate\n    });\n  }, [date, dispatch]);\n  return /*#__PURE__*/React.createElement(React.Fragment, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Form, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    columns: \"equal\",\n    divided: \"vertically\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Grid.Row, {\n    centered: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(WithSelect, {\n    name: \"Country\",\n    options: countryOptions,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 13\n    }\n  })), /*#__PURE__*/React.createElement(Grid.Row, {\n    centered: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(WithSelect, {\n    name: \"Business Model\",\n    options: businessModelOptions,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(WithSelect, {\n    name: \"Job\",\n    options: user.bm === \"1\" ? jobOptionsBM1 : jobOptionsBM2,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 13\n    }\n  })), user.job ? /*#__PURE__*/React.createElement(Grid.Row, {\n    centered: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Grid.Column, {\n    textAlign: \"center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(SingleDatePicker, {\n    noBorder: true,\n    numberOfMonths: 1,\n    date: date,\n    onDateChange: date => setDate(date),\n    focused: focused,\n    onFocusChange: ({\n      focused\n    }) => setFocused(focused),\n    id: \"jobDate\",\n    isOutsideRange: () => false,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 17\n    }\n  }), /*#__PURE__*/React.createElement(WithButtonGroup, {\n    left: \"Quote\",\n    right: \"Deal\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 17\n    }\n  }))) : null)));\n};\n\nexport default UserForm;","map":{"version":3,"sources":["/Users/berkakgun/Desktop/ttk/ttkui/src/components/forms/userForm.tsx"],"names":["React","useState","useEffect","Grid","Form","countryOptions","businessModelOptions","jobOptionsBM2","jobOptionsBM1","SingleDatePicker","WithSelect","WithButtonGroup","useSelector","useDispatch","getUserElements","USER","UserForm","user","date","setDate","focused","setFocused","dispatch","dispatchDate","jobDate","format","type","DATE","payload","bm","job"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport { Grid, Form } from \"semantic-ui-react\";\nimport {\n  countryOptions,\n  businessModelOptions,\n  jobOptionsBM2,\n  jobOptionsBM1,\n} from \"assets/selectableOptions\";\nimport \"react-dates/initialize\";\nimport { SingleDatePicker } from \"react-dates\";\nimport \"react-dates/lib/css/_datepicker.css\";\nimport WithSelect from \"components/container/withSelect\";\nimport WithButtonGroup from \"components/container/withButtonGroup\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { getUserElements } from \"store/selectors\";\nimport moment from \"moment\";\nimport { USER } from \"store/actionTypes\";\n\nconst UserForm: React.FC = () => {\n  const user = useSelector(getUserElements);\n  const [date, setDate] = useState<moment.Moment | null>(null);\n  const [focused, setFocused] = useState<boolean | null>(false);\n  const dispatch = useDispatch(dispatchDate);\n  useEffect(() => {\n    let jobDate = date?.format(\"YYYY-MM-DD HH:MM\");\n    dispatch({ type: USER.DATE, payload: jobDate });\n  }, [date, dispatch]);\n  return (\n    <React.Fragment>\n      <Form>\n        <Grid columns=\"equal\" divided=\"vertically\">\n          <Grid.Row centered>\n            <WithSelect name=\"Country\" options={countryOptions} />\n          </Grid.Row>\n          <Grid.Row centered>\n            <WithSelect name=\"Business Model\" options={businessModelOptions} />\n\n            <WithSelect\n              name=\"Job\"\n              options={user.bm === \"1\" ? jobOptionsBM1 : jobOptionsBM2}\n            />\n          </Grid.Row>\n          {user.job ? (\n            <Grid.Row centered>\n              <Grid.Column textAlign=\"center\">\n                <SingleDatePicker\n                  noBorder\n                  numberOfMonths={1}\n                  date={date}\n                  onDateChange={(date) => setDate(date)}\n                  focused={focused}\n                  onFocusChange={({ focused }) => setFocused(focused)}\n                  id=\"jobDate\"\n                  isOutsideRange={() => false}\n                />\n                <WithButtonGroup left=\"Quote\" right=\"Deal\" />\n              </Grid.Column>\n            </Grid.Row>\n          ) : null}\n        </Grid>\n      </Form>\n    </React.Fragment>\n  );\n};\n\nexport default UserForm;\n"]},"metadata":{},"sourceType":"module"}