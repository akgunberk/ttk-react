{"ast":null,"code":"var _jsxFileName = \"/Users/berkakgun/Desktop/ttk/ttkui/src/components/Landing.tsx\";\nimport React from \"react\";\nimport { Grid } from \"semantic-ui-react\";\nimport CustomUserCard from \"./cards/customUser\";\nimport UserForm from \"./cards/customUser\";\nimport { connect } from \"http2\";\n\nconst Landing = props => {\n  return /*#__PURE__*/React.createElement(React.Fragment, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 11,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      margin: \"0px 15%\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 12,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    columns: 2,\n    divided: true,\n    stackable: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Grid.Column, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(CustomUserCard, Object.assign({}, props.card, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 13\n    }\n  }))), /*#__PURE__*/React.createElement(Grid.Column, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(UserForm, Object.assign({}, props.user, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 13\n    }\n  }))))));\n};\n/* const CustomUserFormik = withFormik({\n  mapPropsToValues({ password, job, country, service, quoteNumber, deal }) {\n    return {\n      password: password || true,\n      job: job || false,\n      country: country || \"tr\",\n      service: service || 156,\n      quoteNumber: quoteNumber || 2,\n      deal: deal,\n    };\n  },\n})(CustomUser);\n\nexport default CustomUserFormik; */\n\n\nconst mapStateToProps = (user, card) => {\n  return {\n    user: {\n      password: user.password,\n      job: user.job,\n      country: user.country,\n      service: user.service,\n      deal: user.deal\n    },\n    card: {\n      flag: card.flag,\n      email: card.email,\n      password: card.password,\n      userId: card.userId,\n      accessToken: card.accessToken\n    }\n  };\n};\n\nexport default connect(mapStateToProps)(Landing);","map":{"version":3,"sources":["/Users/berkakgun/Desktop/ttk/ttkui/src/components/Landing.tsx"],"names":["React","Grid","CustomUserCard","UserForm","connect","Landing","props","margin","card","user","mapStateToProps","password","job","country","service","deal","flag","email","userId","accessToken"],"mappings":";AAAA,OAAOA,KAAP,MAAiC,OAAjC;AACA,SAASC,IAAT,QAAqB,mBAArB;AAEA,OAAOC,cAAP,MAA2B,oBAA3B;AACA,OAAOC,QAAP,MAAqB,oBAArB;AACA,SAASC,OAAT,QAAwB,OAAxB;;AAGA,MAAMC,OAAO,GAAIC,KAAD,IAAwB;AACtC,sBACE,oBAAC,KAAD,CAAO,QAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAK,IAAA,KAAK,EAAE;AAAEC,MAAAA,MAAM,EAAE;AAAV,KAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,IAAD;AAAM,IAAA,OAAO,EAAE,CAAf;AAAkB,IAAA,OAAO,MAAzB;AAA0B,IAAA,SAAS,MAAnC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,IAAD,CAAM,MAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,cAAD,oBAAoBD,KAAK,CAACE,IAA1B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KADF,CADF,eAIE,oBAAC,IAAD,CAAM,MAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,QAAD,oBAAcF,KAAK,CAACG,IAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KADF,CAJF,CADF,CADF,CADF;AAcD,CAfD;AAiBA;;;;;;;;;;;;;;;;AAeA,MAAMC,eAAe,GAAG,CAACD,IAAD,EAAoBD,IAApB,KAA0C;AAChE,SAAO;AACLC,IAAAA,IAAI,EAAE;AACJE,MAAAA,QAAQ,EAAEF,IAAI,CAACE,QADX;AAEJC,MAAAA,GAAG,EAAEH,IAAI,CAACG,GAFN;AAGJC,MAAAA,OAAO,EAAEJ,IAAI,CAACI,OAHV;AAIJC,MAAAA,OAAO,EAAEL,IAAI,CAACK,OAJV;AAKJC,MAAAA,IAAI,EAAEN,IAAI,CAACM;AALP,KADD;AAQLP,IAAAA,IAAI,EAAE;AACJQ,MAAAA,IAAI,EAAER,IAAI,CAACQ,IADP;AAEJC,MAAAA,KAAK,EAAET,IAAI,CAACS,KAFR;AAGJN,MAAAA,QAAQ,EAAEH,IAAI,CAACG,QAHX;AAIJO,MAAAA,MAAM,EAAEV,IAAI,CAACU,MAJT;AAKJC,MAAAA,WAAW,EAAEX,IAAI,CAACW;AALd;AARD,GAAP;AAgBD,CAjBD;;AAmBA,eAAef,OAAO,CAACM,eAAD,CAAP,CAAyBL,OAAzB,CAAf","sourcesContent":["import React, { useEffect } from \"react\";\nimport { Grid } from \"semantic-ui-react\";\nimport DefaultUser from \"./cards/defaultUser\";\nimport CustomUserCard from \"./cards/customUser\";\nimport UserForm from \"./cards/customUser\";\nimport { connect } from \"http2\";\nimport { UserElement, CardElement } from \"../assets/propTypes\";\n\nconst Landing = (props: UserElement) => {\n  return (\n    <React.Fragment>\n      <div style={{ margin: \"0px 15%\" }}>\n        <Grid columns={2} divided stackable>\n          <Grid.Column>\n            <CustomUserCard {...props.card} />\n          </Grid.Column>\n          <Grid.Column>\n            <UserForm {...props.user} />\n          </Grid.Column>\n        </Grid>\n      </div>\n    </React.Fragment>\n  );\n};\n\n/* const CustomUserFormik = withFormik({\n  mapPropsToValues({ password, job, country, service, quoteNumber, deal }) {\n    return {\n      password: password || true,\n      job: job || false,\n      country: country || \"tr\",\n      service: service || 156,\n      quoteNumber: quoteNumber || 2,\n      deal: deal,\n    };\n  },\n})(CustomUser);\n\nexport default CustomUserFormik; */\n\nconst mapStateToProps = (user: UserElement, card: CardElement) => {\n  return {\n    user: {\n      password: user.password,\n      job: user.job,\n      country: user.country,\n      service: user.service,\n      deal: user.deal,\n    },\n    card: {\n      flag: card.flag,\n      email: card.email,\n      password: card.password,\n      userId: card.userId,\n      accessToken: card.accessToken,\n    },\n  };\n};\n\nexport default connect(mapStateToProps)(Landing);\n"]},"metadata":{},"sourceType":"module"}