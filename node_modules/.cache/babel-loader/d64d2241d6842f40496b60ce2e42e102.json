{"ast":null,"code":"var _jsxFileName = \"/Users/berkakgun/Desktop/ttk/ttkui/src/components/cards/customUser.tsx\";\nimport React from \"react\";\nimport { Card, Image, Flag } from \"semantic-ui-react\";\nimport ClipBoardButton from \"components/container/withClipboard\";\nimport { useSelector } from \"react-redux\";\nimport { getUserElements, getCardElements } from \"store/selectors\";\n\nconst images = require.context(\"images\", true);\n\nconst CustomUser = () => {\n  const user = useSelector(getUserElements);\n  const {\n    userId,\n    email,\n    password,\n    accessToken\n  } = useSelector(getCardElements);\n  return /*#__PURE__*/React.createElement(Card, {\n    centered: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Image, {\n    circular: true,\n    src: images(\"./\" + (user.country ? user.country : \"tr\") + \".png\"),\n    wrapped: true,\n    ui: false,\n    label: user.environment !== \"\" ? {\n      as: \"a\",\n      color: user.environment === \"Test\" ? \"red\" : \"blue\",\n      content: user.environment === \"Test\" ? \"TEST\" : \"STAGE\",\n      ribbon: true\n    } : null,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(Card.Content, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Card.Header, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 11\n    }\n  }, \"Serbest Meslek Erbab\\u0131\")), /*#__PURE__*/React.createElement(Card.Meta, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 9\n    }\n  }, \"ShapeShifter\", /*#__PURE__*/React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(Flag, {\n    style: {\n      marginLeft: \"4px\"\n    },\n    name: user.country,\n    size: \"huge\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 13\n    }\n  }))), /*#__PURE__*/React.createElement(Card.Description, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 11\n    }\n  }, \" Valar Morghulis\"))), /*#__PURE__*/React.createElement(Card.Content, {\n    extra: true,\n    textAlign: \"center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 7\n    }\n  }, userId ? /*#__PURE__*/React.createElement(ClipBoardButton, {\n    name: \"Id\",\n    copy: userId,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 19\n    }\n  }) : null, email ? /*#__PURE__*/React.createElement(ClipBoardButton, {\n    name: \"Email\",\n    copy: email,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 18\n    }\n  }) : null, password ? /*#__PURE__*/React.createElement(ClipBoardButton, {\n    name: \"Password\",\n    copy: password,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 21\n    }\n  }) : null, accessToken ? /*#__PURE__*/React.createElement(ClipBoardButton, {\n    name: \"Token\",\n    copy: accessToken,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 11\n    }\n  }) : null));\n};\n\nexport default CustomUser;","map":{"version":3,"sources":["/Users/berkakgun/Desktop/ttk/ttkui/src/components/cards/customUser.tsx"],"names":["React","Card","Image","Flag","ClipBoardButton","useSelector","getUserElements","getCardElements","images","require","context","CustomUser","user","userId","email","password","accessToken","country","environment","as","color","content","ribbon","marginLeft"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport { Card, Image, Flag } from \"semantic-ui-react\";\nimport { CardElement } from \"assets/propTypes\";\nimport ClipBoardButton from \"components/container/withClipboard\";\nimport { useSelector } from \"react-redux\";\nimport { getUserElements, getCardElements } from \"store/selectors\";\n\nconst images = require.context(\"images\", true);\n\nconst CustomUser = () => {\n  const user = useSelector(getUserElements);\n  const { userId, email, password, accessToken } = useSelector(getCardElements);\n  return (\n    <Card centered>\n      <Image\n        circular\n        src={images(\"./\" + (user.country ? user.country : \"tr\") + \".png\")}\n        wrapped\n        ui={false}\n        label={\n          user.environment !== \"\"\n            ? {\n                as: \"a\",\n                color: user.environment === \"Test\" ? \"red\" : \"blue\",\n                content: user.environment === \"Test\" ? \"TEST\" : \"STAGE\",\n                ribbon: true,\n              }\n            : null\n        }\n      ></Image>\n      <Card.Content>\n        <Card.Header>\n          <span>Serbest Meslek ErbabÄ±</span>\n        </Card.Header>\n        <Card.Meta>\n          ShapeShifter\n          <span>\n            <Flag\n              style={{ marginLeft: \"4px\" }}\n              name={user.country}\n              size=\"huge\"\n            />\n          </span>\n        </Card.Meta>\n        <Card.Description>\n          <div> Valar Morghulis</div>\n        </Card.Description>\n      </Card.Content>\n      <Card.Content extra textAlign=\"center\">\n        {userId ? <ClipBoardButton name=\"Id\" copy={userId} /> : null}\n        {email ? <ClipBoardButton name=\"Email\" copy={email} /> : null}\n        {password ? <ClipBoardButton name=\"Password\" copy={password} /> : null}\n        {accessToken ? (\n          <ClipBoardButton name=\"Token\" copy={accessToken} />\n        ) : null}\n      </Card.Content>\n    </Card>\n  );\n};\n\nexport default CustomUser;\n"]},"metadata":{},"sourceType":"module"}