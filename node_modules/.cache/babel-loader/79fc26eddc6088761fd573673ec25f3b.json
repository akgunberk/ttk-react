{"ast":null,"code":"import _slicedToArray from\"/Users/berkakgun/Desktop/ttk/ttkui/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import React,{useState}from\"react\";import{UserContext}from\"core/store/ContextApi/Context\";import{Application}from\"core/db\";export function AuthGuard(props){var _Application$currentU;var _useState=useState({isLoggedIn:((_Application$currentU=Application.currentUser)===null||_Application$currentU===void 0?void 0:_Application$currentU.state)===\"active\",currentUser:Application.currentUser}),_useState2=_slicedToArray(_useState,2),authState=_useState2[0],setAuthState=_useState2[1];var handleLogout=function handleLogout(){var _Application$currentU2;return(_Application$currentU2=Application.currentUser)===null||_Application$currentU2===void 0?void 0:_Application$currentU2.logOut;};var authInfo=React.useMemo(function(){var isLoggedIn=authState.isLoggedIn,currentUser=authState.currentUser;var value={isLoggedIn:isLoggedIn,currentUser:currentUser,actions:{handleLogout:handleLogout,setAuthState:setAuthState}};return value;},[authState]);return/*#__PURE__*/React.createElement(UserContext.Provider,{value:authInfo},props.children);}","map":{"version":3,"sources":["/Users/berkakgun/Desktop/ttk/ttkui/src/components/AuthGuard.tsx"],"names":["React","useState","UserContext","Application","AuthGuard","props","isLoggedIn","currentUser","state","authState","setAuthState","handleLogout","logOut","authInfo","useMemo","value","actions","children"],"mappings":"yJAAA,MAAOA,CAAAA,KAAP,EAAgBC,QAAhB,KAAgC,OAAhC,CACA,OAASC,WAAT,KAA4B,+BAA5B,CACA,OAASC,WAAT,KAA4B,SAA5B,CAEA,MAAO,SAASC,CAAAA,SAAT,CAAmBC,KAAnB,CAA+B,yCACFJ,QAAQ,CAAC,CACzCK,UAAU,CAAE,wBAAAH,WAAW,CAACI,WAAZ,sEAAyBC,KAAzB,IAAmC,QADN,CAEzCD,WAAW,CAAEJ,WAAW,CAACI,WAFgB,CAAD,CADN,wCAC7BE,SAD6B,eAClBC,YADkB,eAMpC,GAAMC,CAAAA,YAAY,CAAG,QAAfA,CAAAA,YAAe,4DAAMR,WAAW,CAACI,WAAlB,iDAAM,uBAAyBK,MAA/B,EAArB,CAEA,GAAMC,CAAAA,QAAQ,CAAGb,KAAK,CAACc,OAAN,CAAc,UAAM,IAC3BR,CAAAA,UAD2B,CACCG,SADD,CAC3BH,UAD2B,CACfC,WADe,CACCE,SADD,CACfF,WADe,CAEnC,GAAMQ,CAAAA,KAAK,CAAG,CACZT,UAAU,CAAVA,UADY,CAEZC,WAAW,CAAXA,WAFY,CAGZS,OAAO,CAAE,CAAEL,YAAY,CAAZA,YAAF,CAAgBD,YAAY,CAAZA,YAAhB,CAHG,CAAd,CAKA,MAAOK,CAAAA,KAAP,CACD,CARgB,CAQd,CAACN,SAAD,CARc,CAAjB,CAUA,mBACE,oBAAC,WAAD,CAAa,QAAb,EAAsB,KAAK,CAAEI,QAA7B,EACGR,KAAK,CAACY,QADT,CADF,CAKD","sourcesContent":["import React, { useState } from \"react\";\nimport { UserContext } from \"core/store/ContextApi/Context\";\nimport { Application } from \"core/db\";\n\nexport function AuthGuard(props: any) {\n  const [authState, setAuthState] = useState({\n    isLoggedIn: Application.currentUser?.state === \"active\",\n    currentUser: Application.currentUser,\n  });\n\n  const handleLogout = () => Application.currentUser?.logOut;\n\n  const authInfo = React.useMemo(() => {\n    const { isLoggedIn, currentUser } = authState;\n    const value = {\n      isLoggedIn,\n      currentUser,\n      actions: { handleLogout, setAuthState },\n    };\n    return value;\n  }, [authState]);\n\n  return (\n    <UserContext.Provider value={authInfo}>\n      {props.children}\n    </UserContext.Provider>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}