{"ast":null,"code":"import _objectSpread from\"/Users/berkakgun/Desktop/ttk/ttkui/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";import _slicedToArray from\"/Users/berkakgun/Desktop/ttk/ttkui/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import{useState}from\"react\";import store from\"core/store/index\";import{dispatchDefaultUser}from\"core/store/actions\";import{collection,app}from\"core/initApp\";import{useSelector}from\"react-redux\";import{getUserElements}from\"core/store/selectors\";var payload={operation:\"CREATEUSER\",commands:[\"WITHPHONECONFIRMATION\",\"WITHPASSWORD\"],commandContext:{},jobTestContext:{}};export function CreateCustomUser(environment){process.env[\"NODE_TLS_REJECT_UNAUTHORIZED\"]=\"0\";// to prevent SSL\nvar url=\"https://ttk.armut.\".concat(environment,\"/operate\");var user=useSelector(getUserElements);var _useState=useState(false),_useState2=_slicedToArray(_useState,2),isLoading=_useState2[0],setLoading=_useState2[1];var loadCustomUser=function loadCustomUser(){/* if (user.country) {\n      payload.commands.push(\"WITHCOUNTRYID\");\n      payload.commandContext[\"countryId\"] = user.country;\n    } */if(user.job){payload.commands.push(\"WITHJOB\");payload.jobTestContext={operation:\"CREATEJOB\",commands:[\"WITHSERVICEID\"],commandContext:{serviceId:parseInt(user.service)}};if(user.date){var _payload$jobTestConte;(_payload$jobTestConte=payload.jobTestContext.commands)===null||_payload$jobTestConte===void 0?void 0:_payload$jobTestConte.push(\"WITHJOBDATE\");payload.jobTestContext.commandContext=_objectSpread(_objectSpread({},payload.jobTestContext.commandContext),{},{jobDate:user.date});}if(user.deal===1){var _payload$jobTestConte2;(_payload$jobTestConte2=payload.jobTestContext.commands)===null||_payload$jobTestConte2===void 0?void 0:_payload$jobTestConte2.push(\"WITHDEAL\");payload.jobTestContext.commandContext=_objectSpread(_objectSpread({},payload.jobTestContext.commandContext),{},{jobDate:user.date});payload.jobTestContext.proTestContext={operation:[\"CREATEPRO\"],commands:[\"WITHCREDITCARD\",\"WITHBALANCE\"],commandContext:{proBalance:10000}};}else if(user.deal===0){var _payload$jobTestConte3;(_payload$jobTestConte3=payload.jobTestContext.commands)===null||_payload$jobTestConte3===void 0?void 0:_payload$jobTestConte3.push(\"WITHQUOTES\");}console.log(payload);}setLoading(true);fetch(url,{method:\"POST\",body:JSON.stringify(payload)}).then(function(res){return res.json();}).then(function(user){var responseContext=user.responseContext,error=user.error;var _responseContext$=responseContext[0],accessToken=_responseContext$.accessToken,password=_responseContext$.password,model=_responseContext$.model;var user_id=model.user_id,email=model.email,first_name=model.first_name;if(!error){var _app$currentUser;store.dispatch(dispatchDefaultUser({user_id:user_id,email:email,password:password,accessToken:accessToken,name:first_name}));collection.insertOne({user_id:(_app$currentUser=app.currentUser)===null||_app$currentUser===void 0?void 0:_app$currentUser.id,id:user_id,email:email,password:password,accessToken:accessToken,first_name:first_name}).then(function(result){return console.log(\"Successfully inserted item with _id: \".concat(result.insertedId));}).catch(function(err){return console.error(\"Failed to insert item: \".concat(err));});}}).finally(function(){setLoading(false);});};return[isLoading,loadCustomUser];}","map":{"version":3,"sources":["/Users/berkakgun/Desktop/ttk/ttkui/src/components/hooks/createCustomUser.tsx"],"names":["useState","store","dispatchDefaultUser","collection","app","useSelector","getUserElements","payload","operation","commands","commandContext","jobTestContext","CreateCustomUser","environment","process","env","url","user","isLoading","setLoading","loadCustomUser","job","push","serviceId","parseInt","service","date","jobDate","deal","proTestContext","proBalance","console","log","fetch","method","body","JSON","stringify","then","res","json","responseContext","error","accessToken","password","model","user_id","email","first_name","dispatch","name","insertOne","currentUser","id","result","insertedId","catch","err","finally"],"mappings":"iTAAA,OAASA,QAAT,KAAyB,OAAzB,CACA,MAAOC,CAAAA,KAAP,KAAkB,kBAAlB,CACA,OAASC,mBAAT,KAAoC,oBAApC,CACA,OAASC,UAAT,CAAqBC,GAArB,KAAgC,cAAhC,CACA,OAASC,WAAT,KAA4B,aAA5B,CACA,OAASC,eAAT,KAAgC,sBAAhC,CAkBA,GAAMC,CAAAA,OAKL,CAAG,CACFC,SAAS,CAAE,YADT,CAEFC,QAAQ,CAAE,CAAC,uBAAD,CAA0B,cAA1B,CAFR,CAGFC,cAAc,CAAE,EAHd,CAIFC,cAAc,CAAE,EAJd,CALJ,CAYA,MAAO,SAASC,CAAAA,gBAAT,CAA0BC,WAA1B,CAA+C,CACpDC,OAAO,CAACC,GAAR,CAAY,8BAAZ,EAA8C,GAA9C,CAAmD;AACnD,GAAMC,CAAAA,GAAG,6BAAwBH,WAAxB,YAAT,CAEA,GAAMI,CAAAA,IAAI,CAAGZ,WAAW,CAACC,eAAD,CAAxB,CAJoD,cAKpBN,QAAQ,CAAC,KAAD,CALY,wCAK7CkB,SAL6C,eAKlCC,UALkC,eAOpD,GAAMC,CAAAA,cAAc,CAAG,QAAjBA,CAAAA,cAAiB,EAAM,CAC3B;;;QAIA,GAAIH,IAAI,CAACI,GAAT,CAAc,CACZd,OAAO,CAACE,QAAR,CAAiBa,IAAjB,CAAsB,SAAtB,EACAf,OAAO,CAACI,cAAR,CAAyB,CACvBH,SAAS,CAAE,WADY,CAEvBC,QAAQ,CAAE,CAAC,eAAD,CAFa,CAGvBC,cAAc,CAAE,CACda,SAAS,CAAEC,QAAQ,CAACP,IAAI,CAACQ,OAAN,CADL,CAHO,CAAzB,CAOA,GAAIR,IAAI,CAACS,IAAT,CAAe,2BACb,uBAAAnB,OAAO,CAACI,cAAR,CAAuBF,QAAvB,sEAAiCa,IAAjC,CAAsC,aAAtC,EACAf,OAAO,CAACI,cAAR,CAAuBD,cAAvB,gCACKH,OAAO,CAACI,cAAR,CAAuBD,cAD5B,MAEEiB,OAAO,CAAEV,IAAI,CAACS,IAFhB,GAID,CACD,GAAIT,IAAI,CAACW,IAAL,GAAc,CAAlB,CAAqB,4BACnB,wBAAArB,OAAO,CAACI,cAAR,CAAuBF,QAAvB,wEAAiCa,IAAjC,CAAsC,UAAtC,EACAf,OAAO,CAACI,cAAR,CAAuBD,cAAvB,gCACKH,OAAO,CAACI,cAAR,CAAuBD,cAD5B,MAEEiB,OAAO,CAAEV,IAAI,CAACS,IAFhB,GAIAnB,OAAO,CAACI,cAAR,CAAuBkB,cAAvB,CAAwC,CACtCrB,SAAS,CAAE,CAAC,WAAD,CAD2B,CAEtCC,QAAQ,CAAE,CAAC,gBAAD,CAAmB,aAAnB,CAF4B,CAGtCC,cAAc,CAAE,CAAEoB,UAAU,CAAE,KAAd,CAHsB,CAAxC,CAKD,CAXD,IAWO,IAAIb,IAAI,CAACW,IAAL,GAAc,CAAlB,CAAqB,4BAC1B,wBAAArB,OAAO,CAACI,cAAR,CAAuBF,QAAvB,wEAAiCa,IAAjC,CAAsC,YAAtC,EACD,CACDS,OAAO,CAACC,GAAR,CAAYzB,OAAZ,EACD,CAEDY,UAAU,CAAC,IAAD,CAAV,CACAc,KAAK,CAACjB,GAAD,CAAM,CACTkB,MAAM,CAAE,MADC,CAETC,IAAI,CAAEC,IAAI,CAACC,SAAL,CAAe9B,OAAf,CAFG,CAAN,CAAL,CAIG+B,IAJH,CAIQ,SAACC,GAAD,QAASA,CAAAA,GAAG,CAACC,IAAJ,EAAT,EAJR,EAKGF,IALH,CAKQ,SAACrB,IAAD,CAAU,IACNwB,CAAAA,eADM,CACqBxB,IADrB,CACNwB,eADM,CACWC,KADX,CACqBzB,IADrB,CACWyB,KADX,uBAE2BD,eAAe,CAAC,CAAD,CAF1C,CAENE,WAFM,mBAENA,WAFM,CAEOC,QAFP,mBAEOA,QAFP,CAEiBC,KAFjB,mBAEiBA,KAFjB,IAGNC,CAAAA,OAHM,CAGyBD,KAHzB,CAGNC,OAHM,CAGGC,KAHH,CAGyBF,KAHzB,CAGGE,KAHH,CAGUC,UAHV,CAGyBH,KAHzB,CAGUG,UAHV,CAId,GAAI,CAACN,KAAL,CAAY,sBACVzC,KAAK,CAACgD,QAAN,CACE/C,mBAAmB,CAAC,CAClB4C,OAAO,CAAPA,OADkB,CAElBC,KAAK,CAALA,KAFkB,CAGlBH,QAAQ,CAARA,QAHkB,CAIlBD,WAAW,CAAXA,WAJkB,CAKlBO,IAAI,CAAEF,UALY,CAAD,CADrB,EASA7C,UAAU,CACPgD,SADH,CACa,CACTL,OAAO,mBAAE1C,GAAG,CAACgD,WAAN,2CAAE,iBAAiBC,EADjB,CAETA,EAAE,CAAEP,OAFK,CAGTC,KAAK,CAALA,KAHS,CAITH,QAAQ,CAARA,QAJS,CAKTD,WAAW,CAAXA,WALS,CAMTK,UAAU,CAAVA,UANS,CADb,EASGV,IATH,CASQ,SAACgB,MAAD,QACJvB,CAAAA,OAAO,CAACC,GAAR,gDAC0CsB,MAAM,CAACC,UADjD,EADI,EATR,EAcGC,KAdH,CAcS,SAACC,GAAD,QAAS1B,CAAAA,OAAO,CAACW,KAAR,kCAAwCe,GAAxC,EAAT,EAdT,EAeD,CACF,CAnCH,EAoCGC,OApCH,CAoCW,UAAM,CACbvC,UAAU,CAAC,KAAD,CAAV,CACD,CAtCH,EAuCD,CA9ED,CA+EA,MAAO,CAACD,SAAD,CAAYE,cAAZ,CAAP,CACD","sourcesContent":["import { useState } from \"react\";\nimport store from \"core/store/index\";\nimport { dispatchDefaultUser } from \"core/store/actions\";\nimport { collection, app } from \"core/initApp\";\nimport { useSelector } from \"react-redux\";\nimport { getUserElements } from \"core/store/selectors\";\n\ninterface contextType {\n  jobDate?: string; // example \"2020-03-06 14:00\"\n  businessModel?: number;\n  serviceId?: number;\n  proBalance?: number;\n  quoteId?: number;\n  countryId?: number;\n}\n\ninterface jobContextType {\n  operation?: string;\n  commands?: Array<string | undefined>;\n  commandContext?: contextType;\n  proTestContext?: {};\n}\n\nconst payload: {\n  operation: string;\n  commands: Array<string>;\n  commandContext: contextType;\n  jobTestContext: jobContextType;\n} = {\n  operation: \"CREATEUSER\",\n  commands: [\"WITHPHONECONFIRMATION\", \"WITHPASSWORD\"],\n  commandContext: {},\n  jobTestContext: {},\n};\n\nexport function CreateCustomUser(environment: string) {\n  process.env[\"NODE_TLS_REJECT_UNAUTHORIZED\"] = \"0\"; // to prevent SSL\n  const url = `https://ttk.armut.${environment}/operate`;\n\n  const user = useSelector(getUserElements);\n  const [isLoading, setLoading] = useState(false);\n\n  const loadCustomUser = () => {\n    /* if (user.country) {\n      payload.commands.push(\"WITHCOUNTRYID\");\n      payload.commandContext[\"countryId\"] = user.country;\n    } */\n    if (user.job) {\n      payload.commands.push(\"WITHJOB\");\n      payload.jobTestContext = {\n        operation: \"CREATEJOB\",\n        commands: [\"WITHSERVICEID\"],\n        commandContext: {\n          serviceId: parseInt(user.service),\n        },\n      };\n      if (user.date) {\n        payload.jobTestContext.commands?.push(\"WITHJOBDATE\");\n        payload.jobTestContext.commandContext = {\n          ...payload.jobTestContext.commandContext,\n          jobDate: user.date,\n        };\n      }\n      if (user.deal === 1) {\n        payload.jobTestContext.commands?.push(\"WITHDEAL\");\n        payload.jobTestContext.commandContext = {\n          ...payload.jobTestContext.commandContext,\n          jobDate: user.date,\n        };\n        payload.jobTestContext.proTestContext = {\n          operation: [\"CREATEPRO\"],\n          commands: [\"WITHCREDITCARD\", \"WITHBALANCE\"],\n          commandContext: { proBalance: 10000 },\n        };\n      } else if (user.deal === 0) {\n        payload.jobTestContext.commands?.push(\"WITHQUOTES\");\n      }\n      console.log(payload);\n    }\n\n    setLoading(true);\n    fetch(url, {\n      method: \"POST\",\n      body: JSON.stringify(payload),\n    })\n      .then((res) => res.json())\n      .then((user) => {\n        const { responseContext, error } = user;\n        const { accessToken, password, model } = responseContext[0];\n        const { user_id, email, first_name } = model;\n        if (!error) {\n          store.dispatch(\n            dispatchDefaultUser({\n              user_id,\n              email,\n              password,\n              accessToken,\n              name: first_name,\n            })\n          );\n          collection\n            .insertOne({\n              user_id: app.currentUser?.id,\n              id: user_id,\n              email,\n              password,\n              accessToken,\n              first_name,\n            })\n            .then((result) =>\n              console.log(\n                `Successfully inserted item with _id: ${result.insertedId}`\n              )\n            )\n            .catch((err) => console.error(`Failed to insert item: ${err}`));\n        }\n      })\n      .finally(() => {\n        setLoading(false);\n      });\n  };\n  return [isLoading, loadCustomUser] as const;\n}\n"]},"metadata":{},"sourceType":"module"}