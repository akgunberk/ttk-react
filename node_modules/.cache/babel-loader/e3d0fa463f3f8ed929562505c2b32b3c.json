{"ast":null,"code":"import { useState } from \"react\";\nconst payload = {\n  operation: \"CREATEUSER\",\n  commands: [\"WITHPHONECONFIRMATION\", \"WITHPASSWORD\"]\n};\nexport function CreateDefaultUser(environment) {\n  process.env[\"NODE_TLS_REJECT_UNAUTHORIZED\"] = \"0\"; // to prevent SSL\n\n  const url = `https://ttk.armut.${environment}/operate`;\n  const [isLoading, setState] = useState(false);\n  const [user, setUser] = useState({});\n\n  const loadUser = () => {\n    setState(true);\n    fetch(url, {\n      method: \"POST\",\n      body: JSON.stringify(payload)\n    }).then(res => res.json()).then(user => {\n      setUser(user);\n    }).finally(() => {\n      setState(false);\n    });\n    return user;\n  };\n\n  return [isLoading, load]; // infers [boolean, typeof load] instead of (boolean | typeof load)[]\n}","map":{"version":3,"sources":["/Users/berkakgun/Desktop/ttk/ttkui/src/components/hooks/createDefaultUser.tsx"],"names":["useState","payload","operation","commands","CreateDefaultUser","environment","process","env","url","isLoading","setState","user","setUser","loadUser","fetch","method","body","JSON","stringify","then","res","json","finally","load"],"mappings":"AAAA,SAASA,QAAT,QAAyB,OAAzB;AAEA,MAAMC,OAAO,GAAG;AACdC,EAAAA,SAAS,EAAE,YADG;AAEdC,EAAAA,QAAQ,EAAE,CAAC,uBAAD,EAA0B,cAA1B;AAFI,CAAhB;AAKA,OAAO,SAASC,iBAAT,CAA2BC,WAA3B,EAAgD;AACrDC,EAAAA,OAAO,CAACC,GAAR,CAAY,8BAAZ,IAA8C,GAA9C,CADqD,CACF;;AACnD,QAAMC,GAAG,GAAI,qBAAoBH,WAAY,UAA7C;AAEA,QAAM,CAACI,SAAD,EAAYC,QAAZ,IAAwBV,QAAQ,CAAC,KAAD,CAAtC;AACA,QAAM,CAACW,IAAD,EAAOC,OAAP,IAAkBZ,QAAQ,CAAC,EAAD,CAAhC;;AAEA,QAAMa,QAAQ,GAAG,MAAM;AACrBH,IAAAA,QAAQ,CAAC,IAAD,CAAR;AACAI,IAAAA,KAAK,CAACN,GAAD,EAAM;AACTO,MAAAA,MAAM,EAAE,MADC;AAETC,MAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAejB,OAAf;AAFG,KAAN,CAAL,CAIGkB,IAJH,CAISC,GAAD,IAASA,GAAG,CAACC,IAAJ,EAJjB,EAKGF,IALH,CAKSR,IAAD,IAAU;AACdC,MAAAA,OAAO,CAACD,IAAD,CAAP;AACD,KAPH,EAQGW,OARH,CAQW,MAAM;AACbZ,MAAAA,QAAQ,CAAC,KAAD,CAAR;AACD,KAVH;AAWA,WAAOC,IAAP;AACD,GAdD;;AAeA,SAAO,CAACF,SAAD,EAAYc,IAAZ,CAAP,CAtBqD,CAsBlB;AACpC","sourcesContent":["import { useState } from \"react\";\n\nconst payload = {\n  operation: \"CREATEUSER\",\n  commands: [\"WITHPHONECONFIRMATION\", \"WITHPASSWORD\"],\n};\n\nexport function CreateDefaultUser(environment: string) {\n  process.env[\"NODE_TLS_REJECT_UNAUTHORIZED\"] = \"0\"; // to prevent SSL\n  const url = `https://ttk.armut.${environment}/operate`;\n\n  const [isLoading, setState] = useState(false);\n  const [user, setUser] = useState({});\n\n  const loadUser = () => {\n    setState(true);\n    fetch(url, {\n      method: \"POST\",\n      body: JSON.stringify(payload),\n    })\n      .then((res) => res.json())\n      .then((user) => {\n        setUser(user);\n      })\n      .finally(() => {\n        setState(false);\n      });\n    return user;\n  };\n  return [isLoading, load] as const; // infers [boolean, typeof load] instead of (boolean | typeof load)[]\n}\n"]},"metadata":{},"sourceType":"module"}