{"ast":null,"code":"var _jsxFileName = \"/Users/berkakgun/Desktop/ttk/ttkui/src/components/AuthGuard.tsx\";\nimport React, { useContext, useState } from \"react\";\nimport { UserContext } from \"core/store/ContextApi/Context\";\nimport { app } from \"core/db\";\nexport function useStitchAuth() {\n  const context = useContext(UserContext);\n\n  if (!context) {\n    throw new Error(`useStitchAuth must be used within a StitchAuthProvider`);\n  }\n\n  return context;\n}\nexport function AuthGuard(props) {\n  var _app$currentUser;\n\n  const [authState, setAuthState] = useState({\n    isLoggedIn: ((_app$currentUser = app.currentUser) === null || _app$currentUser === void 0 ? void 0 : _app$currentUser.state) === \"active\",\n    currentUser: app.currentUser\n  });\n\n  const handleLogout = () => {\n    var _app$currentUser2;\n\n    return (_app$currentUser2 = app.currentUser) === null || _app$currentUser2 === void 0 ? void 0 : _app$currentUser2.logOut;\n  };\n\n  const authInfo = React.useMemo(() => {\n    const {\n      isLoggedIn,\n      currentUser\n    } = authState;\n    const value = {\n      isLoggedIn,\n      currentUser,\n      actions: {\n        handleLogout,\n        setAuthState\n      }\n    };\n    return value;\n  }, [authState]);\n  return /*#__PURE__*/React.createElement(UserContext.Provider, {\n    value: authInfo,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 5\n    }\n  }, props.children);\n}","map":{"version":3,"sources":["/Users/berkakgun/Desktop/ttk/ttkui/src/components/AuthGuard.tsx"],"names":["React","useContext","useState","UserContext","app","useStitchAuth","context","Error","AuthGuard","props","authState","setAuthState","isLoggedIn","currentUser","state","handleLogout","logOut","authInfo","useMemo","value","actions","children"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,UAAhB,EAA4BC,QAA5B,QAA4C,OAA5C;AACA,SAASC,WAAT,QAA4B,+BAA5B;AACA,SAASC,GAAT,QAAoB,SAApB;AAEA,OAAO,SAASC,aAAT,GAAyB;AAC9B,QAAMC,OAAO,GAAGL,UAAU,CAACE,WAAD,CAA1B;;AACA,MAAI,CAACG,OAAL,EAAc;AACZ,UAAM,IAAIC,KAAJ,CAAW,wDAAX,CAAN;AACD;;AACD,SAAOD,OAAP;AACD;AAED,OAAO,SAASE,SAAT,CAAmBC,KAAnB,EAA+B;AAAA;;AACpC,QAAM,CAACC,SAAD,EAAYC,YAAZ,IAA4BT,QAAQ,CAAC;AACzCU,IAAAA,UAAU,EAAE,qBAAAR,GAAG,CAACS,WAAJ,sEAAiBC,KAAjB,MAA2B,QADE;AAEzCD,IAAAA,WAAW,EAAET,GAAG,CAACS;AAFwB,GAAD,CAA1C;;AAKA,QAAME,YAAY,GAAG;AAAA;;AAAA,gCAAMX,GAAG,CAACS,WAAV,sDAAM,kBAAiBG,MAAvB;AAAA,GAArB;;AACA,QAAMC,QAAQ,GAAGjB,KAAK,CAACkB,OAAN,CAAc,MAAM;AACnC,UAAM;AAAEN,MAAAA,UAAF;AAAcC,MAAAA;AAAd,QAA8BH,SAApC;AACA,UAAMS,KAAK,GAAG;AACZP,MAAAA,UADY;AAEZC,MAAAA,WAFY;AAGZO,MAAAA,OAAO,EAAE;AAAEL,QAAAA,YAAF;AAAgBJ,QAAAA;AAAhB;AAHG,KAAd;AAKA,WAAOQ,KAAP;AACD,GARgB,EAQd,CAACT,SAAD,CARc,CAAjB;AASA,sBACE,oBAAC,WAAD,CAAa,QAAb;AAAsB,IAAA,KAAK,EAAEO,QAA7B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGR,KAAK,CAACY,QADT,CADF;AAKD","sourcesContent":["import React, { useContext, useState } from \"react\";\nimport { UserContext } from \"core/store/ContextApi/Context\";\nimport { app } from \"core/db\";\n\nexport function useStitchAuth() {\n  const context = useContext(UserContext);\n  if (!context) {\n    throw new Error(`useStitchAuth must be used within a StitchAuthProvider`);\n  }\n  return context;\n}\n\nexport function AuthGuard(props: any) {\n  const [authState, setAuthState] = useState({\n    isLoggedIn: app.currentUser?.state === \"active\",\n    currentUser: app.currentUser,\n  });\n\n  const handleLogout = () => app.currentUser?.logOut;\n  const authInfo = React.useMemo(() => {\n    const { isLoggedIn, currentUser } = authState;\n    const value = {\n      isLoggedIn,\n      currentUser,\n      actions: { handleLogout, setAuthState },\n    };\n    return value;\n  }, [authState]);\n  return (\n    <UserContext.Provider value={authInfo}>\n      {props.children}\n    </UserContext.Provider>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}