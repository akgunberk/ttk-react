{"ast":null,"code":"var _jsxFileName = \"/Users/berkakgun/Desktop/ttk/ttkui/src/components/display/Auth/Login.tsx\";\nimport React, { useReducer } from \"react\";\nimport { Grid, Dimmer, Loader, Button } from \"semantic-ui-react\";\nimport Statistics from \"components/container/statistics\";\nimport { reducer } from \"components/hooks/loginReducer\";\nimport { LoginWithGoogle } from \"core/db\";\nexport const Login = props => {\n  const initialState = {\n    email: \"\",\n    password: \"\",\n    active: false,\n    error: \"\",\n    modal: false\n  };\n  const [state, dispatch] = useReducer(reducer, initialState);\n  return /*#__PURE__*/React.createElement(React.Fragment, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Dimmer, {\n    active: state.active,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Loader, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 9\n    }\n  })), /*#__PURE__*/React.createElement(Grid, {\n    columns: 1,\n    relaxed: \"very\",\n    stackable: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Grid.Column, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    onClick: () => LoginWithGoogle(),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 11\n    }\n  }, \"Login\"))), /*#__PURE__*/React.createElement(Statistics, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 7\n    }\n  }));\n};\nexport default Login;","map":{"version":3,"sources":["/Users/berkakgun/Desktop/ttk/ttkui/src/components/display/Auth/Login.tsx"],"names":["React","useReducer","Grid","Dimmer","Loader","Button","Statistics","reducer","LoginWithGoogle","Login","props","initialState","email","password","active","error","modal","state","dispatch"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,UAAhB,QAAkC,OAAlC;AACA,SAASC,IAAT,EAAeC,MAAf,EAAuBC,MAAvB,EAA+BC,MAA/B,QAA6C,mBAA7C;AACA,OAAOC,UAAP,MAAuB,iCAAvB;AACA,SAASC,OAAT,QAAwB,+BAAxB;AACA,SAASC,eAAT,QAAgC,SAAhC;AAEA,OAAO,MAAMC,KAAoB,GAAIC,KAAD,IAAgB;AAClD,QAAMC,YAAY,GAAG;AACnBC,IAAAA,KAAK,EAAE,EADY;AAEnBC,IAAAA,QAAQ,EAAE,EAFS;AAGnBC,IAAAA,MAAM,EAAE,KAHW;AAInBC,IAAAA,KAAK,EAAE,EAJY;AAKnBC,IAAAA,KAAK,EAAE;AALY,GAArB;AAOA,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBjB,UAAU,CAACM,OAAD,EAAUI,YAAV,CAApC;AAEA,sBACE,oBAAC,KAAD,CAAO,QAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,MAAD;AAAQ,IAAA,MAAM,EAAEM,KAAK,CAACH,MAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CADF,eAKE,oBAAC,IAAD;AAAM,IAAA,OAAO,EAAE,CAAf;AAAkB,IAAA,OAAO,EAAC,MAA1B;AAAiC,IAAA,SAAS,MAA1C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,IAAD,CAAM,MAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,MAAD;AAAQ,IAAA,OAAO,EAAE,MAAMN,eAAe,EAAtC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aADF,CADF,CALF,eAWE,oBAAC,UAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAXF,CADF;AAeD,CAzBM;AA2BP,eAAeC,KAAf","sourcesContent":["import React, { useReducer } from \"react\";\nimport { Grid, Dimmer, Loader, Button } from \"semantic-ui-react\";\nimport Statistics from \"components/container/statistics\";\nimport { reducer } from \"components/hooks/loginReducer\";\nimport { LoginWithGoogle } from \"core/db\";\n\nexport const Login: React.FC<any> = (props: any) => {\n  const initialState = {\n    email: \"\",\n    password: \"\",\n    active: false,\n    error: \"\",\n    modal: false,\n  };\n  const [state, dispatch] = useReducer(reducer, initialState);\n\n  return (\n    <React.Fragment>\n      <Dimmer active={state.active}>\n        <Loader />\n      </Dimmer>\n\n      <Grid columns={1} relaxed=\"very\" stackable>\n        <Grid.Column>\n          <Button onClick={() => LoginWithGoogle()}>Login</Button>\n        </Grid.Column>\n      </Grid>\n\n      <Statistics />\n    </React.Fragment>\n  );\n};\n\nexport default Login;\n"]},"metadata":{},"sourceType":"module"}